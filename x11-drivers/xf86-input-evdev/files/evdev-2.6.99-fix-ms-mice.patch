From: Andrew de los Reyes <adlr@chromium.org>
Date:   Thu May 24 13:14:42 2012 -0700
Subject: [PATCH] Fix scrolling on MS Wireless Mouse 3500

This particular mouse has a single absolute axis (ABS_VOLUME); I do
not know why; there does not seem to be any volume control on it. When
evdev sets up axes names, if any abosolute axis is present, then the
absolute labels are used ("Abs X", "Abs Y", "Abs Wheel", etc.). Chrome
does scrollingn by looking for the "Rel Wheel" valuator, which makes
sense (these are all relative values).

With this CL, we require that a device with relative axes not declare
ABS_VOLUME. It's a patch for this specific type of mouse.

BUG=chromium-os:31243
TEST=Tested MS Wireless Mouse 3500 to make sure scrolling worked well.
---
 src/evdev.c |   10 ++++++++++
 1 files changed, 10 insertions(+), 0 deletions(-)

diff --git a/src/evdev.c b/src/evdev.c
index d638dfc..75a5f7c 100644
--- a/src/evdev.c
+++ b/src/evdev.c
@@ -203,6 +203,11 @@ static inline void EvdevSetBit(unsigned long *array, int bit)
     array[bit / LONG_BITS] |= (1LL << (bit % LONG_BITS));
 }
 
+static inline void EvdevClearBit(unsigned long *array, int bit)
+{
+    array[bit / LONG_BITS] &= ~(1LL << (bit % LONG_BITS));
+}
+
 static int
 EvdevGetMajorMinor(InputInfoPtr pInfo)
 {
@@ -2292,6 +2297,11 @@ EvdevProbe(InputInfoPtr pInfo)
         }
     }
 
+    if (has_rel_axes) {
+        /* Don't honor ABS_VOLUME on rel devices (fixes a MS mouse) */
+        EvdevClearBit(pEvdev->abs_bitmask, ABS_VOLUME);
+    }
+
     for (i = 0; i < ABS_MAX; i++) {
         if (EvdevBitIsSet(pEvdev->abs_bitmask, i)) {
             has_abs_axes = TRUE;
-- 
1.7.7.3

