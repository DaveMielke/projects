diff --git a/pym/portage/dbapi/vartree.py.orig b/pym/portage/dbapi/vartree.py
index 48e128d..9e4dcd5 100644
--- a/pym/portage/dbapi/vartree.py.orig
+++ b/pym/portage/dbapi/vartree.py
@@ -149,7 +149,7 @@ class vardbapi(dbapi):
 			for x in (catdir, base):
 				os.utime(x, t)
 		except OSError:
-			os.makedirs(catdir)
+			ensure_dirs(catdir)
 
 	def cpv_exists(self, mykey):
 		"Tells us whether an actual ebuild exists on disk (no masking)"
@@ -168,7 +168,7 @@ class vardbapi(dbapi):
 
 	def cpv_inject(self, mycpv):
 		"injects a real package into our on-disk database; assumes mycpv is valid and doesn't already exist"
-		os.makedirs(self.getpath(mycpv))
+		ensure_dirs(self.getpath(mycpv))
 		counter = self.counter_tick(self.root, mycpv=mycpv)
 		# write local package counter so that emerge clean does the right thing
 		write_atomic(self.getpath(mycpv, filename="COUNTER"), str(counter))
@@ -206,7 +206,7 @@ class vardbapi(dbapi):
 			moves += 1
 			if not os.path.exists(self.getpath(mynewcat)):
 				#create the directory
-				os.makedirs(self.getpath(mynewcat))
+				ensure_dirs(self.getpath(mynewcat))
 			newpath = self.getpath(mynewcpv)
 			if os.path.exists(newpath):
 				#dest already exists; keep this puppy where it is.
@@ -2357,7 +2357,7 @@ class dblink(object):
 			self._eerror("preinst", lines)
 
 		if not os.path.exists(self.dbcatdir):
-			os.makedirs(self.dbcatdir)
+			ensure_dirs(self.dbcatdir)
 
 		otherversions = []
 		for v in self.vartree.dbapi.cp_list(self.mysplit[0]):
