####################################################################################
#
# CBSDK is spun off from the GCC5 template
#
####################################################################################

DEFINE CBSDK_IA32_PREFIX              = ENV(COREBOOT_SDK_PREFIX_x86_32)
DEFINE CBSDK_X64_PREFIX               = ENV(COREBOOT_SDK_PREFIX_x86_64)
DEFINE CBSDK_ARM_PREFIX               = ENV(COREBOOT_SDK_PREFIX_arm)
DEFINE CBSDK_AARCH64_PREFIX           = ENV(COREBOOT_SDK_PREFIX_arm64)

DEFINE CBSDK_IA32_CC_FLAGS            = DEF(GCC5_IA32_CC_FLAGS)
DEFINE CBSDK_X64_CC_FLAGS             = DEF(GCC5_X64_CC_FLAGS)
DEFINE CBSDK_IA32_X64_DLINK_COMMON    = DEF(GCC5_IA32_X64_DLINK_COMMON)
DEFINE CBSDK_IA32_X64_ASLDLINK_FLAGS  = DEF(GCC5_IA32_X64_ASLDLINK_FLAGS)
DEFINE CBSDK_IA32_X64_DLINK_FLAGS     = DEF(GCC5_IA32_X64_DLINK_FLAGS)
DEFINE CBSDK_IA32_DLINK2_FLAGS        = DEF(GCC5_IA32_DLINK2_FLAGS)
DEFINE CBSDK_X64_DLINK_FLAGS          = DEF(GCC5_X64_DLINK_FLAGS)
DEFINE CBSDK_X64_DLINK2_FLAGS         = DEF(GCC5_X64_DLINK2_FLAGS)
DEFINE CBSDK_ASM_FLAGS                = DEF(GCC5_ASM_FLAGS)
DEFINE CBSDK_ARM_ASM_FLAGS            = DEF(GCC5_ARM_ASM_FLAGS)
DEFINE CBSDK_AARCH64_ASM_FLAGS        = DEF(GCC5_AARCH64_ASM_FLAGS)
DEFINE CBSDK_ARM_CC_FLAGS             = DEF(GCC5_ARM_CC_FLAGS)
DEFINE CBSDK_ARM_CC_XIPFLAGS          = DEF(GCC5_ARM_CC_XIPFLAGS)
DEFINE CBSDK_AARCH64_CC_FLAGS         = DEF(GCC5_AARCH64_CC_FLAGS)
DEFINE CBSDK_AARCH64_CC_XIPFLAGS      = DEF(GCC5_AARCH64_CC_XIPFLAGS)
DEFINE CBSDK_ARM_DLINK_FLAGS          = DEF(GCC5_ARM_DLINK_FLAGS)
DEFINE CBSDK_ARM_DLINK2_FLAGS         = DEF(GCC5_ARM_DLINK2_FLAGS)
DEFINE CBSDK_AARCH64_DLINK_FLAGS      = DEF(GCC5_AARCH64_DLINK_FLAGS)
DEFINE CBSDK_AARCH64_DLINK2_FLAGS     = DEF(GCC5_AARCH64_DLINK2_FLAGS)
DEFINE CBSDK_ARM_ASLDLINK_FLAGS       = DEF(GCC5_ARM_ASLDLINK_FLAGS)
DEFINE CBSDK_AARCH64_ASLDLINK_FLAGS   = DEF(GCC5_AARCH64_ASLDLINK_FLAGS)

####################################################################################
#
# GCC 5 - This configuration is used to compile under Linux to produce
#         PE/COFF binaries using GCC 5
#
####################################################################################
*_CBSDK_*_*_FAMILY                = GCC

*_CBSDK_*_MAKE_PATH               = make
*_CBSDK_*_*_DLL                   = ENV(CBSDK_DLL)
*_CBSDK_*_ASL_PATH                = DEF(UNIX_IASL_BIN)

*_CBSDK_*_PP_FLAGS                = DEF(GCC_PP_FLAGS)
*_CBSDK_*_ASLPP_FLAGS             = DEF(GCC_ASLPP_FLAGS)
*_CBSDK_*_ASLCC_FLAGS             = DEF(GCC_ASLCC_FLAGS)
*_CBSDK_*_VFRPP_FLAGS             = DEF(GCC_VFRPP_FLAGS)
*_CBSDK_*_APP_FLAGS               =
*_CBSDK_*_ASL_FLAGS               = DEF(IASL_FLAGS)
*_CBSDK_*_ASL_OUTFLAGS            = DEF(IASL_OUTFLAGS)

##################
# CBSDK IA32 definitions
##################
*_CBSDK_IA32_OBJCOPY_PATH         = DEF(CBSDK_IA32_PREFIX)objcopy
*_CBSDK_IA32_CC_PATH              = DEF(CBSDK_IA32_PREFIX)gcc
*_CBSDK_IA32_SLINK_PATH           = DEF(CBSDK_IA32_PREFIX)gcc-ar
*_CBSDK_IA32_DLINK_PATH           = DEF(CBSDK_IA32_PREFIX)gcc
*_CBSDK_IA32_ASLDLINK_PATH        = DEF(CBSDK_IA32_PREFIX)gcc
*_CBSDK_IA32_ASM_PATH             = DEF(CBSDK_IA32_PREFIX)gcc
*_CBSDK_IA32_PP_PATH              = DEF(CBSDK_IA32_PREFIX)gcc
*_CBSDK_IA32_VFRPP_PATH           = DEF(CBSDK_IA32_PREFIX)gcc
*_CBSDK_IA32_ASLCC_PATH           = DEF(CBSDK_IA32_PREFIX)gcc
*_CBSDK_IA32_ASLPP_PATH           = DEF(CBSDK_IA32_PREFIX)gcc
*_CBSDK_IA32_RC_PATH              = DEF(CBSDK_IA32_PREFIX)objcopy

*_CBSDK_IA32_ASLCC_FLAGS          = DEF(GCC_ASLCC_FLAGS) -m32 -fno-lto
*_CBSDK_IA32_ASLDLINK_FLAGS       = DEF(CBSDK_IA32_X64_ASLDLINK_FLAGS) -Wl,-m,elf_i386
*_CBSDK_IA32_ASM_FLAGS            = DEF(CBSDK_ASM_FLAGS) -m32 -march=i386
*_CBSDK_IA32_DLINK2_FLAGS         = DEF(CBSDK_IA32_DLINK2_FLAGS)
*_CBSDK_IA32_RC_FLAGS             = DEF(GCC_IA32_RC_FLAGS)
*_CBSDK_IA32_OBJCOPY_FLAGS        =
*_CBSDK_IA32_NASM_FLAGS           = -f elf32

  DEBUG_CBSDK_IA32_CC_FLAGS       = DEF(CBSDK_IA32_CC_FLAGS) -flto -Os
  DEBUG_CBSDK_IA32_DLINK_FLAGS    = DEF(CBSDK_IA32_X64_DLINK_FLAGS) -flto -Os -Wl,-m,elf_i386,--oformat=elf32-i386

RELEASE_CBSDK_IA32_CC_FLAGS       = DEF(CBSDK_IA32_CC_FLAGS) -flto -Os -Wno-unused-but-set-variable
RELEASE_CBSDK_IA32_DLINK_FLAGS    = DEF(CBSDK_IA32_X64_DLINK_FLAGS) -flto -Os -Wl,-m,elf_i386,--oformat=elf32-i386

  NOOPT_CBSDK_IA32_CC_FLAGS       = DEF(CBSDK_IA32_CC_FLAGS) -O0
  NOOPT_CBSDK_IA32_DLINK_FLAGS    = DEF(CBSDK_IA32_X64_DLINK_FLAGS) -Wl,-m,elf_i386,--oformat=elf32-i386 -O0

##################
# CBSDK X64 definitions
##################
*_CBSDK_X64_OBJCOPY_PATH          = DEF(CBSDK_X64_PREFIX)objcopy
*_CBSDK_X64_CC_PATH               = DEF(CBSDK_X64_PREFIX)gcc
*_CBSDK_X64_SLINK_PATH            = DEF(CBSDK_X64_PREFIX)gcc-ar
*_CBSDK_X64_DLINK_PATH            = DEF(CBSDK_X64_PREFIX)gcc
*_CBSDK_X64_ASLDLINK_PATH         = DEF(CBSDK_X64_PREFIX)gcc
*_CBSDK_X64_ASM_PATH              = DEF(CBSDK_X64_PREFIX)gcc
*_CBSDK_X64_PP_PATH               = DEF(CBSDK_X64_PREFIX)gcc
*_CBSDK_X64_VFRPP_PATH            = DEF(CBSDK_X64_PREFIX)gcc
*_CBSDK_X64_ASLCC_PATH            = DEF(CBSDK_X64_PREFIX)gcc
*_CBSDK_X64_ASLPP_PATH            = DEF(CBSDK_X64_PREFIX)gcc
*_CBSDK_X64_RC_PATH               = DEF(CBSDK_X64_PREFIX)objcopy

*_CBSDK_X64_ASLCC_FLAGS           = DEF(GCC_ASLCC_FLAGS) -m64 -fno-lto
*_CBSDK_X64_ASLDLINK_FLAGS        = DEF(CBSDK_IA32_X64_ASLDLINK_FLAGS) -Wl,-m,elf_x86_64
*_CBSDK_X64_ASM_FLAGS             = DEF(CBSDK_ASM_FLAGS) -m64
*_CBSDK_X64_DLINK2_FLAGS          = DEF(CBSDK_X64_DLINK2_FLAGS)
*_CBSDK_X64_RC_FLAGS              = DEF(GCC_X64_RC_FLAGS)
*_CBSDK_X64_OBJCOPY_FLAGS         =
*_CBSDK_X64_NASM_FLAGS            = -f elf64

  DEBUG_CBSDK_X64_CC_FLAGS        = DEF(CBSDK_X64_CC_FLAGS) -flto -DUSING_LTO -Os
  DEBUG_CBSDK_X64_DLINK_FLAGS     = DEF(CBSDK_X64_DLINK_FLAGS) -flto -Os

RELEASE_CBSDK_X64_CC_FLAGS        = DEF(CBSDK_X64_CC_FLAGS) -flto -DUSING_LTO -Os -Wno-unused-but-set-variable
RELEASE_CBSDK_X64_DLINK_FLAGS     = DEF(CBSDK_X64_DLINK_FLAGS) -flto -Os

  NOOPT_CBSDK_X64_CC_FLAGS        = DEF(CBSDK_X64_CC_FLAGS) -O0
  NOOPT_CBSDK_X64_DLINK_FLAGS     = DEF(CBSDK_X64_DLINK_FLAGS) -O0

##################
# CBSDK ARM definitions
##################
*_CBSDK_ARM_CC_PATH               = ENV(CBSDK_ARM_PREFIX)gcc
*_CBSDK_ARM_SLINK_PATH            = ENV(CBSDK_ARM_PREFIX)gcc-ar
*_CBSDK_ARM_DLINK_PATH            = ENV(CBSDK_ARM_PREFIX)gcc
*_CBSDK_ARM_ASLDLINK_PATH         = ENV(CBSDK_ARM_PREFIX)gcc
*_CBSDK_ARM_ASM_PATH              = ENV(CBSDK_ARM_PREFIX)gcc
*_CBSDK_ARM_PP_PATH               = ENV(CBSDK_ARM_PREFIX)gcc
*_CBSDK_ARM_VFRPP_PATH            = ENV(CBSDK_ARM_PREFIX)gcc
*_CBSDK_ARM_ASLCC_PATH            = ENV(CBSDK_ARM_PREFIX)gcc
*_CBSDK_ARM_ASLPP_PATH            = ENV(CBSDK_ARM_PREFIX)gcc
*_CBSDK_ARM_RC_PATH               = ENV(CBSDK_ARM_PREFIX)objcopy

*_CBSDK_ARM_ARCHCC_FLAGS          = -mthumb
*_CBSDK_ARM_ASLCC_FLAGS           = DEF(GCC_ASLCC_FLAGS)
*_CBSDK_ARM_ASLDLINK_FLAGS        = DEF(CBSDK_ARM_ASLDLINK_FLAGS)
*_CBSDK_ARM_ASM_FLAGS             = DEF(CBSDK_ARM_ASM_FLAGS)
*_CBSDK_ARM_DLINK2_FLAGS          = DEF(CBSDK_ARM_DLINK2_FLAGS)
*_CBSDK_ARM_PLATFORM_FLAGS        = -march=armv7-a
*_CBSDK_ARM_PP_FLAGS              = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_PP_FLAGS)
*_CBSDK_ARM_RC_FLAGS              = DEF(GCC_ARM_RC_FLAGS)
*_CBSDK_ARM_VFRPP_FLAGS           = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_VFRPP_FLAGS)
*_CBSDK_ARM_CC_XIPFLAGS           = DEF(CBSDK_ARM_CC_XIPFLAGS)

  DEBUG_CBSDK_ARM_CC_FLAGS        = DEF(CBSDK_ARM_CC_FLAGS) -O0
  DEBUG_CBSDK_ARM_DLINK_FLAGS     = DEF(CBSDK_ARM_DLINK_FLAGS)

RELEASE_CBSDK_ARM_CC_FLAGS        = DEF(CBSDK_ARM_CC_FLAGS) -flto -Wno-unused-but-set-variable
RELEASE_CBSDK_ARM_DLINK_FLAGS     = DEF(CBSDK_ARM_DLINK_FLAGS) -flto -Os -L$(WORKSPACE)/ArmPkg/Library/GccLto -llto-arm -Wl,-plugin-opt=-pass-through=-llto-arm

  NOOPT_CBSDK_ARM_CC_FLAGS        = DEF(CBSDK_ARM_CC_FLAGS) -O0
  NOOPT_CBSDK_ARM_DLINK_FLAGS     = DEF(CBSDK_ARM_DLINK_FLAGS) -O0

##################
# CBSDK AARCH64 definitions
##################
*_CBSDK_AARCH64_CC_PATH           = ENV(CBSDK_AARCH64_PREFIX)gcc
*_CBSDK_AARCH64_SLINK_PATH        = ENV(CBSDK_AARCH64_PREFIX)gcc-ar
*_CBSDK_AARCH64_DLINK_PATH        = ENV(CBSDK_AARCH64_PREFIX)gcc
*_CBSDK_AARCH64_ASLDLINK_PATH     = ENV(CBSDK_AARCH64_PREFIX)gcc
*_CBSDK_AARCH64_ASM_PATH          = ENV(CBSDK_AARCH64_PREFIX)gcc
*_CBSDK_AARCH64_PP_PATH           = ENV(CBSDK_AARCH64_PREFIX)gcc
*_CBSDK_AARCH64_VFRPP_PATH        = ENV(CBSDK_AARCH64_PREFIX)gcc
*_CBSDK_AARCH64_ASLCC_PATH        = ENV(CBSDK_AARCH64_PREFIX)gcc
*_CBSDK_AARCH64_ASLPP_PATH        = ENV(CBSDK_AARCH64_PREFIX)gcc
*_CBSDK_AARCH64_RC_PATH           = ENV(CBSDK_AARCH64_PREFIX)objcopy

*_CBSDK_AARCH64_ASLCC_FLAGS       = DEF(GCC_ASLCC_FLAGS)
*_CBSDK_AARCH64_ASLDLINK_FLAGS    = DEF(CBSDK_AARCH64_ASLDLINK_FLAGS)
*_CBSDK_AARCH64_ASM_FLAGS         = DEF(CBSDK_AARCH64_ASM_FLAGS)
*_CBSDK_AARCH64_DLINK2_FLAGS      = DEF(CBSDK_AARCH64_DLINK2_FLAGS)
*_CBSDK_AARCH64_PLATFORM_FLAGS    =
*_CBSDK_AARCH64_PP_FLAGS          = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_PP_FLAGS)
*_CBSDK_AARCH64_RC_FLAGS          = DEF(GCC_AARCH64_RC_FLAGS)
*_CBSDK_AARCH64_VFRPP_FLAGS       = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_VFRPP_FLAGS)
*_CBSDK_AARCH64_CC_XIPFLAGS       = DEF(CBSDK_AARCH64_CC_XIPFLAGS)

  DEBUG_CBSDK_AARCH64_CC_FLAGS    = DEF(CBSDK_AARCH64_CC_FLAGS) -O0 -mcmodel=small
  DEBUG_CBSDK_AARCH64_DLINK_FLAGS = DEF(CBSDK_AARCH64_DLINK_FLAGS) -z common-page-size=0x1000
  DEBUG_CBSDK_AARCH64_DLINK_XIPFLAGS = -z common-page-size=0x20

RELEASE_CBSDK_AARCH64_CC_FLAGS    = DEF(CBSDK_AARCH64_CC_FLAGS) -flto -Wno-unused-but-set-variable -mcmodel=tiny -fomit-frame-pointer
RELEASE_CBSDK_AARCH64_DLINK_FLAGS = DEF(CBSDK_AARCH64_DLINK_FLAGS) -flto -Os -L$(WORKSPACE)/ArmPkg/Library/GccLto -llto-aarch64 -Wl,-plugin-opt=-pass-through=-llto-aarch64 -Wno-lto-type-mismatch

  NOOPT_CBSDK_AARCH64_CC_FLAGS    = DEF(CBSDK_AARCH64_CC_FLAGS) -O0 -mcmodel=small
  NOOPT_CBSDK_AARCH64_DLINK_FLAGS = DEF(CBSDK_AARCH64_DLINK_FLAGS) -z common-page-size=0x1000 -O0
  NOOPT_CBSDK_AARCH64_DLINK_XIPFLAGS = -z common-page-size=0x20 -O0
