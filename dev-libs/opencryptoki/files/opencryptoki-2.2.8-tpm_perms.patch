diff -upr opencryptoki-2.2.8.orig/usr/lib/pkcs11/tpm_stdll/loadsave.c opencryptoki-2.2.8/usr/lib/pkcs11/tpm_stdll/loadsave.c
--- opencryptoki-2.2.8.orig/usr/lib/pkcs11/tpm_stdll/loadsave.c	2011-06-03 22:58:03.261488007 -0700
+++ opencryptoki-2.2.8/usr/lib/pkcs11/tpm_stdll/loadsave.c	2011-06-06 13:58:33.652327472 -0700
@@ -329,23 +329,15 @@ extern CK_BYTE master_key_private[MK_SIZ
 void
 set_perm(int file)
 {
-#if 0
    struct group *grp;
 
-   // Set absolute permissions of rw-rw-r--
-   //fchmod(file,S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP|S_IROTH);
-#endif
-   /* In the TPM token, with per user data stores, we don't share the token
-    * object amongst a group. In fact, we want to restrict access to a single
-    * user */
-   fchmod(file,S_IRUSR|S_IWUSR);
+   // Set absolute permissions of rw-rw----
+   fchmod(file,S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP);
 
-#if 0
    grp = getgrnam("pkcs11"); // Obtain the group id
    if (grp){
       fchown(file,getuid(),grp->gr_gid);  // set ownership to root, and pkcs11 group
    }
-#endif
 }
 
 //
diff -upr opencryptoki-2.2.8.orig/usr/lib/pkcs11/tpm_stdll/utility.c opencryptoki-2.2.8/usr/lib/pkcs11/tpm_stdll/utility.c
--- opencryptoki-2.2.8.orig/usr/lib/pkcs11/tpm_stdll/utility.c	2011-06-03 22:58:03.261488007 -0700
+++ opencryptoki-2.2.8/usr/lib/pkcs11/tpm_stdll/utility.c	2011-06-06 14:02:12.721543663 -0700
@@ -976,7 +976,7 @@ attach_shm()
 		char		*b2 = NULL;
 		int		fd = -1, i;
 		struct passwd	*pw = NULL;
-		mode_t		mode = (S_IRUSR | S_IWUSR | S_IXUSR);
+		mode_t		mode = (S_IRWXU | S_IRWXG);
 		CK_RV		rc;
 
 		/* manpage decrees that errno must be set to 0 if we want to check it on
@@ -1047,6 +1047,10 @@ attach_shm()
 			close(fd);
 		}
 
+		// For pkcs11 group to be able to read data from the token, the map file for
+		// communicating with pkcsslotd also needs to be writable by pkcs11 group.
+		mode = (S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP);
+
 		// STAT the file to see if it exists... If not, then create it
 		fname = malloc(strlen(dirname)+strlen(FILENAME)+100);
 		if (fname ) {
