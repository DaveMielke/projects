This ubsan patch is part of the upstream patch
885b612f74f133678bf82808c589331e4c59dad9

The actual change inside google is
https://critique.corp.google.com/#review/83561597

The original commit message is
Fix undefined behaviour in shift. A shift has undefined behaviour if the mathematical result
(lhs * 2^{rhs}) doesn't fit in the range of the resulting type. In other words, you can't left
shift into the sign bit of a signed integer type. Fix this by casting to unsigned where needed.
--- .a/src/google/protobuf/wire_format_lite.h	2015-10-21 10:14:04.192924979 -0700
+++ .b/src/google/protobuf/wire_format_lite.h	2015-10-21 10:14:40.804793343 -0700
@@ -638,7 +638,7 @@
 
 inline uint32 WireFormatLite::ZigZagEncode32(int32 n) {
   // Note:  the right-shift must be arithmetic
-  return (n << 1) ^ (n >> 31);
+  return (static_cast<uint32>(n) << 1) ^ (n >> 31);
 }
 
 inline int32 WireFormatLite::ZigZagDecode32(uint32 n) {
@@ -647,7 +647,7 @@
 
 inline uint64 WireFormatLite::ZigZagEncode64(int64 n) {
   // Note:  the right-shift must be arithmetic
-  return (n << 1) ^ (n >> 63);
+  return (static_cast<uint64>(n) << 1) ^ (n >> 63);
 }
 
 inline int64 WireFormatLite::ZigZagDecode64(uint64 n) {
