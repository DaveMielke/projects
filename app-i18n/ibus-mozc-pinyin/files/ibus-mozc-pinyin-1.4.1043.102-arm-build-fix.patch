Fixes build break on ARM environment.

abs(INT64_VARIABLE) returns 32bit integer on ARM. To avoid this issue, we use
llabs instead of abs.

diff -urN ../mozc_origin/unix/ibus/mozc_engine.cc ./unix/ibus/mozc_engine.cc
--- ../mozc_origin/unix/ibus/mozc_engine.cc	2012-04-09 12:28:03.815173348 +0900
+++ ./unix/ibus/mozc_engine.cc	2012-04-09 12:28:50.835041662 +0900
@@ -214,16 +214,16 @@
 bool GetSafeDelta(guint from, guint to, int32 *delta) {
   DCHECK(delta);
 
-  COMPILE_ASSERT(sizeof(int64) > sizeof(guint), int64_guint_check);
+  COMPILE_ASSERT(sizeof(int64) == sizeof(llabs(0)), int64_guint_check);
   const int64 kInt32AbsMax =
-      abs(static_cast<int64>(numeric_limits<int32>::max()));
+      llabs(static_cast<int64>(numeric_limits<int32>::max()));
   const int64 kInt32AbsMin =
-      abs(static_cast<int64>(numeric_limits<int32>::min()));
+      llabs(static_cast<int64>(numeric_limits<int32>::min()));
   const int64 kInt32SafeAbsMax =
       min(kInt32AbsMax, kInt32AbsMin);
 
   const int64 diff = static_cast<int64>(from) - static_cast<int64>(to);
-  if (abs(diff) > kInt32SafeAbsMax) {
+  if (llabs(diff) > kInt32SafeAbsMax) {
     return false;
   }
 
