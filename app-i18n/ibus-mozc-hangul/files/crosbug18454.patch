diff -urN ../mozc-1.1.785.102.old/hangul/session.cc ./hangul/session.cc
--- ../mozc-1.1.785.102.old/hangul/session.cc	2011-08-04 22:10:15.874392300 +0900
+++ ./hangul/session.cc	2011-08-04 22:13:49.064201045 +0900
@@ -462,7 +462,7 @@
   return true;
 }
 
-void Session::ProcessHanjaSelection(commands::Command *command) {
+bool Session::ProcessHanjaSelection(commands::Command *command) {
   const KeyEvent &key_event = command->input().key();
 
   // When hanja selection window is shown, user can only do selecting hanja or
@@ -478,39 +478,38 @@
     } else {
       UpdateCandidate(DO_NOT_CHANGE_SELECTED_CANDIDATE, command);
     }
-    return;
+    return true;
   }
 
   if (key_event.has_special_key()) {
     switch (key_event.special_key()) {
       case KeyEvent::BACKSPACE:
-        ProcessBSKey(command);
-        return;
+        return ProcessBSKey(command);
         break;
       case KeyEvent::LEFT:
         UpdateCandidate(PREV_CANDIDATE, command);
-        return;
+        return true;
         break;
       case KeyEvent::RIGHT:
         UpdateCandidate(NEXT_CANDIDATE, command);
-        return;
+        return true;
         break;
       case KeyEvent::UP:
         UpdateCandidate(PREV_PAGE_CANDIDATE, command);
-        return;
+        return true;
         break;
       case KeyEvent::DOWN:
         UpdateCandidate(NEXT_PAGE_CANDIDATE, command);
-        return;
+        return true;
         break;
       case KeyEvent::ENTER:
         CommitSelectedCandidate(command);
-        return;
+        return true;
         break;
       case KeyEvent::HANJA:
       case KeyEvent::ESCAPE:
         CancelHanjaSelection(command->mutable_output());
-        return;
+        return true;
         break;
       default:
         // Other special key treat as normal keys.
@@ -519,11 +518,12 @@
   }
 
   if (current_mode_ == kHanjaLockMode) {
-    ProcessKeyEvent(command);
+    return ProcessKeyEvent(command);
   } else {
     // Other keys are not handled when hanja selection window is shown in hangul
     // mode.
     UpdateCandidate(DO_NOT_CHANGE_SELECTED_CANDIDATE, command);
+    return true;
   }
 }
 
@@ -630,7 +630,12 @@
   commands::Output *output = command->mutable_output();
 
   if (!::hangul_ic_process(context_, key_event.key_code())) {
-    CancelContext(output);
+    string commit, preedit;
+    GetCommitString(&commit);
+    FlushPreedit(&preedit);
+    preedit.append(commit);
+    SetResultToOutput(preedit, output);
+    ResetHanjaList();
     return false;
   }
   string preedit, committed;
@@ -663,8 +668,7 @@
 
   if (IsHanjaSelectionMode()) {
     // All key is consumed on hanja selection mode.
-    ProcessHanjaSelection(command);
-    return true;
+    return ProcessHanjaSelection(command);
   }
   if (key_event.modifier_keys_size() != 0) {
     CancelContext(output);
diff -urN ../mozc-1.1.785.102.old/hangul/session.h ./hangul/session.h
--- ../mozc-1.1.785.102.old/hangul/session.h	2011-08-04 22:10:15.874392300 +0900
+++ ./hangul/session.h	2011-08-04 22:11:07.594248305 +0900
@@ -162,7 +162,7 @@
 
   // Processes selection of Hanja list. The return value means as same as
   // ProcessHangulMode().
-  void ProcessHanjaSelection(commands::Command *command);
+  bool ProcessHanjaSelection(commands::Command *command);
 
   // Process Hanja-lock Mode. If key event would be consumed, this function
   // returns true, otherwise returns false.
