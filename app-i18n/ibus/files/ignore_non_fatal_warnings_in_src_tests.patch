diff -uNr ibus-1.3.99.20110425.orig/src/tests/fatal_handler.h ibus-1.3.99.20110425/src/tests/fatal_handler.h
--- ibus-1.3.99.20110425.orig/src/tests/fatal_handler.h	1970-01-01 09:00:00.000000000 +0900
+++ ibus-1.3.99.20110425/src/tests/fatal_handler.h	2011-04-25 12:55:32.995989682 +0900
@@ -0,0 +1,25 @@
+
+/* A callback function for g_test_log_set_fatal_handler().
+ * See ignore_machine_id_warning () below for details. */
+static gboolean
+fatal_handler(const gchar *log_domain,
+              GLogLevelFlags log_level,
+              const gchar *message,
+              gpointer user_data)
+{
+    if (g_str_has_prefix (message, "Unable to load /var/lib/dbus/machine-id"))
+        return FALSE; /* do not call abort. */
+    return TRUE;
+}
+
+/* Ignore the "Unable to load /var/lib/dbus/machine-id" g_warning (). The chroot
+ * environment does not have the file, but we can execute the tests without a
+ * problem. Notice: (1) This function should be called before the first
+ * ibus_get_local_machine_id() call. (2) g_test_log_set_fatal_handler will be
+ * reset every time when you enter a glib test function.
+ */
+static void
+ignore_machine_id_warning (void)
+{
+    g_test_log_set_fatal_handler (fatal_handler, NULL);
+}
diff -uNr ibus-1.3.99.20110425.orig/src/tests/ibus-bus.c ibus-1.3.99.20110425/src/tests/ibus-bus.c
--- ibus-1.3.99.20110425.orig/src/tests/ibus-bus.c	2011-03-28 15:20:31.000000000 +0900
+++ ibus-1.3.99.20110425/src/tests/ibus-bus.c	2011-04-25 12:55:36.485675034 +0900
@@ -2,6 +2,7 @@
 
 #include <string.h>
 #include "ibus.h"
+#include "tests/fatal_handler.h"
 
 static IBusBus *bus;
 
@@ -575,6 +576,8 @@
     g_type_init ();
     g_test_init (&argc, &argv, NULL);
     ibus_init ();
+
+    ignore_machine_id_warning ();
     bus = ibus_bus_new ();
 
     g_test_add_func ("/ibus/list-engines", test_list_engines);
diff -uNr ibus-1.3.99.20110425.orig/src/tests/ibus-configservice.c ibus-1.3.99.20110425/src/tests/ibus-configservice.c
--- ibus-1.3.99.20110425.orig/src/tests/ibus-configservice.c	2011-03-10 11:02:18.000000000 +0900
+++ ibus-1.3.99.20110425/src/tests/ibus-configservice.c	2011-04-25 12:55:42.605743604 +0900
@@ -1,4 +1,5 @@
 #include <ibus.h>
+#include "tests/fatal_handler.h"
 
 static gboolean
 timeout_cb (gpointer data)
@@ -19,6 +20,8 @@
 static void
 test_configservice (void)
 {
+    ignore_machine_id_warning ();
+
     IBusBus *bus = ibus_bus_new ();
     IBusConfigService *config = ibus_config_service_new (ibus_bus_get_connection (bus));
     ibus_bus_request_name (bus, "test.config", 0);
diff -uNr ibus-1.3.99.20110425.orig/src/tests/ibus-factory.c ibus-1.3.99.20110425/src/tests/ibus-factory.c
--- ibus-1.3.99.20110425.orig/src/tests/ibus-factory.c	2011-03-10 11:02:18.000000000 +0900
+++ ibus-1.3.99.20110425/src/tests/ibus-factory.c	2011-04-25 12:55:45.285695652 +0900
@@ -1,4 +1,5 @@
 #include <ibus.h>
+#include "tests/fatal_handler.h"
 
 static gboolean
 timeout_cb (gpointer data)
@@ -19,6 +20,8 @@
 static void
 test_factory (void)
 {
+    ignore_machine_id_warning ();
+
     IBusBus *bus = ibus_bus_new ();
     IBusFactory *factory = ibus_factory_new (ibus_bus_get_connection (bus));
     ibus_bus_request_name (bus, "test.factory", 0);
diff -uNr ibus-1.3.99.20110425.orig/src/tests/ibus-inputcontext-create.c ibus-1.3.99.20110425/src/tests/ibus-inputcontext-create.c
--- ibus-1.3.99.20110425.orig/src/tests/ibus-inputcontext-create.c	2011-04-20 12:34:25.000000000 +0900
+++ ibus-1.3.99.20110425/src/tests/ibus-inputcontext-create.c	2011-04-25 12:54:03.675733415 +0900
@@ -21,6 +21,7 @@
 
 #include <string.h>
 #include "ibus.h"
+#include "tests/fatal_handler.h"
 
 static IBusBus *bus = NULL;
 
@@ -96,6 +97,8 @@
     g_type_init ();
     g_test_init (&argc, &argv, NULL);
     ibus_init ();
+
+    ignore_machine_id_warning ();
     bus = ibus_bus_new ();
 
     g_test_add_func ("/ibus/input_context_async_create_success", test_success);
diff -uNr ibus-1.3.99.20110425.orig/src/tests/ibus-inputcontext.c ibus-1.3.99.20110425/src/tests/ibus-inputcontext.c
--- ibus-1.3.99.20110425.orig/src/tests/ibus-inputcontext.c	2011-03-28 15:20:31.000000000 +0900
+++ ibus-1.3.99.20110425/src/tests/ibus-inputcontext.c	2011-04-25 12:37:00.705757745 +0900
@@ -34,6 +34,8 @@
 {
     if (!g_strcmp0 (message, "org.freedesktop.IBus.InputContext.GetEngine: GDBus.Error:org.freedesktop.DBus.Error.Failed: Input context does not have engine."))
         return FALSE; /* do not call abort. */
+    if (g_str_has_prefix (message, "Unable to load /var/lib/dbus/machine-id"))
+        return FALSE; /* do not call abort. */
     return TRUE;
 }
 
@@ -246,6 +248,8 @@
     g_type_init ();
     g_test_init (&argc, &argv, NULL);
     ibus_init ();
+
+    g_test_log_set_fatal_handler (fatal_handler, NULL);
     bus = ibus_bus_new ();
 
     g_test_add_func ("/ibus/input_context", test_input_context);
diff -uNr ibus-1.3.99.20110425.orig/src/tests/ibus-serializable.c ibus-1.3.99.20110425/src/tests/ibus-serializable.c
--- ibus-1.3.99.20110425.orig/src/tests/ibus-serializable.c	2011-03-10 11:02:18.000000000 +0900
+++ ibus-1.3.99.20110425/src/tests/ibus-serializable.c	2011-04-25 12:55:39.815750835 +0900
@@ -1,4 +1,5 @@
 #include "ibus.h"
+#include "tests/fatal_handler.h"
 
 void g_variant_type_info_assert_no_infos (void);
 
@@ -29,6 +30,7 @@
 static void
 test_varianttypeinfo (void)
 {
+    ignore_machine_id_warning ();
     g_variant_type_info_assert_no_infos ();
 }
 
