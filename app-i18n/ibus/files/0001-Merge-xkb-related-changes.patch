From 32de053ac3f812e7c7e2bed13a46dc23249e7557 Mon Sep 17 00:00:00 2001
From: James Su <suzhe@chromium.org>
Date: Tue, 27 Apr 2010 16:43:41 -0700
Subject: [PATCH 01/15] Merge xkb related changes.

Add back "next_engine" and "prev_engine" config for backward compatibility.

Fix ui to support basic xkb layout switching.

Fix enable_by_default thing.

Add enable_by_default config. When it's true then the newly created input context will be enabled by default.

XKB integration 2nd version - part 1.

Review URL: http://codereview.chromium.org/1784007
---
 ibus/bus.py             |    3 +++
 ibus/interface/iibus.py |    4 +++-
 setup/setup.ui          |    3 ---
 ui/gtk/panel.py         |   40 +++++++++++++++++++++++++++++++++++++++-
 4 files changed, 45 insertions(+), 5 deletions(-)

diff --git a/ibus/bus.py b/ibus/bus.py
index 15a8fd3..74b6820 100644
--- a/ibus/bus.py
+++ b/ibus/bus.py
@@ -154,6 +154,9 @@ class Bus(object.Object):
             data = serializable.deserialize_object(data)
         return data
 
+    def get_use_sys_layout(self):
+        return self.__ibus.GetUseSysLayout();
+
     def introspect_ibus(self):
         return self.__ibus.Introspect()
 
diff --git a/ibus/interface/iibus.py b/ibus/interface/iibus.py
index e63caa3..fba7ad4 100644
--- a/ibus/interface/iibus.py
+++ b/ibus/interface/iibus.py
@@ -72,6 +72,8 @@ class IIBus(dbus.service.Object):
     @method(in_signature="v", out_signature="v")
     def Ping(self, data, dbusconn): pass
 
+    @method(out_signature="b")
+    def GetUseSysLayout(self, dbusconn): pass
+
     @signal(signature="")
     def RegistryChanged(self): pass
-
diff --git a/setup/setup.ui b/setup/setup.ui
index 0e31a78..135fc10 100644
--- a/setup/setup.ui
+++ b/setup/setup.ui
@@ -129,7 +129,6 @@
                                 <child>
                                   <object class="GtkLabel" id="label9">
                                     <property name="visible">True</property>
-                                    <property name="sensitive">False</property>
                                     <property name="tooltip_text" translatable="yes">The shortcut keys for switching to previous input method in the list</property>
                                     <property name="xalign">0</property>
                                     <property name="label" translatable="yes">Previous input method:</property>
@@ -216,7 +215,6 @@
                                     <child>
                                       <object class="GtkEntry" id="entry_prev_engine">
                                         <property name="visible">True</property>
-                                        <property name="sensitive">False</property>
                                         <property name="can_focus">True</property>
                                         <property name="editable">False</property>
                                       </object>
@@ -228,7 +226,6 @@
                                       <object class="GtkButton" id="button_prev_engine">
                                         <property name="label" translatable="yes">...</property>
                                         <property name="visible">True</property>
-                                        <property name="sensitive">False</property>
                                         <property name="can_focus">True</property>
                                         <property name="receives_default">False</property>
                                         <property name="use_underline">True</property>
diff --git a/ui/gtk/panel.py b/ui/gtk/panel.py
index 2c6a505..566a261 100644
--- a/ui/gtk/panel.py
+++ b/ui/gtk/panel.py
@@ -69,6 +69,11 @@ class Panel(ibus.PanelBase):
         self.__data_dir = path.join(self.__prefix, "share", "ibus")
         # self.__icons_dir = path.join(self.__data_dir, "icons")
         self.__setup_cmd = path.join(self.__prefix, "bin", "ibus-setup")
+        self.__setxkbmap_cmd = path.join(self.__prefix, "bin", "setxkbmap")
+        self.__current_xkb_layout = ""
+        self.__default_xkb_layout = "us"
+        if bus.get_use_sys_layout():
+            self.__set_xkb_layout(self.__default_xkb_layout)
 
         # connect bus signal
         self.__config.connect("value-changed", self.__config_value_changed_cb)
@@ -203,14 +208,20 @@ class Panel(ibus.PanelBase):
         if not enabled:
             self.__set_im_icon(ICON_KEYBOARD)
             self.__set_im_name(None)
+            if self.__bus.get_use_sys_layout():
+                self.__set_xkb_layout(self.__default_xkb_layout)
         else:
             engine = self.__focus_ic.get_engine()
             if engine:
                 self.__set_im_icon(engine.icon)
                 self.__set_im_name(engine.longname)
+                if self.__bus.get_use_sys_layout():
+                    self.__set_xkb_layout(engine.layout)
             else:
                 self.__set_im_icon(ICON_KEYBOARD)
                 self.__set_im_name(None)
+                if self.__bus.get_use_sys_layout():
+                    self.__set_xkb_layout(self.__default_xkb_layout)
         self.__language_bar.focus_in()
 
     def focus_out(self, ic):
@@ -220,6 +231,8 @@ class Panel(ibus.PanelBase):
         self.__language_bar.focus_out()
         self.__set_im_icon(ICON_KEYBOARD)
         self.__set_im_name(None)
+        if self.__bus.get_use_sys_layout():
+            self.__set_xkb_layout(self.__default_xkb_layout)
 
     def state_changed(self):
         if not self.__focus_ic:
@@ -232,15 +245,20 @@ class Panel(ibus.PanelBase):
             self.reset()
             self.__set_im_icon(ICON_KEYBOARD)
             self.__set_im_name(None)
+            if self.__bus.get_use_sys_layout():
+                self.__set_xkb_layout(self.__default_xkb_layout)
         else:
             engine = self.__focus_ic.get_engine()
             if engine:
                 self.__set_im_icon(engine.icon)
                 self.__set_im_name(engine.longname)
+                if self.__bus.get_use_sys_layout():
+                    self.__set_xkb_layout(engine.layout)
             else:
                 self.__set_im_icon(ICON_KEYBOARD)
                 self.__set_im_name(None)
-
+                if self.__bus.get_use_sys_layout():
+                    self.__set_xkb_layout(self.__default_xkb_layout)
 
     def reset(self):
         self.__candidate_panel.reset()
@@ -519,3 +537,23 @@ class Panel(ibus.PanelBase):
                                flags=glib.SPAWN_DO_NOT_REAP_CHILD)[0]
         self.__setup_pid = pid
         glib.child_watch_add(self.__setup_pid, self.__child_watch_cb)
+
+    def __set_xkb_layout(self, layout):
+        # if it's not a us keyboard layout, then we need to load us layout
+        # into the second group. Otherwise applications' key bindings may
+        # not work correctly.
+        if layout != "us" and not layout.startswith("us("):
+            layout = layout + ",us"
+
+        if self.__current_xkb_layout == layout:
+            return;
+
+        self.__current_xkb_layout = layout
+
+        # FIXME: It's an ugly hack. libxklavier might be used to make it more
+        # reliable.
+        try:
+            os.spawnv(os.P_WAIT, self.__setxkbmap_cmd,
+                      [ "setxkbmap", "-layout", layout ] )
+        except:
+            print >> sys.stderr, "Failed to run %s" % self.__setxkbmap_cmd
-- 
1.7.3.1

