commit 6fb86ad3592eae608a9907f516b42b18cd794745
Author: Thierry Reding <treding@nvidia.com>
Date:   Wed Mar 7 12:51:25 2018 +0100

    Support data types larger than 128 bytes
    
    Recent versions of systemd (starting with v238) started to check for the
    existence of the statx structure using the cc.sizeof() operation. The cc
    compiler implementation fails to detect this structure because it's size
    limit is 128, meaning it will fail for any type larger than 128 bytes in
    the following way during cross-compilation checks:
    
            meson.build:10:2: ERROR: Cross-compile check overflowed
    
    Increase the size limit for data types to 1024 bytes, which should give
    plenty of room for even large data structures. This is obviously not
    guaranteed to be an upper bound, but given the binary search algorithm
    implemented in the cross-compile check, raising the limit too high may
    significantly increase the time required for this check on smaller data
    types.
    
    Signed-off-by: Thierry Reding <treding@nvidia.com>

diff --git a/mesonbuild/compilers/c.py b/mesonbuild/compilers/c.py
index 0841fb2f..c05bf78f 100644
--- a/mesonbuild/compilers/c.py
+++ b/mesonbuild/compilers/c.py
@@ -406,7 +406,7 @@ class CCompiler(Compiler):
         }}'''
         if not self.compiles(t.format(**fargs), env, extra_args, dependencies):
             return -1
-        return self.cross_compute_int('sizeof(%s)' % typename, 1, 128, None, prefix, env, extra_args, dependencies)
+        return self.cross_compute_int('sizeof(%s)' % typename, 1, 1024, None, prefix, env, extra_args, dependencies)
 
     def sizeof(self, typename, prefix, env, extra_args=None, dependencies=None):
         if extra_args is None:
