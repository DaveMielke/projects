--- sqlite-3.6.22.orig/sqlite3.c	2013-05-16 10:12:42.659569727 -0700
+++ sqlite-3.6.22/sqlite3.c	2013-05-16 10:20:23.352154441 -0700
@@ -54317,10 +54317,20 @@
         u.am.pC->aRow = 0;
       }
     }
-    /* The following assert is true in all cases accept when
-    ** the database file has been corrupted externally.
-    **    assert( u.am.zRec!=0 || u.am.avail>=u.am.payloadSize || u.am.avail>=9 ); */
-    u.am.szHdr = getVarint32((u8*)u.am.zData, u.am.offset);
+
+    /* Make sure a corrupt database has not given us a NULL pointer or
+    ** invalid parameters.
+    **
+    ** The following test is true in all cases except when the
+    ** database file has been corrupted externally.
+    */
+    if( u.am.zData &&
+        ( u.am.zRec!=0 || u.am.avail>=u.am.payloadSize || u.am.avail>=9 ) ) {
+      u.am.szHdr = getVarint32((u8*)u.am.zData, u.am.offset);
+    } else {
+      rc = SQLITE_CORRUPT_BKPT;
+      goto op_column_out;
+    }
 
     /* Make sure a corrupt database has not given us an oversize header.
     ** Do this now to avoid an oversize memory allocation.
