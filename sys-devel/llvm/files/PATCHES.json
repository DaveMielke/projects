[
    {
        "comment": "Simplify checks for stack protector index checking",
        "rel_patch_path": "cherry/90ba54bf67c4c134d000b064121789a32c0c6a73.patch",
        "end_version": 366369
    },
    {
        "comment": "Add stack protector tests where the guard gets\nre-assigned",
        "rel_patch_path": "cherry/39fc2843e4eb07370d55f0a7a0db34d4bd6c9d5f.patch",
        "end_version": 366370
    },
    {
        "comment": "Does not re-allocate a pre-allocated stack protector slot",
        "rel_patch_path": "cherry/9f2b290addfc4d9f514790b47773b141682b0db5.patch",
        "end_version": 366371
    },
    {
        "comment": "Warn instead of error when duplicate version\nassignments occur",
        "rel_patch_path": "cherry/be8275753fe23fb56c4cb5127695dad540b9053c.patch",
        "start_version": 365631,
        "end_version": 365759
    },
    {
        "comment": "Handle non-glob patterns before glob patterns in\nversion scripts & fix a corner case of --dynamic-list",
        "rel_patch_path": "cherry/e1ee3837acfea876b279f7f00474fdabd5d76cb5.patch",
        "start_version": 365631,
        "end_version": 365760
    },
    {
        "comment": "Don't resolve the stack protector frame accesses until PEI",
        "rel_patch_path": "cherry/0503add6dab545600b99c89753fcc7cb5bd15fc8.patch",
        "start_version": 365631,
        "end_version": 367068
    },
    {
        "comment": "Fix for DominatorTree assertion error in new pass manager",
        "rel_patch_path": "cherry/3af2a69575da80f5e7b9890509a072b5062fe7c7.patch",
        "start_version": 365631,
        "end_version": 367596
    },
    {
        "comment": "Make binding (weak or non-weak) logic consistent for Undefined and SharedSymbol",
        "rel_patch_path": "cherry/e49c417ed1847a3b8e7595ddb8212ea8d13df5df.patch",
        "start_version": 365631,
        "end_version": 368038
    },
    {
        "comment": "Build libfuzzer libcxx-static with PIC",
        "rel_patch_path": "cherry/295d4b7727caba392ff3fdf1dbd9006b1ee1a1a2.patch",
        "start_version": 365631,
        "end_version": 367943
    },
    {
        "comment": "asm goto: Don't recreate a label if it's already used",
        "rel_patch_path": "cherry/1b104388752f66191c867380efde7bbf1f13ca80.patch",
        "start_version": 365631,
        "end_version": 368477
    },
    {
        "comment": "asm goto: Require a name for a block addr target",
        "rel_patch_path": "cherry/79176a2542d03107b90613c84f18ccba41ad8fa8.patch",
        "start_version": 365631,
        "end_version": 368478
    },
    {
        "comment": "asm goto: Ignore indirect branches from callbr",
        "rel_patch_path": "cherry/cc2bebe039374d6f0c8251ac322f8f7148d85950.patch",
        "start_version": 365631,
        "end_version": 368873
    },
    {
        "comment": "Do not emit '#' before immediates in inline asm",
        "rel_patch_path": "cherry/0cb2a33dfd3e87a01d5eab3effbe033db10300eb.patch",
        "start_version": 365631,
        "end_version": 368320
    },
    {
        "comment": "CodeGet: Init 32bit pointers with 0xFFFFFFFF",
        "rel_patch_path": "cherry/c2ac925d6e1599f9c667a16196bd36888df02e1e.patch",
        "start_version": 365631,
        "end_version": 365921
    },
    {
        "comment": "[X86] Manually reimplement getTargetInsertSubreg in X86DAGToDAGISel::matchBitExtract \nso we can call insertDAGNode on the target constant.",
        "rel_patch_path": "cherry/120cffccf8c3a46f6003a3b5a6b0f39130df4bd2.patch",
        "start_version": 365631,
        "end_version": 369084
    },
    {
        "comment": "ELF: Simplify test. NFCI. (Needed to pick r366466)",
        "rel_patch_path": "cherry/311131dafc0eff9a965907596e51b9e8834b7082.patch",
        "start_version": 365631,
        "end_version": 366463
    },
    {
        "comment": "ELF: Add support for remaining R_AARCH64_MOVW* relocations.",
        "rel_patch_path": "cherry/c2ccf4ccba295b1300018e65c658ff305992aa29.patch",
        "start_version": 365631,
        "end_version": 366466
    },
    {
        "comment": "[LLD][ELF][AArch64] Support for movz, movk tprel relocations",
        "rel_patch_path": "cherry/d4695e1d75a358d3161b5a81c9754c410c1ed2bc.patch",
        "start_version": 365631,
        "end_version": 368293
    },
    {
        "comment": "Push LR register before calling __gnu_mcount_nc as it expects the value of LR register to be the top value of the stack on ARM32.",
        "rel_patch_path": "cherry/16fa8b09702378bacfa3d07081afe6b353b99e60.patch",
        "start_version": 365631,
        "end_version": 369173
    },
    {
        "comment": "Adds a whitelist of packages that have known memory leaks",
        "rel_patch_path": "llvm-next-leak-whitelist.patch"
    },
    {
        "comment": "Sets the ASAN message to go to /va/log/asan${pid} by\ndefault",
        "rel_patch_path": "clang-4.0-asan-default-path.patch"
    },
    {
        "comment": "Makes llvm not generate .cgprofile entries when we\ndo not use integrated-as",
        "rel_patch_path": "llvm-9.0-no-cgprofile.patch"
    },
    {
        "comment": "Used as destination of target generators",
        "rel_patch_path": "cmake/llvm-3.8-allow_custom_cmake_build_types.patch"
    },
    {
        "comment": "Fixes crbug/591436. Force fallback to traditional executable detection",
        "rel_patch_path": "llvm-8.0-clang-executable-detection.patch"
    },
    {
        "comment": "Temporary workaround. Breakpad cannot handle Dwarf\nVersion 4. Works around issue by forcing Debug Frames\nversion of Dwarf to be version 1, while leaving the rest of\nthe Dwarf data at version 4",
        "rel_patch_path": "llvm-3.9-dwarf-version.patch"
    },
    {
        "comment": "Reverts LLVM commit r335145 which is one of two \ncommits responsible for the crash of LLVM with r339409. The\npatch is temporary so when the bug is fixed, the patch can\nbe removed",
        "rel_patch_path": "llvm-8.0-revert-r335145.patch",
        "start_version": 335146
    },
    {
        "comment": "Reverts LLVM commit r335284 which is one of two\ncommits responsible for the crash of LLVM with r339409. The\npatch is temporary so when the bug is fixed, the patch can\nbe removed",
        "rel_patch_path": "clang-next-9.0-revert-r335284.patch",
        "start_version": 365631
    },
    {
        "comment": "Fixes clang.elf calling clang.elf because direct\ncalls to clang.elf misses all environment setup in clang\nwrapper. Calls to clang wrapper instead of clang.elf binary",
        "rel_patch_path": "llvm-3.8-invocation.patch"
    },
    {
        "comment": "Uses argv[0] to get host system information. Created\na wrapper of LLD and real lld becomes lld.elf so the LLD\ncannot get the host system information and dies",
        "rel_patch_path": "lld-invoke-name.patch",
        "end_version": 365730
    },
    {
        "comment": "Uses argv[0] to get host system information. Created\na wrapper of LLD and real lld becomes lld.elf so the LLD\ncannot get the host system information and dies",
        "rel_patch_path": "lld-10.0-invoke-name.patch",
        "start_version": 365730
    },
    {
        "comment": "Achieves the functionality of reordering .text.hot\nsections before .text section",
        "rel_patch_path": "lld-next-9.0-reorder-hotsection-early.patch",
        "start_version": 365631
    }
]
