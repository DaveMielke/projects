commit 771594b9ab02241dec7c254f490eb701b62de070
Author: Sanjay Patel <spatel@rotateright.com>
Date:   Tue Jan 30 13:53:59 2018 +0000

    [DSE] make sure memory is not modified before partial store merging (PR36129)
    
    We missed a critical check in D30703. We must make sure that no intermediate
    store is sitting between the stores that we want to merge.
    
    This should fix:
    https://bugs.llvm.org/show_bug.cgi?id=36129
    
    Differential Revision: https://reviews.llvm.org/D42663
    
    
    git-svn-id: https://llvm.org/svn/llvm-project/llvm/trunk@323759 91177308-0d34-0410-b5e6-96231b3b80d8

diff --git a/lib/Transforms/Scalar/DeadStoreElimination.cpp b/lib/Transforms/Scalar/DeadStoreElimination.cpp
index 18cf3592556..6c7d311112a 100644
--- a/lib/Transforms/Scalar/DeadStoreElimination.cpp
+++ b/lib/Transforms/Scalar/DeadStoreElimination.cpp
@@ -1172,7 +1172,8 @@ static bool eliminateDeadStores(BasicBlock &BB, AliasAnalysis *AA,
           auto *Earlier = dyn_cast<StoreInst>(DepWrite);
           auto *Later = dyn_cast<StoreInst>(Inst);
           if (Earlier && isa<ConstantInt>(Earlier->getValueOperand()) &&
-              Later && isa<ConstantInt>(Later->getValueOperand())) {
+              Later && isa<ConstantInt>(Later->getValueOperand()) &&
+              memoryIsNotModifiedBetween(Earlier, Later, AA)) {
             // If the store we find is:
             //   a) partially overwritten by the store to 'Loc'
             //   b) the later store is fully contained in the earlier one and
