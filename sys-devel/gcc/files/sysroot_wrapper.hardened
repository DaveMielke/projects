#!/usr/bin/python

# Copyright (c) 2009 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This script ensures that '--sysroot' is passed to whatever it is wrapping.
#
# It also adds hardened flags to gcc invocation. The hardened flags are:
# 1. -fstack-protector-all
# 2. -fPIE
# 3. -pie
# 4. -D_FORTIFY_SOURCE=2
#
# It can disable -fPIE -pie by checking if -nopie is passed to gcc. In this
# case it removes -nopie as it is a non-standard flag.
#
# There is a similar hardening wrapper that wraps ld and adds -z now -z relro
# to the link command line (see ldwrapper).
#
# To use:
#   mv <tool> <tool>.real
#   ln -s <path_to_sysroot_wrapper> <tool>

import os
import re
import sys

fstack=set(['-D__KERNEL__', '-fno-stack-protector', '-fstack-protector-all',
  '-fstack-protector', '-nodefaultlibs', '-nostdlib'])
fPIE=set(['-D__KERNEL__', '-fPIC', '-fPIE', '-fno-PIC', '-fno-PIE',
  '-fno-pic', '-fno-pie', '-fpic', '-fpie', '-nopie', '-nostartfiles',
  '-nostdlib', '-pie', '-static'])
pie=set(['-D__KERNEL__', '-A', '-fno-PIC', '-fno-PIE', '-fno-pic', '-fno-pie',
  '-nopie', '-nostartfiles', '-nostdlib', '-pie', '-r', '--shared', '-shared',
  '-static'])

extra_flags=set(['-fstack-protector-all', '-fPIE', '-pie'])
flags = ['-D_FORTIFY_SOURCE=2']
for flag in sys.argv[1:]:
  if flag in fstack:
    extra_flags.discard('-fstack-protector-all')
  if flag in fPIE:
    extra_flags.discard('-fPIE')
  if flag in pie:
    extra_flags.discard('-pie')
  if flag != '-nopie':
    flags.append(flag)

if re.search(r'i.86', sys.argv[0]):
  flags.append('-mno-movbe')

if 'SYSROOT' in os.environ:
  flags.append('--sysroot=%s' % os.environ['SYSROOT'])
else:
  f = open('/tmp/sysroot_wrapper.error', 'a')
  f.write('Invocation with missing SYSROOT: %s\n' % ' '.join(sys.argv))
  f.close()

  try:
    os.chmod('/tmp/sysroot_wrapper.error', 0666)
  except OSError:
    pass

os.execv('%s.real' % sys.argv[0], [sys.argv[0]] + list(extra_flags) + flags)

