From 0c0ae4f07ab3f7b606b36605e415788a69d63ec6 Mon Sep 17 00:00:00 2001
From: Kalyan Kondapally <kalyan.kondapally@intel.com>
Date: Sun, 20 Mar 2016 02:21:26 -0700
Subject: [PATCH 2/3] Use non zero fb id for not bound fbo tests.

In GLContext, we redirect 0 to platform-defined default framebuffer.
In case of surface_type==FBO, this happens to be 1. Tests like
fbo.delete_rbo_attached_to_not_bound_fbo do the following:

 1) Bind to FB with id 1.
 2)Create and attach buffers to this FB.
 3)Unbind the current FB and bind to 0.
 4)Delete buffers attached to FB with id 1.
 5)Re-bind to FB with id 1 and check that the resources exist.

Since, we where redirecting 0 to platform defined framebuffer,
all these resources got deleted and tests failed. Now, we
create a temporary Fb and use that instead of 0.

Test: Check that the following tests pass:
1)dEQP-GLES2.functional.fbo.api.delete_rbo_attached_to_not_bound_fbo
2)dEQP-GLES2.functional.fbo.api.delete_tex_2d_attached_to_not_bound_fbo
3)dEQP-GLES2.functional.fbo.api.delete_tex_cube_attached_to_not_bound_fbo
4)dEQP-GLES3.functional.fbo.api.delete_rbo_attached_to_not_bound_fbo
5)dEQP-GLES3.functional.fbo.api.delete_tex_2d_attached_to_not_bound_fbo
6)dEQP-GLES3.functional.fbo.api.delete_tex_cube_attached_to_not_bound_fbo
---
 modules/gles2/functional/es2fFboApiTest.cpp  | 18 +++++++++++++++---
 modules/gles3/functional/es3fFboApiTests.cpp | 18 +++++++++++++++---
 2 files changed, 30 insertions(+), 6 deletions(-)

diff --git a/modules/gles2/functional/es2fFboApiTest.cpp b/modules/gles2/functional/es2fFboApiTest.cpp
index 62d4940..ca244bf 100644
--- a/modules/gles2/functional/es2fFboApiTest.cpp
+++ b/modules/gles2/functional/es2fFboApiTest.cpp
@@ -495,7 +495,9 @@ static void deleteTex2DAttachedToNotBoundFboTest (tcu::TestContext& testCtx, sgl
 	checkFboAttachmentParam(testCtx, ctx, GL_COLOR_ATTACHMENT0, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, GL_TEXTURE);
 	checkFboAttachmentParam(testCtx, ctx, GL_COLOR_ATTACHMENT0, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME, tex2D);
 
-	ctx.bindFramebuffer(GL_FRAMEBUFFER, 0);
+        uint32_t framebuffer_id;
+        ctx.genFramebuffers(1, &framebuffer_id);
+        ctx.bindFramebuffer(GL_FRAMEBUFFER, framebuffer_id);
 
 	ctx.deleteTextures(1, &tex2D);
 
@@ -503,6 +505,8 @@ static void deleteTex2DAttachedToNotBoundFboTest (tcu::TestContext& testCtx, sgl
 
 	checkFboAttachmentParam(testCtx, ctx, GL_COLOR_ATTACHMENT0, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, GL_TEXTURE);
 	checkFboAttachmentParam(testCtx, ctx, GL_COLOR_ATTACHMENT0, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME, tex2D);
+
+        ctx.deleteFramebuffers(1, &framebuffer_id);
 }
 
 static void deleteTexCubeAttachedToNotBoundFboTest (tcu::TestContext& testCtx, sglr::Context& ctx)
@@ -516,7 +520,9 @@ static void deleteTexCubeAttachedToNotBoundFboTest (tcu::TestContext& testCtx, s
 	checkFboAttachmentParam(testCtx, ctx, GL_DEPTH_ATTACHMENT, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, GL_TEXTURE);
 	checkFboAttachmentParam(testCtx, ctx, GL_DEPTH_ATTACHMENT, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME, texCube);
 
-	ctx.bindFramebuffer(GL_FRAMEBUFFER, 0);
+        uint32_t framebuffer_id;
+        ctx.genFramebuffers(1, &framebuffer_id);
+        ctx.bindFramebuffer(GL_FRAMEBUFFER, framebuffer_id);
 
 	ctx.deleteTextures(1, &texCube);
 
@@ -524,6 +530,8 @@ static void deleteTexCubeAttachedToNotBoundFboTest (tcu::TestContext& testCtx, s
 
 	checkFboAttachmentParam(testCtx, ctx, GL_DEPTH_ATTACHMENT, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, GL_TEXTURE);
 	checkFboAttachmentParam(testCtx, ctx, GL_DEPTH_ATTACHMENT, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME, texCube);
+
+        ctx.deleteFramebuffers(1, &framebuffer_id);
 }
 
 static void deleteRboAttachedToNotBoundFboTest (tcu::TestContext& testCtx, sglr::Context& ctx)
@@ -537,7 +545,9 @@ static void deleteRboAttachedToNotBoundFboTest (tcu::TestContext& testCtx, sglr:
 	checkFboAttachmentParam(testCtx, ctx, GL_STENCIL_ATTACHMENT, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, GL_RENDERBUFFER);
 	checkFboAttachmentParam(testCtx, ctx, GL_STENCIL_ATTACHMENT, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME, rbo);
 
-	ctx.bindFramebuffer(GL_FRAMEBUFFER, 0);
+        uint32_t framebuffer_id;
+        ctx.genFramebuffers(1, &framebuffer_id);
+        ctx.bindFramebuffer(GL_FRAMEBUFFER, framebuffer_id);
 
 	ctx.deleteRenderbuffers(1, &rbo);
 
@@ -545,6 +555,8 @@ static void deleteRboAttachedToNotBoundFboTest (tcu::TestContext& testCtx, sglr:
 
 	checkFboAttachmentParam(testCtx, ctx, GL_STENCIL_ATTACHMENT, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, GL_RENDERBUFFER);
 	checkFboAttachmentParam(testCtx, ctx, GL_STENCIL_ATTACHMENT, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME, rbo);
+
+        ctx.deleteFramebuffers(1, &framebuffer_id);
 }
 
 class FboApiCase : public TestCase
diff --git a/modules/gles3/functional/es3fFboApiTests.cpp b/modules/gles3/functional/es3fFboApiTests.cpp
index 8314ec5..e495c21 100644
--- a/modules/gles3/functional/es3fFboApiTests.cpp
+++ b/modules/gles3/functional/es3fFboApiTests.cpp
@@ -471,7 +471,9 @@ static void deleteTex2DAttachedToNotBoundFboTest (tcu::TestContext& testCtx, sgl
 	checkFboAttachmentParam(testCtx, ctx, GL_COLOR_ATTACHMENT0, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, GL_TEXTURE);
 	checkFboAttachmentParam(testCtx, ctx, GL_COLOR_ATTACHMENT0, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME, tex2D);
 
-	ctx.bindFramebuffer(GL_FRAMEBUFFER, 0);
+        uint32_t framebuffer_id;
+        ctx.genFramebuffers(1, &framebuffer_id);
+        ctx.bindFramebuffer(GL_FRAMEBUFFER, framebuffer_id);
 
 	ctx.deleteTextures(1, &tex2D);
 
@@ -479,6 +481,8 @@ static void deleteTex2DAttachedToNotBoundFboTest (tcu::TestContext& testCtx, sgl
 
 	checkFboAttachmentParam(testCtx, ctx, GL_COLOR_ATTACHMENT0, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, GL_TEXTURE);
 	checkFboAttachmentParam(testCtx, ctx, GL_COLOR_ATTACHMENT0, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME, tex2D);
+
+        ctx.deleteFramebuffers(1, &framebuffer_id);
 }
 
 static void deleteTexCubeAttachedToNotBoundFboTest (tcu::TestContext& testCtx, sglr::Context& ctx)
@@ -492,7 +496,9 @@ static void deleteTexCubeAttachedToNotBoundFboTest (tcu::TestContext& testCtx, s
 	checkFboAttachmentParam(testCtx, ctx, GL_DEPTH_ATTACHMENT, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, GL_TEXTURE);
 	checkFboAttachmentParam(testCtx, ctx, GL_DEPTH_ATTACHMENT, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME, texCube);
 
-	ctx.bindFramebuffer(GL_FRAMEBUFFER, 0);
+        uint32_t framebuffer_id;
+        ctx.genFramebuffers(1, &framebuffer_id);
+        ctx.bindFramebuffer(GL_FRAMEBUFFER, framebuffer_id);
 
 	ctx.deleteTextures(1, &texCube);
 
@@ -500,6 +506,8 @@ static void deleteTexCubeAttachedToNotBoundFboTest (tcu::TestContext& testCtx, s
 
 	checkFboAttachmentParam(testCtx, ctx, GL_DEPTH_ATTACHMENT, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, GL_TEXTURE);
 	checkFboAttachmentParam(testCtx, ctx, GL_DEPTH_ATTACHMENT, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME, texCube);
+
+        ctx.deleteFramebuffers(1, &framebuffer_id);
 }
 
 static void deleteRboAttachedToNotBoundFboTest (tcu::TestContext& testCtx, sglr::Context& ctx)
@@ -513,7 +521,9 @@ static void deleteRboAttachedToNotBoundFboTest (tcu::TestContext& testCtx, sglr:
 	checkFboAttachmentParam(testCtx, ctx, GL_STENCIL_ATTACHMENT, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, GL_RENDERBUFFER);
 	checkFboAttachmentParam(testCtx, ctx, GL_STENCIL_ATTACHMENT, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME, rbo);
 
-	ctx.bindFramebuffer(GL_FRAMEBUFFER, 0);
+        uint32_t framebuffer_id;
+        ctx.genFramebuffers(1, &framebuffer_id);
+        ctx.bindFramebuffer(GL_FRAMEBUFFER, framebuffer_id);
 
 	ctx.deleteRenderbuffers(1, &rbo);
 
@@ -521,6 +531,8 @@ static void deleteRboAttachedToNotBoundFboTest (tcu::TestContext& testCtx, sglr:
 
 	checkFboAttachmentParam(testCtx, ctx, GL_STENCIL_ATTACHMENT, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, GL_RENDERBUFFER);
 	checkFboAttachmentParam(testCtx, ctx, GL_STENCIL_ATTACHMENT, GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME, rbo);
+
+        ctx.deleteFramebuffers(1, &framebuffer_id);
 }
 
 class FboApiCase : public TestCase
-- 
2.5.0

