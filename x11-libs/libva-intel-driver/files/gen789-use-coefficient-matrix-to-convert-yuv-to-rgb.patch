From 5de82a36f36d544a7620e1bc966bd68db67bc349 Mon Sep 17 00:00:00 2001
From: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
Date: Thu, 22 Oct 2015 15:50:49 +0100
Subject: [PATCH] gen789: use coefficient matrix to convert yuv to rgb

The current yuv to rgb conversion shader is using hardcoded
coefficients for the JPEG yuv colorspace. This changes reworks the
shader to use coefficients set up by the driver based on parameters
given by the libva user. It also switches to the ITU-R BT.601
coefficient by default.
---
 src/Makefile.am                                    |   2 +
 src/gen8_post_processing.c                         |  20 +-
 src/gen8_render.c                                  |  32 +-
 src/gen9_render.c                                  |  32 +-
 src/i965_post_processing.c                         |  24 +-
 src/i965_post_processing.h                         |  45 +-
 src/i965_render.c                                  |  32 +-
 src/i965_yuv_coefs.c                               |  73 +++
 src/i965_yuv_coefs.h                               |  36 ++
 src/shaders/post_processing/gen7/DI_Core.g4a       |  16 +-
 .../post_processing/gen7/DI_Save_NV12_16x4.g4a     |   4 +-
 .../post_processing/gen7/DI_Save_PA_16x4.g4a       |   6 +-
 src/shaders/post_processing/gen7/EOT.g4a           |  12 +-
 src/shaders/post_processing/gen7/NV12_DI_NV12.g4a  |  30 +-
 .../post_processing/gen7/NV12_DNDI_422CP.g4a       |  38 +-
 src/shaders/post_processing/gen7/NV12_DNDI_PA.g4a  |  36 +-
 .../post_processing/gen7/NV12_DNUV_NV12.g4a        |  56 +-
 src/shaders/post_processing/gen7/NV12_DN_422CP.g4a |  34 +-
 src/shaders/post_processing/gen7/NV12_DN_NV12.g4a  |  28 +-
 src/shaders/post_processing/gen7/PA_AVS_Buf_0.g4a  |  26 +-
 src/shaders/post_processing/gen7/PA_AVS_Buf_1.g4a  |  24 +-
 src/shaders/post_processing/gen7/PA_AVS_Buf_2.g4a  |  24 +-
 src/shaders/post_processing/gen7/PA_AVS_Buf_3.g4a  |  24 +-
 src/shaders/post_processing/gen7/PA_DI_422CP.g4a   |  32 +-
 src/shaders/post_processing/gen7/PA_DI_PA.g4a      |  30 +-
 src/shaders/post_processing/gen7/PA_DNDI_422CP.g4a |  38 +-
 src/shaders/post_processing/gen7/PA_DNDI_PA.g4a    |  36 +-
 src/shaders/post_processing/gen7/PA_DNUV_PA.g4a    |  48 +-
 src/shaders/post_processing/gen7/PA_DN_422CP.g4a   |  34 +-
 src/shaders/post_processing/gen7/PA_DN_PA.g4a      |  28 +-
 src/shaders/post_processing/gen7/PL2_AVS_Buf_0.g4a |  26 +-
 src/shaders/post_processing/gen7/PL2_AVS_Buf_1.g4a |  24 +-
 src/shaders/post_processing/gen7/PL2_AVS_Buf_2.g4a |  24 +-
 src/shaders/post_processing/gen7/PL2_AVS_Buf_3.g4a |  24 +-
 src/shaders/post_processing/gen7/PL3_AVS_Buf_0.g4a |  26 +-
 src/shaders/post_processing/gen7/PL3_AVS_Buf_1.g4a |  24 +-
 src/shaders/post_processing/gen7/PL3_AVS_Buf_2.g4a |  24 +-
 src/shaders/post_processing/gen7/PL3_AVS_Buf_3.g4a |  24 +-
 .../post_processing/gen7/PL3_DNDI_422CP.g4a        |  38 +-
 src/shaders/post_processing/gen7/PL3_DNDI_PA.g4a   |  36 +-
 src/shaders/post_processing/gen7/PL3_DNUV_PL3.g4a  |  56 +-
 src/shaders/post_processing/gen7/PL3_DN_422CP.g4a  |  34 +-
 src/shaders/post_processing/gen7/PL3_DN_PL3.g4a    |  28 +-
 src/shaders/post_processing/gen7/PL_DI_422CP.g4a   |  32 +-
 src/shaders/post_processing/gen7/PL_DI_PA.g4a      |  30 +-
 src/shaders/post_processing/gen7/RGB_to_YUV.g4a    |  12 +-
 src/shaders/post_processing/gen7/Save_AVS_NV12.g4a |  18 +-
 src/shaders/post_processing/gen7/Save_AVS_PA.g4a   |  16 +-
 src/shaders/post_processing/gen7/Save_AVS_PL3.g4a  |  18 +-
 src/shaders/post_processing/gen7/Save_AVS_RGB.g4a  |  16 +-
 src/shaders/post_processing/gen7/Save_AVS_RGBX.g4a |  16 +-
 .../post_processing/gen7/Set_AVS_Buf_0123_BGRA.g4a |  12 +-
 .../post_processing/gen7/Set_AVS_Buf_0123_PL2.g4a  |  12 +-
 .../post_processing/gen7/Set_AVS_Buf_0123_PL3.g4a  |  12 +-
 .../post_processing/gen7/Set_AVS_Buf_0123_VUYA.g4a |  12 +-
 .../post_processing/gen7/Set_AVS_Buf_0123_VYUA.g4a |  12 +-
 src/shaders/post_processing/gen7/Set_Layer_0.g4a   |  22 +-
 src/shaders/post_processing/gen7/VP_Setup.g4a      |  16 +-
 src/shaders/post_processing/gen7/YUV_to_RGB.g4a    | 638 +++++++++++----------
 src/shaders/post_processing/gen7/avs.g75b          |  30 +-
 src/shaders/post_processing/gen7/avs.g7b           |  30 +-
 src/shaders/post_processing/gen7/dndi.g75b         |  18 +-
 src/shaders/post_processing/gen7/dndi.g7b          |  18 +-
 src/shaders/post_processing/gen7/nv12_dn_nv12.g75b |  16 +-
 src/shaders/post_processing/gen7/nv12_dn_nv12.g7b  |  16 +-
 src/shaders/post_processing/gen7/pa_to_pa.g75b     |  28 +-
 src/shaders/post_processing/gen7/pa_to_pa.g7b      |  28 +-
 src/shaders/post_processing/gen7/pa_to_pl2.g75b    |  30 +-
 src/shaders/post_processing/gen7/pa_to_pl2.g7b     |  30 +-
 src/shaders/post_processing/gen7/pa_to_pl3.g75b    |  30 +-
 src/shaders/post_processing/gen7/pa_to_pl3.g7b     |  30 +-
 src/shaders/post_processing/gen7/pl2_to_pa.g75b    |  28 +-
 src/shaders/post_processing/gen7/pl2_to_pa.g7b     |  28 +-
 src/shaders/post_processing/gen7/pl2_to_pl2.g75b   |  30 +-
 src/shaders/post_processing/gen7/pl2_to_pl2.g7b    |  30 +-
 src/shaders/post_processing/gen7/pl2_to_pl3.g75b   |  30 +-
 src/shaders/post_processing/gen7/pl2_to_pl3.g7b    |  30 +-
 src/shaders/post_processing/gen7/pl2_to_rgbx.g75b  | 556 ++++++++++--------
 src/shaders/post_processing/gen7/pl2_to_rgbx.g7b   | 556 ++++++++++--------
 src/shaders/post_processing/gen7/pl3_to_pa.g75b    |  28 +-
 src/shaders/post_processing/gen7/pl3_to_pa.g7b     |  28 +-
 src/shaders/post_processing/gen7/pl3_to_pl2.g75b   |  30 +-
 src/shaders/post_processing/gen7/pl3_to_pl2.g7b    |  30 +-
 src/shaders/post_processing/gen7/pl3_to_pl3.g75b   |  30 +-
 src/shaders/post_processing/gen7/pl3_to_pl3.g7b    |  30 +-
 src/shaders/post_processing/gen7/rgbx_to_nv12.g75b |  30 +-
 src/shaders/post_processing/gen7/rgbx_to_nv12.g7b  |  30 +-
 src/shaders/post_processing/gen8/EOT.g8a           |  12 +-
 src/shaders/post_processing/gen8/PA_AVS_Buf_0.g8a  |  22 +-
 src/shaders/post_processing/gen8/PA_AVS_Buf_1.g8a  |  22 +-
 src/shaders/post_processing/gen8/PA_AVS_Buf_2.g8a  |  22 +-
 src/shaders/post_processing/gen8/PA_AVS_Buf_3.g8a  |  22 +-
 src/shaders/post_processing/gen8/PL2_AVS_Buf_0.g8a |  22 +-
 src/shaders/post_processing/gen8/PL2_AVS_Buf_1.g8a |  22 +-
 src/shaders/post_processing/gen8/PL2_AVS_Buf_2.g8a |  22 +-
 src/shaders/post_processing/gen8/PL2_AVS_Buf_3.g8a |  22 +-
 src/shaders/post_processing/gen8/PL3_AVS_Buf_0.g8a |  22 +-
 src/shaders/post_processing/gen8/PL3_AVS_Buf_1.g8a |  22 +-
 src/shaders/post_processing/gen8/PL3_AVS_Buf_2.g8a |  22 +-
 src/shaders/post_processing/gen8/PL3_AVS_Buf_3.g8a |  22 +-
 src/shaders/post_processing/gen8/RGB_to_YUV.g8a    |  12 +-
 src/shaders/post_processing/gen8/Save_AVS_NV12.g8a |  18 +-
 src/shaders/post_processing/gen8/Save_AVS_PA.g8a   |  16 +-
 src/shaders/post_processing/gen8/Save_AVS_PL3.g8a  |  18 +-
 src/shaders/post_processing/gen8/Save_AVS_RGBX.g8a |  16 +-
 .../post_processing/gen8/Set_AVS_Buf_0123_BGRA.g8a |  12 +-
 .../post_processing/gen8/Set_AVS_Buf_0123_PL2.g8a  |  12 +-
 .../post_processing/gen8/Set_AVS_Buf_0123_PL3.g8a  |  12 +-
 .../post_processing/gen8/Set_AVS_Buf_0123_VYUA.g8a |  12 +-
 src/shaders/post_processing/gen8/Set_Layer_0.g8a   |  20 +-
 src/shaders/post_processing/gen8/VP_Setup.g8a      |  32 +-
 src/shaders/post_processing/gen8/YUV_to_RGB.g8a    | 637 ++++++++++----------
 src/shaders/post_processing/gen8/pa_to_pa.g8b      |  32 +-
 src/shaders/post_processing/gen8/pa_to_pl2.g8b     |  34 +-
 src/shaders/post_processing/gen8/pa_to_pl3.g8b     |  34 +-
 src/shaders/post_processing/gen8/pl2_to_pa.g8b     |  32 +-
 src/shaders/post_processing/gen8/pl2_to_pl2.g8b    |  34 +-
 src/shaders/post_processing/gen8/pl2_to_pl3.g8b    |  34 +-
 src/shaders/post_processing/gen8/pl2_to_rgbx.g8b   | 576 ++++++++++---------
 src/shaders/post_processing/gen8/pl3_to_pa.g8b     |  32 +-
 src/shaders/post_processing/gen8/pl3_to_pl2.g8b    |  34 +-
 src/shaders/post_processing/gen8/pl3_to_pl3.g8b    |  34 +-
 src/shaders/post_processing/gen8/rgbx_to_nv12.g8b  |  34 +-
 src/shaders/post_processing/gen9/pa_to_pa.g9b      |  32 +-
 src/shaders/post_processing/gen9/pa_to_pl2.g9b     |  34 +-
 src/shaders/post_processing/gen9/pa_to_pl3.g9b     |  34 +-
 src/shaders/post_processing/gen9/pl2_to_pa.g9b     |  32 +-
 src/shaders/post_processing/gen9/pl2_to_pl2.g9b    |  34 +-
 src/shaders/post_processing/gen9/pl2_to_pl3.g9b    |  34 +-
 src/shaders/post_processing/gen9/pl2_to_rgbx.g9b   | 576 ++++++++++---------
 src/shaders/post_processing/gen9/pl3_to_pa.g9b     |  32 +-
 src/shaders/post_processing/gen9/pl3_to_pl2.g9b    |  34 +-
 src/shaders/post_processing/gen9/pl3_to_pl3.g9b    |  34 +-
 src/shaders/post_processing/gen9/rgbx_to_nv12.g9b  |  34 +-
 134 files changed, 3622 insertions(+), 3301 deletions(-)
 create mode 100644 src/i965_yuv_coefs.c
 create mode 100644 src/i965_yuv_coefs.h

diff --git a/src/Makefile.am b/src/Makefile.am
index a170aee..f6db887 100755
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -84,6 +84,7 @@ source_c = \
 	i965_media_mpeg2.c	\
 	i965_gpe_utils.c	\
 	i965_post_processing.c	\
+	i965_yuv_coefs.c	\
 	gen8_post_processing.c	\
 	i965_render.c		\
 	i965_vpp_avs.c		\
@@ -128,6 +129,7 @@ source_h = \
 	i965_render.h           \
 	i965_structs.h		\
 	i965_vpp_avs.h		\
+	i965_yuv_coefs.h	\
 	intel_batchbuffer.h     \
 	intel_batchbuffer_dump.h\
 	intel_compiler.h	\
diff --git a/src/gen8_post_processing.c b/src/gen8_post_processing.c
index a5e036d..1fbc317 100644
--- a/src/gen8_post_processing.c
+++ b/src/gen8_post_processing.c
@@ -39,6 +39,7 @@
 #include "i965_drv_video.h"
 #include "i965_post_processing.h"
 #include "i965_render.h"
+#include "i965_yuv_coefs.h"
 #include "intel_media.h"
 
 #define SURFACE_STATE_PADDED_SIZE               SURFACE_STATE_PADDED_SIZE_GEN8
@@ -713,10 +714,10 @@ gen7_pp_avs_set_block_parameter(struct i965_post_processing_context *pp_context,
     struct pp_avs_context *pp_avs_context = (struct pp_avs_context *)pp_context->private_context;
     struct gen7_pp_inline_parameter *pp_inline_parameter = pp_context->pp_inline_parameter;
 
-    pp_inline_parameter->grf7.destination_block_horizontal_origin = x * 16 + pp_avs_context->dest_x;
-    pp_inline_parameter->grf7.destination_block_vertical_origin = y * 16 + pp_avs_context->dest_y;
-    pp_inline_parameter->grf7.constant_0 = 0xffffffff;
-    pp_inline_parameter->grf7.sampler_load_main_video_x_scaling_step = pp_avs_context->horiz_range / pp_avs_context->src_w;
+    pp_inline_parameter->grf9.destination_block_horizontal_origin = x * 16 + pp_avs_context->dest_x;
+    pp_inline_parameter->grf9.destination_block_vertical_origin = y * 16 + pp_avs_context->dest_y;
+    pp_inline_parameter->grf9.constant_0 = 0xffffffff;
+    pp_inline_parameter->grf9.sampler_load_main_video_x_scaling_step = pp_avs_context->horiz_range / pp_avs_context->src_w;
 
     return 0;
 }
@@ -780,6 +781,8 @@ gen8_pp_plx_avs_initialize(VADriverContextP ctx, struct i965_post_processing_con
     unsigned char *cc_ptr;
     AVSState * const avs = &pp_avs_context->state;
     float sx, sy;
+    const float * yuv_to_rgb_coefs;
+    size_t yuv_to_rgb_coefs_size;
 
     memset(pp_static_parameter, 0, sizeof(struct gen7_pp_static_parameter));
 
@@ -1065,6 +1068,11 @@ gen8_pp_plx_avs_initialize(VADriverContextP ctx, struct i965_post_processing_con
 
     gen7_update_src_surface_uv_offset(ctx, pp_context, dst_surface);
 
+    yuv_to_rgb_coefs = i915_color_standard_to_coefs (i915_filter_to_color_standard (src_surface->flags &
+                                                                                    VA_SRC_COLOR_MASK),
+                                                     &yuv_to_rgb_coefs_size);
+    memcpy(&pp_static_parameter->grf7, yuv_to_rgb_coefs, yuv_to_rgb_coefs_size);
+
     dst_surface->flags = src_surface->flags;
 
     return VA_STATUS_SUCCESS;
@@ -1187,7 +1195,7 @@ gen8_pp_interface_descriptor_table(VADriverContextP   ctx,
     desc->desc4.binding_table_pointer = (BINDING_TABLE_OFFSET >> 5);
     desc->desc5.constant_urb_entry_read_offset = 0;
 
-    desc->desc5.constant_urb_entry_read_length = 6; /* grf 1-6 */
+    desc->desc5.constant_urb_entry_read_length = 8; /* grf 1-8 */
 
     dri_bo_unmap(bo);
     pp_context->idrt.num_interface_descriptors++;
@@ -1201,7 +1209,7 @@ gen8_pp_upload_constants(VADriverContextP ctx,
     unsigned char *constant_buffer;
     int param_size;
 
-    assert(sizeof(struct gen7_pp_static_parameter) == 192);
+    assert(sizeof(struct gen7_pp_static_parameter) == 256);
 
     param_size = sizeof(struct gen7_pp_static_parameter);
 
diff --git a/src/gen8_render.c b/src/gen8_render.c
index 45d55ea..1bfe04c 100644
--- a/src/gen8_render.c
+++ b/src/gen8_render.c
@@ -45,6 +45,7 @@
 #include "i965_defines.h"
 #include "i965_drv_video.h"
 #include "i965_structs.h"
+#include "i965_yuv_coefs.h"
 
 #include "i965_render.h"
 
@@ -124,25 +125,6 @@ static struct i965_kernel render_kernels_gen8[] = {
 #define URB_CS_ENTRIES	      4
 #define URB_CS_ENTRY_SIZE     4
 
-static float yuv_to_rgb_bt601[3][4] = {
-{1.164,		0,	1.596,		-0.06275,},
-{1.164,		-0.392,	-0.813,		-0.50196,},
-{1.164,		2.017,	0,		-0.50196,},
-};
-
-static float yuv_to_rgb_bt709[3][4] = {
-{1.164,		0,	1.793,		-0.06275,},
-{1.164,		-0.213,	-0.533,		-0.50196,},
-{1.164,		2.112,	0,		-0.50196,},
-};
-
-static float yuv_to_rgb_smpte_240[3][4] = {
-{1.164,		0,	1.794,		-0.06275,},
-{1.164,		-0.258,	-0.5425,	-0.50196,},
-{1.164,		2.078,	0,		-0.50196,},
-};
-
-
 static void
 gen8_render_set_surface_tiling(struct gen8_surface_state *ss, uint32_t tiling)
 {
@@ -784,6 +766,8 @@ gen8_render_upload_constants(VADriverContextP ctx,
     float saturation = (float)i965->saturation_attrib->value / DEFAULT_SATURATION;
     float *yuv_to_rgb;
     unsigned int color_flag;
+    const float* yuv_coefs;
+    size_t coefs_length;
 
     dri_bo_map(render_state->dynamic_state.bo, 1);
     assert(render_state->dynamic_state.bo->virtual);
@@ -820,12 +804,10 @@ gen8_render_upload_constants(VADriverContextP ctx,
 
     color_flag = flags & VA_SRC_COLOR_MASK;
     yuv_to_rgb = (float *)constant_buffer + 8;
-    if (color_flag == VA_SRC_BT709)
-        memcpy(yuv_to_rgb, yuv_to_rgb_bt709, sizeof(yuv_to_rgb_bt709));
-    else if (color_flag == VA_SRC_SMPTE_240)
-        memcpy(yuv_to_rgb, yuv_to_rgb_smpte_240, sizeof(yuv_to_rgb_smpte_240));
-    else
-        memcpy(yuv_to_rgb, yuv_to_rgb_bt601, sizeof(yuv_to_rgb_bt601));
+
+    yuv_coefs = i915_color_standard_to_coefs(i915_filter_to_color_standard(color_flag),
+                                             &coefs_length);
+    memcpy(yuv_to_rgb, yuv_coefs, coefs_length);
 
     dri_bo_unmap(render_state->dynamic_state.bo);
 }
diff --git a/src/gen9_render.c b/src/gen9_render.c
index fa48243..b45543a 100644
--- a/src/gen9_render.c
+++ b/src/gen9_render.c
@@ -45,6 +45,7 @@
 #include "i965_defines.h"
 #include "i965_drv_video.h"
 #include "i965_structs.h"
+#include "i965_yuv_coefs.h"
 
 #include "i965_render.h"
 
@@ -118,25 +119,6 @@ static struct i965_kernel render_kernels_gen9[] = {
 #define URB_CS_ENTRIES	      4
 #define URB_CS_ENTRY_SIZE     4
 
-static float yuv_to_rgb_bt601[3][4] = {
-{1.164,		0,	1.596,		-0.06275,},
-{1.164,		-0.392,	-0.813,		-0.50196,},
-{1.164,		2.017,	0,		-0.50196,},
-};
-
-static float yuv_to_rgb_bt709[3][4] = {
-{1.164,		0,	1.793,		-0.06275,},
-{1.164,		-0.213,	-0.533,		-0.50196,},
-{1.164,		2.112,	0,		-0.50196,},
-};
-
-static float yuv_to_rgb_smpte_240[3][4] = {
-{1.164,		0,	1.794,		-0.06275,},
-{1.164,		-0.258,	-0.5425,	-0.50196,},
-{1.164,		2.078,	0,		-0.50196,},
-};
-
-
 static void
 gen9_render_set_surface_tiling(struct gen8_surface_state *ss, uint32_t tiling)
 {
@@ -775,6 +757,8 @@ gen9_render_upload_constants(VADriverContextP ctx,
     float saturation = (float)i965->saturation_attrib->value / DEFAULT_SATURATION;
     float *yuv_to_rgb;
     unsigned int color_flag;
+    const float* yuv_coefs;
+    size_t coefs_length;
 
     dri_bo_map(render_state->dynamic_state.bo, 1);
     assert(render_state->dynamic_state.bo->virtual);
@@ -811,12 +795,10 @@ gen9_render_upload_constants(VADriverContextP ctx,
 
     color_flag = flags & VA_SRC_COLOR_MASK;
     yuv_to_rgb = (float *)constant_buffer + 8;
-    if (color_flag == VA_SRC_BT709)
-        memcpy(yuv_to_rgb, yuv_to_rgb_bt709, sizeof(yuv_to_rgb_bt709));
-    else if (color_flag == VA_SRC_SMPTE_240)
-        memcpy(yuv_to_rgb, yuv_to_rgb_smpte_240, sizeof(yuv_to_rgb_smpte_240));
-    else
-        memcpy(yuv_to_rgb, yuv_to_rgb_bt601, sizeof(yuv_to_rgb_bt601));
+
+    yuv_coefs = i915_color_standard_to_coefs(i915_filter_to_color_standard(color_flag),
+                                             &coefs_length);
+    memcpy(yuv_to_rgb, yuv_coefs, coefs_length);
 
     dri_bo_unmap(render_state->dynamic_state.bo);
 }
diff --git a/src/i965_post_processing.c b/src/i965_post_processing.c
index 0d145d8..ea3d350 100755
--- a/src/i965_post_processing.c
+++ b/src/i965_post_processing.c
@@ -38,6 +38,7 @@
 #include "i965_drv_video.h"
 #include "i965_post_processing.h"
 #include "i965_render.h"
+#include "i965_yuv_coefs.h"
 #include "intel_media.h"
 
 extern VAStatus
@@ -3029,10 +3030,10 @@ gen7_pp_avs_set_block_parameter(struct i965_post_processing_context *pp_context,
     struct pp_avs_context *pp_avs_context = (struct pp_avs_context *)pp_context->private_context;
     struct gen7_pp_inline_parameter *pp_inline_parameter = pp_context->pp_inline_parameter;
 
-    pp_inline_parameter->grf7.destination_block_horizontal_origin = x * 16 + pp_avs_context->dest_x;
-    pp_inline_parameter->grf7.destination_block_vertical_origin = y * 16 + pp_avs_context->dest_y;
-    pp_inline_parameter->grf7.constant_0 = 0xffffffff;
-    pp_inline_parameter->grf7.sampler_load_main_video_x_scaling_step = pp_avs_context->horiz_range / pp_avs_context->src_w;
+    pp_inline_parameter->grf9.destination_block_horizontal_origin = x * 16 + pp_avs_context->dest_x;
+    pp_inline_parameter->grf9.destination_block_vertical_origin = y * 16 + pp_avs_context->dest_y;
+    pp_inline_parameter->grf9.constant_0 = 0xffffffff;
+    pp_inline_parameter->grf9.sampler_load_main_video_x_scaling_step = pp_avs_context->horiz_range / pp_avs_context->src_w;
 
     return 0;
 }
@@ -3073,6 +3074,8 @@ gen7_pp_plx_avs_initialize(VADriverContextP ctx, struct i965_post_processing_con
     int src_width, src_height;
     AVSState * const avs = &pp_avs_context->state;
     float sx, sy;
+    const float * yuv_to_rgb_coefs;
+    size_t yuv_to_rgb_coefs_size;
 
     /* source surface */
     gen7_pp_set_media_rw_message_surface(ctx, pp_context, src_surface, 0, 0,
@@ -3305,6 +3308,11 @@ gen7_pp_plx_avs_initialize(VADriverContextP ctx, struct i965_post_processing_con
 
     gen7_update_src_surface_uv_offset(ctx, pp_context, dst_surface);
 
+    yuv_to_rgb_coefs = i915_color_standard_to_coefs (i915_filter_to_color_standard (src_surface->flags &
+                                                                                    VA_SRC_COLOR_MASK),
+                                                     &yuv_to_rgb_coefs_size);
+    memcpy(&pp_static_parameter->grf7, yuv_to_rgb_coefs, yuv_to_rgb_coefs_size);
+
     dst_surface->flags = src_surface->flags;
 
     return VA_STATUS_SUCCESS;
@@ -3736,8 +3744,8 @@ gen7_pp_dndi_set_block_parameter(struct i965_post_processing_context *pp_context
 {
     struct gen7_pp_inline_parameter *pp_inline_parameter = pp_context->pp_inline_parameter;
 
-    pp_inline_parameter->grf7.destination_block_horizontal_origin = x * 16;
-    pp_inline_parameter->grf7.destination_block_vertical_origin = y * 4;
+    pp_inline_parameter->grf9.destination_block_horizontal_origin = x * 16;
+    pp_inline_parameter->grf9.destination_block_vertical_origin = y * 4;
 
     return 0;
 }
@@ -4421,7 +4429,7 @@ gen6_pp_interface_descriptor_table(VADriverContextP   ctx,
     desc->desc4.constant_urb_entry_read_offset = 0;
 
     if (IS_GEN7(i965->intel.device_info))
-        desc->desc4.constant_urb_entry_read_length = 6; /* grf 1-6 */
+        desc->desc4.constant_urb_entry_read_length = 8; /* grf 1-8 */
     else
         desc->desc4.constant_urb_entry_read_length = 4; /* grf 1-4 */
 
@@ -4450,7 +4458,7 @@ gen6_pp_upload_constants(VADriverContextP ctx,
     int param_size;
 
     assert(sizeof(struct pp_static_parameter) == 128);
-    assert(sizeof(struct gen7_pp_static_parameter) == 192);
+    assert(sizeof(struct gen7_pp_static_parameter) == 256);
 
     if (IS_GEN7(i965->intel.device_info))
         param_size = sizeof(struct gen7_pp_static_parameter);
diff --git a/src/i965_post_processing.h b/src/i965_post_processing.h
index 477f0ca..63e678d 100755
--- a/src/i965_post_processing.h
+++ b/src/i965_post_processing.h
@@ -422,33 +422,58 @@ struct gen7_pp_static_parameter
         float sampler_load_horizontal_frame_origin;
         unsigned int padx[7];
     } grf6;
+
+    struct {
+        /* r7.0 -> r7.3 */
+        float coef_ry;
+        float coef_ru;
+        float coef_rv;
+        float coef_yd;
+
+        /* r7.4 -> r7.7 */
+        float coef_gy;
+        float coef_gu;
+        float coef_gv;
+        float coef_ud;
+    } grf7;
+
+    struct {
+        /* r8.0 -> r8.3 */
+        float coef_by;
+        float coef_bu;
+        float coef_bv;
+        float coef_vd;
+
+        /* r8.4 -> r8.7 */
+        unsigned int padx[4];
+    } grf8;
 };
 
 struct gen7_pp_inline_parameter
 {
     struct {
-        /* r7.0 */
+        /* r9.0 */
         unsigned int destination_block_horizontal_origin:16;
         unsigned int destination_block_vertical_origin:16;
-        /* r7.1: 0xffffffff */
+        /* r9.1: 0xffffffff */
         unsigned int constant_0;
-        /* r7.2 */
+        /* r9.2 */
         unsigned int pad0;
-        /* r7.3 */
+        /* r9.3 */
         unsigned int pad1;
-        /* r7.4 */
+        /* r9.4 */
         float sampler_load_main_video_x_scaling_step;
-        /* r7.5 */
+        /* r9.5 */
         unsigned int pad2;
-        /* r7.6: must be zero */
+        /* r9.6: must be zero */
         unsigned int avs_vertical_block_number;
-        /* r7.7: 0 */
+        /* r9.7: 0 */
         unsigned int group_id_number;
-    } grf7;
+    } grf9;
 
     struct {
         unsigned int padx[8];
-    } grf8;
+    } grf10;
 };
 
 struct i965_post_processing_context
diff --git a/src/i965_render.c b/src/i965_render.c
index f941d1b..2e24353 100644
--- a/src/i965_render.c
+++ b/src/i965_render.c
@@ -44,6 +44,7 @@
 #include "i965_defines.h"
 #include "i965_drv_video.h"
 #include "i965_structs.h"
+#include "i965_yuv_coefs.h"
 
 #include "i965_render.h"
 
@@ -311,24 +312,6 @@ static struct i965_kernel render_kernels_gen7_haswell[] = {
 #define URB_CS_ENTRIES	      4
 #define URB_CS_ENTRY_SIZE     4
 
-static float yuv_to_rgb_bt601[3][4] = {
-{1.164,		0,	1.596,		-0.06275,},
-{1.164,		-0.392,	-0.813,		-0.50196,},
-{1.164,		2.017,	0,		-0.50196,},
-};
-
-static float yuv_to_rgb_bt709[3][4] = {
-{1.164,		0,	1.793,		-0.06275,},
-{1.164,		-0.213,	-0.533,		-0.50196,},
-{1.164,		2.112,	0,		-0.50196,},
-};
-
-static float yuv_to_rgb_smpte_240[3][4] = {
-{1.164,		0,	1.794,		-0.06275,},
-{1.164,		-0.258,	-0.5425,	-0.50196,},
-{1.164,		2.078,	0,		-0.50196,},
-};
-
 static void
 i965_render_vs_unit(VADriverContextP ctx)
 {
@@ -1094,7 +1077,8 @@ i965_render_upload_constants(VADriverContextP ctx,
     float hue = (float)i965->hue_attrib->value / 180 * PI;
     float saturation = (float)i965->saturation_attrib->value / DEFAULT_SATURATION;
     float *yuv_to_rgb;
-    unsigned int color_flag;
+    const float* yuv_coefs;
+    size_t coefs_length;
 
     dri_bo_map(render_state->curbe.bo, 1);
     assert(render_state->curbe.bo->virtual);
@@ -1125,14 +1109,10 @@ i965_render_upload_constants(VADriverContextP ctx,
     *color_balance_base++ = cos(hue) * contrast * saturation;
     *color_balance_base++ = sin(hue) * contrast * saturation;
 
-    color_flag = flags & VA_SRC_COLOR_MASK;
     yuv_to_rgb = (float *)constant_buffer + 8;
-    if (color_flag == VA_SRC_BT709)
-        memcpy(yuv_to_rgb, yuv_to_rgb_bt709, sizeof(yuv_to_rgb_bt709));
-    else if (color_flag == VA_SRC_SMPTE_240)
-        memcpy(yuv_to_rgb, yuv_to_rgb_smpte_240, sizeof(yuv_to_rgb_smpte_240));
-    else
-        memcpy(yuv_to_rgb, yuv_to_rgb_bt601, sizeof(yuv_to_rgb_bt601));
+    yuv_coefs = i915_color_standard_to_coefs(i915_filter_to_color_standard(flags & VA_SRC_COLOR_MASK),
+                                             &coefs_length);
+    memcpy(yuv_to_rgb, yuv_coefs, coefs_length);
 
     dri_bo_unmap(render_state->curbe.bo);
 }
diff --git a/src/i965_yuv_coefs.c b/src/i965_yuv_coefs.c
new file mode 100644
index 0000000..db817b4
--- /dev/null
+++ b/src/i965_yuv_coefs.c
@@ -0,0 +1,73 @@
+/*
+ * Copyright © 2015 Intel Corporation
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the
+ * "Software"), to deal in the Software without restriction, including
+ * without limitation the rights to use, copy, modify, merge, publish,
+ * distribute, sub license, and/or sell copies of the Software, and to
+ * permit persons to whom the Software is furnished to do so, subject to
+ * the following conditions:
+ *
+ * The above copyright notice and this permission notice (including the
+ * next paragraph) shall be included in all copies or substantial portions
+ * of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+ * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
+ * IN NO EVENT SHALL PRECISION INSIGHT AND/OR ITS SUPPLIERS BE LIABLE FOR
+ * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
+ * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
+ * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+#include "i965_yuv_coefs.h"
+
+static const float yuv_to_rgb_bt601[] = {
+    1.164,		0,	1.596,		-0.06275,
+    1.164,		-0.392,	-0.813,		-0.50196,
+    1.164,		2.017,	0,		-0.50196,
+};
+
+static const float yuv_to_rgb_bt709[] = {
+    1.164,		0,	1.793,		-0.06275,
+    1.164,		-0.213,	-0.533,		-0.50196,
+    1.164,		2.112,	0,		-0.50196,
+};
+
+static const float yuv_to_rgb_smpte_240[] = {
+    1.164,		0,	1.794,		-0.06275,
+    1.164,		-0.258,	-0.5425,	-0.50196,
+    1.164,		2.078,	0,		-0.50196,
+};
+
+VAProcColorStandardType i915_filter_to_color_standard (unsigned int filter) {
+    switch (filter & VA_SRC_COLOR_MASK) {
+    case VA_SRC_BT601:
+        return VAProcColorStandardBT601;
+    case VA_SRC_BT709:
+        return VAProcColorStandardBT709;
+    case VA_SRC_SMPTE_240:
+        return VAProcColorStandardSMPTE240M;
+    default:
+        return VAProcColorStandardBT601;
+    }
+}
+
+const float *i915_color_standard_to_coefs (VAProcColorStandardType standard, size_t *length) {
+    switch (standard) {
+    case VAProcColorStandardBT601:
+        *length = sizeof(yuv_to_rgb_bt601);
+        return yuv_to_rgb_bt601;
+    case VAProcColorStandardBT709:
+        *length = sizeof(yuv_to_rgb_bt709);
+        return yuv_to_rgb_bt709;
+    case VAProcColorStandardSMPTE240M:
+        *length = sizeof(yuv_to_rgb_smpte_240);
+        return yuv_to_rgb_smpte_240;
+    default:
+        *length = sizeof(yuv_to_rgb_bt601);
+        return yuv_to_rgb_bt601;
+    }
+}
diff --git a/src/i965_yuv_coefs.h b/src/i965_yuv_coefs.h
new file mode 100644
index 0000000..f58f903
--- /dev/null
+++ b/src/i965_yuv_coefs.h
@@ -0,0 +1,36 @@
+/*
+ * Copyright © 2015 Intel Corporation
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a
+ * copy of this software and associated documentation files (the
+ * "Software"), to deal in the Software without restriction, including
+ * without limitation the rights to use, copy, modify, merge, publish,
+ * distribute, sub license, and/or sell copies of the Software, and to
+ * permit persons to whom the Software is furnished to do so, subject to
+ * the following conditions:
+ *
+ * The above copyright notice and this permission notice (including the
+ * next paragraph) shall be included in all copies or substantial portions
+ * of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+ * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
+ * IN NO EVENT SHALL PRECISION INSIGHT AND/OR ITS SUPPLIERS BE LIABLE FOR
+ * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
+ * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
+ * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+#ifndef __I965_YUV_COEFS_H__
+#define __I965_YUV_COEFS_H__
+
+#include "sysdeps.h"
+
+#include <va/va.h>
+#include <va/va_vpp.h>
+
+VAProcColorStandardType i915_filter_to_color_standard (unsigned int filter);
+const float *i915_color_standard_to_coefs (VAProcColorStandardType standard, size_t *length);
+
+#endif /* __I965_YUV_COEFS_H__ */
diff --git a/src/shaders/post_processing/gen7/DI_Core.g4a b/src/shaders/post_processing/gen7/DI_Core.g4a
index 5a0dcee..9edd8d3 100644
--- a/src/shaders/post_processing/gen7/DI_Core.g4a
+++ b/src/shaders/post_processing/gen7/DI_Core.g4a
@@ -155,7 +155,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -270,14 +270,14 @@
 
 // Prepare the DNDI send command
 mov (8)		mudMSGHDR_DNDI(0)<1>			r0.0<8;8,1>:ud					// message header
-mov (1)		mwMSGHDR_DNDI(1,4)<1>			r7.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
-mov (1)		mwMSGHDR_DNDI(1,12)<1>			r7.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
+mov (1)		mwMSGHDR_DNDI(1,4)<1>			r9.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
+mov (1)		mwMSGHDR_DNDI(1,12)<1>			r9.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
 
 send (8)	udDNDI_RESP(0)<1>	r18	0x2	0x4AE8003:ud
 
 // On Gen6, with VDI walker, use the XY pair returned rather than programmed above
 // VDI_RETURNED_XY is ordered XY in case of walker enables and the same as programmed in case of walker disabled
-mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
+mov (2) 	r9.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
 
 
 // FileName:	DI_STMM_Save.asm 
@@ -288,8 +288,8 @@ mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in
 mov (8)     mudMSGHDR_STMM(0)<1>	r0.0<8;8,1>:ud               							// message header   
 mov (8)     mudMSGHDR_STMM(1)<1>   	udDNDI_RESP(8,0)         					// Move STMM to MRF 
 
-shr (1)     mudMSGHDR_STMM(0,0)<1>	r7.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
-mov (1)     mudMSGHDR_STMM(0,1)<1>	r7.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
+shr (1)     mudMSGHDR_STMM(0,0)<1>	r9.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
+mov (1)     mudMSGHDR_STMM(0,1)<1>	r9.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
 mov (1)     mudMSGHDR_STMM(0,2)<1>	0x30007:ud           { NoDDChk } 		// block width and height (8x4)
 
 send (8)	null<1>:d	r20	0x5		0x40A8021:ud      
@@ -304,8 +304,8 @@ send (8)	null<1>:d	r20	0x5		0x40A8021:ud
 mov (8)		mudMSGHDR_ENC_STATS(1)<1>	0x0:ud						// Init payload MRF
 mov (8)		mudMSGHDR_ENC_STATS(0)<1>	r0.0<8;8,1>:ud				// message header
 
-shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r7.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
-mul (1)		acc0.1<1>:ud					r7.1<0;1,0>:w				3:w																							// Y origin * 3
+shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r9.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
+mul (1)		acc0.1<1>:ud					r9.1<0;1,0>:w				3:w																							// Y origin * 3
 shr (1)		mudMSGHDR_ENC_STATS(0,1)<1>		acc0.1<0;1,0>:ud			2:w		{ NoDDClr, NoDDChk }		//enable the flag after testing on si			   { NoDDClr, NoDDChk } // Y origin * 3/4
 mov (1)		mudMSGHDR_ENC_STATS(0,2)<1>		0x20007:ud				{ NoDDChk }			//enable the flag after testing on si						{ NoDDChk } // block width and height (8x3)
 add (2)		mudMSGHDR_ENC_STATS(0,0)<1>		mudMSGHDR_ENC_STATS(0,0)<2;2,1>       	r1.12<2;2,1>:uw					// Add pitch to X,Y origin
diff --git a/src/shaders/post_processing/gen7/DI_Save_NV12_16x4.g4a b/src/shaders/post_processing/gen7/DI_Save_NV12_16x4.g4a
index b9afbbc..6c910ba 100644
--- a/src/shaders/post_processing/gen7/DI_Save_NV12_16x4.g4a
+++ b/src/shaders/post_processing/gen7/DI_Save_NV12_16x4.g4a
@@ -155,7 +155,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -261,7 +261,7 @@
 // Defines for DI disabled
 
 
-mov (2) r27.0<1>:d		r7.0<2;2,1>:w                        { NoDDClr }
+mov (2) r27.0<1>:d		r9.0<2;2,1>:w                        { NoDDClr }
 mov (1) r27.2<1>:ud     0x3000F:ud		          { NoDDChk }		// Block width and height (16x4)
 
 //Bottom field Y
diff --git a/src/shaders/post_processing/gen7/DI_Save_PA_16x4.g4a b/src/shaders/post_processing/gen7/DI_Save_PA_16x4.g4a
index 8004366..efcc8ac 100644
--- a/src/shaders/post_processing/gen7/DI_Save_PA_16x4.g4a
+++ b/src/shaders/post_processing/gen7/DI_Save_PA_16x4.g4a
@@ -155,7 +155,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -264,8 +264,8 @@
 add (4) a0.4<1>:uw   r2.28<4;4,1>:ub   608:w               // Initial Y,U,V offset in YUV422 block; it starts at m20
 
 mov (8) r27.0<1>:ud     r0.0<8;8,1>:ud
-shl (1) r27.0<1>:d      r7.0<0;1,0>:w            1:w  { NoDDClr }          // H. block origin need to be doubled
-mov (1) r27.1<1>:d      r7.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
+shl (1) r27.0<1>:d      r9.0<0;1,0>:w            1:w  { NoDDClr }          // H. block origin need to be doubled
+mov (1) r27.1<1>:d      r9.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
 mov (1) r27.2<1>:ud     0x3001F:ud          { NoDDChk }          // Block width and height (32x8)
 
 //prepare the message headers
diff --git a/src/shaders/post_processing/gen7/EOT.g4a b/src/shaders/post_processing/gen7/EOT.g4a
index 9b0d678..e2682f9 100644
--- a/src/shaders/post_processing/gen7/EOT.g4a
+++ b/src/shaders/post_processing/gen7/EOT.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
diff --git a/src/shaders/post_processing/gen7/NV12_DI_NV12.g4a b/src/shaders/post_processing/gen7/NV12_DI_NV12.g4a
index 93704c5..096b11f 100644
--- a/src/shaders/post_processing/gen7/NV12_DI_NV12.g4a
+++ b/src/shaders/post_processing/gen7/NV12_DI_NV12.g4a
@@ -169,7 +169,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -178,15 +178,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -293,14 +293,14 @@
 
 // Prepare the DNDI send command
 mov (8)		mudMSGHDR_DNDI(0)<1>			r0.0<8;8,1>:ud					// message header
-mov (1)		mwMSGHDR_DNDI(1,4)<1>			r7.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
-mov (1)		mwMSGHDR_DNDI(1,12)<1>			r7.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
+mov (1)		mwMSGHDR_DNDI(1,4)<1>			r9.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
+mov (1)		mwMSGHDR_DNDI(1,12)<1>			r9.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
 
 send (8)	udDNDI_RESP(0)<1>	r18	0x2	0x4AE8003:ud
 
 // On Gen6, with VDI walker, use the XY pair returned rather than programmed above
 // VDI_RETURNED_XY is ordered XY in case of walker enables and the same as programmed in case of walker disabled
-mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
+mov (2) 	r9.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
 
 
 
@@ -312,8 +312,8 @@ mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in
 mov (8)     mudMSGHDR_STMM(0)<1>	r0.0<8;8,1>:ud               							// message header   
 mov (8)     mudMSGHDR_STMM(1)<1>   	udDNDI_RESP(8,0)         					// Move STMM to MRF 
 
-shr (1)     mudMSGHDR_STMM(0,0)<1>	r7.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
-mov (1)     mudMSGHDR_STMM(0,1)<1>	r7.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
+shr (1)     mudMSGHDR_STMM(0,0)<1>	r9.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
+mov (1)     mudMSGHDR_STMM(0,1)<1>	r9.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
 mov (1)     mudMSGHDR_STMM(0,2)<1>	0x30007:ud           { NoDDChk } 		// block width and height (8x4)
 
 send (8)	null<1>:d	r20	0x5		0x40A8021:ud      
@@ -329,8 +329,8 @@ send (8)	null<1>:d	r20	0x5		0x40A8021:ud
 mov (8)		mudMSGHDR_ENC_STATS(1)<1>	0x0:ud						// Init payload MRF
 mov (8)		mudMSGHDR_ENC_STATS(0)<1>	r0.0<8;8,1>:ud				// message header
 
-shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r7.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
-mul (1)		acc0.1<1>:ud					r7.1<0;1,0>:w				3:w																							// Y origin * 3
+shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r9.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
+mul (1)		acc0.1<1>:ud					r9.1<0;1,0>:w				3:w																							// Y origin * 3
 shr (1)		mudMSGHDR_ENC_STATS(0,1)<1>		acc0.1<0;1,0>:ud			2:w		{ NoDDClr, NoDDChk }		//enable the flag after testing on si			   { NoDDClr, NoDDChk } // Y origin * 3/4
 mov (1)		mudMSGHDR_ENC_STATS(0,2)<1>		0x20007:ud				{ NoDDChk }			//enable the flag after testing on si						{ NoDDChk } // block width and height (8x3)
 add (2)		mudMSGHDR_ENC_STATS(0,0)<1>		mudMSGHDR_ENC_STATS(0,0)<2;2,1>       	r1.12<2;2,1>:uw					// Add pitch to X,Y origin
@@ -363,8 +363,8 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 // add (4) a0.4<1>:uw   r2.28<4;4,1>:ub   608:w               // Initial Y,U,V offset in YUV422 block; it starts at m20
 
 mov (8) r28.0<1>:ud     r0.0<8;8,1>:ud
-mov (1) r28.0<1>:d      r7.0<0;1,0>:w            { NoDDClr }          // H. block origin need to be doubled
-mov (1) r28.1<1>:d      r7.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
+mov (1) r28.0<1>:d      r9.0<0;1,0>:w            { NoDDClr }          // H. block origin need to be doubled
+mov (1) r28.1<1>:d      r9.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
 mov (1) r28.2<1>:ud     0x3000F:ud          { NoDDChk }          // Block width and height (32x8)
 
 //prepare the message headers
diff --git a/src/shaders/post_processing/gen7/NV12_DNDI_422CP.g4a b/src/shaders/post_processing/gen7/NV12_DNDI_422CP.g4a
index 0afacec..b1e60bb 100644
--- a/src/shaders/post_processing/gen7/NV12_DNDI_422CP.g4a
+++ b/src/shaders/post_processing/gen7/NV12_DNDI_422CP.g4a
@@ -174,7 +174,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -183,15 +183,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -298,14 +298,14 @@
 
 // Prepare the DNDI send command
 mov (8)		mudMSGHDR_DNDI(0)<1>			r0.0<8;8,1>:ud					// message header
-mov (1)		mwMSGHDR_DNDI(1,4)<1>			r7.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
-mov (1)		mwMSGHDR_DNDI(1,12)<1>			r7.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
+mov (1)		mwMSGHDR_DNDI(1,4)<1>			r9.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
+mov (1)		mwMSGHDR_DNDI(1,12)<1>			r9.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
 
 send (8)	udDNDI_RESP(0)<1>	r18	0x2	0x4BE8003:ud
 
 // On Gen6, with VDI walker, use the XY pair returned rather than programmed above
 // VDI_RETURNED_XY is ordered XY in case of walker enables and the same as programmed in case of walker disabled
-mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
+mov (2) 	r9.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
 
 
 
@@ -317,8 +317,8 @@ mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in
 mov (8)     mudMSGHDR_STMM(0)<1>	r0.0<8;8,1>:ud               							// message header   
 mov (8)     mudMSGHDR_STMM(1)<1>   	udDNDI_RESP(8,0)         					// Move STMM to MRF 
 
-shr (1)     mudMSGHDR_STMM(0,0)<1>	r7.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
-mov (1)     mudMSGHDR_STMM(0,1)<1>	r7.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
+shr (1)     mudMSGHDR_STMM(0,0)<1>	r9.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
+mov (1)     mudMSGHDR_STMM(0,1)<1>	r9.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
 mov (1)     mudMSGHDR_STMM(0,2)<1>	0x30007:ud           { NoDDChk } 		// block width and height (8x4)
 
 send (8)	null<1>:d	r20	0x5		0x40A8021:ud      
@@ -335,7 +335,7 @@ mov (8)    r27<1>:ud				r0.0<8;8,1>:ud                   			// message header
 	mov (1)    mudMSGHDR_HIST(1)<1>		udDNDI_RESP(9,0)<0;1,0>		// Move denoise history to MRF (4x1)
 
 
-shr (2)    r27.0<1>:ud		r7.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
+shr (2)    r27.0<1>:ud		r9.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
 add (1)    r27.0<1>:ud		r27.0<0;1,0>:ud			r1.12<0;1,0>:uw		{ NoDDClr }  	// Add pitch to X origin
 mov (1)    r27.2<1>:ud		0x3:ud									{ NoDDChk }  	// block width and height
 
@@ -353,8 +353,8 @@ send (8)	null<1>:d	r22	0x5		0x40A8021:ud
 mov (8)		mudMSGHDR_ENC_STATS(1)<1>	0x0:ud						// Init payload MRF
 mov (8)		mudMSGHDR_ENC_STATS(0)<1>	r0.0<8;8,1>:ud				// message header
 
-shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r7.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
-mul (1)		acc0.1<1>:ud					r7.1<0;1,0>:w				3:w																							// Y origin * 3
+shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r9.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
+mul (1)		acc0.1<1>:ud					r9.1<0;1,0>:w				3:w																							// Y origin * 3
 shr (1)		mudMSGHDR_ENC_STATS(0,1)<1>		acc0.1<0;1,0>:ud			2:w		{ NoDDClr, NoDDChk }		//enable the flag after testing on si			   { NoDDClr, NoDDChk } // Y origin * 3/4
 mov (1)		mudMSGHDR_ENC_STATS(0,2)<1>		0x20007:ud				{ NoDDChk }			//enable the flag after testing on si						{ NoDDChk } // block width and height (8x3)
 add (2)		mudMSGHDR_ENC_STATS(0,0)<1>		mudMSGHDR_ENC_STATS(0,0)<2;2,1>       	r1.12<2;2,1>:uw					// Add pitch to X,Y origin
@@ -390,7 +390,7 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 // Description:	Read UV for 16x4 block through DATAPORT 
 
 
-	add (2)		r27.0<1>:d				r7.0<2;2,1>:w				r4.4<2;2,1>:w				// Source Y Block origin
+	add (2)		r27.0<1>:d				r9.0<2;2,1>:w				r4.4<2;2,1>:w				// Source Y Block origin
 	asr (1)  	r27.1<1>:d     			r27.1<0;1,0>:d       	1:w   						{ NoDDClr }		// U/V block origin should be half of Y's
 	mov (1)		r27.2<1>:ud				0x1000F:ud  					{ NoDDChk }		// U/V block width and height (8x4)
     mov (8)     mudMSGHDR_UVCOPY(0)<1>    	r27.0<8;8,1>:ud
@@ -407,7 +407,7 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 cmp.e.f0.0 (1)  null<1>:w               r1.28<0;1,0>:ub     1:w
 
 mov (8)		mudMSGHDR_DN_OUT(0)<1>		r0<8;8,1>:ud            						// message header   
-mov (2)     mdMSGHDR_DN_OUT(0,0)<1>		r7.0<2;2,1>:w  				{ NoDDClr }        	// X origin * 2 (422 output)
+mov (2)     mdMSGHDR_DN_OUT(0,0)<1>		r9.0<2;2,1>:w  				{ NoDDClr }        	// X origin * 2 (422 output)
 mov (1)     mudMSGHDR_DN_OUT(0,2)<1>	0x3000F:ud		{ NoDDChk }        	// block width and height (32x8)
 
 (f0.0) jmpi (1) TOP_FIELD_FIRST
@@ -451,13 +451,13 @@ send (8)    null<1>:d    r31.0		0x5    0x60A8018:ud
 
 
 mov (8) r27.0<1>:ud     r0.0<8;8,1>:ud
-shl (1) r27.0<1>:ud     r7.0<0;1,0>:w            1:w  { NoDDClr }          // H. block origin need to be doubled
-mov (1) r27.1<1>:ud     r7.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
+shl (1) r27.0<1>:ud     r9.0<0;1,0>:w            1:w  { NoDDClr }          // H. block origin need to be doubled
+mov (1) r27.1<1>:ud     r9.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
 mov (1) r27.2<1>:ud     0x3000F:ud        { NoDDClr, NoDDChk }       // Block width and height (16x8)
 
 //M0.3  - 0 - CP Enable, 1 - Area of Interest, 3:2 Message Format(TBD), 4:3 - Ignored, 31:5 CP state pointer
 //Compose area-of-interest bit + color pipe state pointer
-or (1)  r27.3<1>:ud     r2.4<0;1,0>:ud     r7.26<0;1,0>:b     { NoDDChk }
+or (1)  r27.3<1>:ud     r2.4<0;1,0>:ud     r9.26<0;1,0>:b     { NoDDChk }
 
 //prepare the message headers
 mov (8) r18.0<1>:ud       r27<8;8,1>:ud
diff --git a/src/shaders/post_processing/gen7/NV12_DNDI_PA.g4a b/src/shaders/post_processing/gen7/NV12_DNDI_PA.g4a
index f2509be..6b18f12 100644
--- a/src/shaders/post_processing/gen7/NV12_DNDI_PA.g4a
+++ b/src/shaders/post_processing/gen7/NV12_DNDI_PA.g4a
@@ -174,7 +174,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -183,15 +183,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -298,14 +298,14 @@
 
 // Prepare the DNDI send command
 mov (8)		mudMSGHDR_DNDI(0)<1>			r0.0<8;8,1>:ud					// message header
-mov (1)		mwMSGHDR_DNDI(1,4)<1>			r7.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
-mov (1)		mwMSGHDR_DNDI(1,12)<1>			r7.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
+mov (1)		mwMSGHDR_DNDI(1,4)<1>			r9.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
+mov (1)		mwMSGHDR_DNDI(1,12)<1>			r9.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
 
 send (8)	udDNDI_RESP(0)<1>	r18	0x2	0x4BE8003:ud
 
 // On Gen6, with VDI walker, use the XY pair returned rather than programmed above
 // VDI_RETURNED_XY is ordered XY in case of walker enables and the same as programmed in case of walker disabled
-mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
+mov (2) 	r9.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
 
 
 
@@ -317,8 +317,8 @@ mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in
 mov (8)     mudMSGHDR_STMM(0)<1>	r0.0<8;8,1>:ud               							// message header   
 mov (8)     mudMSGHDR_STMM(1)<1>   	udDNDI_RESP(8,0)         					// Move STMM to MRF 
 
-shr (1)     mudMSGHDR_STMM(0,0)<1>	r7.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
-mov (1)     mudMSGHDR_STMM(0,1)<1>	r7.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
+shr (1)     mudMSGHDR_STMM(0,0)<1>	r9.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
+mov (1)     mudMSGHDR_STMM(0,1)<1>	r9.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
 mov (1)     mudMSGHDR_STMM(0,2)<1>	0x30007:ud           { NoDDChk } 		// block width and height (8x4)
 
 send (8)	null<1>:d	r20	0x5		0x40A8021:ud      
@@ -335,7 +335,7 @@ mov (8)    r27<1>:ud				r0.0<8;8,1>:ud                   			// message header
 	mov (1)    mudMSGHDR_HIST(1)<1>		udDNDI_RESP(9,0)<0;1,0>		// Move denoise history to MRF (4x1)
 
 
-shr (2)    r27.0<1>:ud		r7.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
+shr (2)    r27.0<1>:ud		r9.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
 add (1)    r27.0<1>:ud		r27.0<0;1,0>:ud			r1.12<0;1,0>:uw		{ NoDDClr }  	// Add pitch to X origin
 mov (1)    r27.2<1>:ud		0x3:ud									{ NoDDChk }  	// block width and height
 
@@ -353,8 +353,8 @@ send (8)	null<1>:d	r22	0x5		0x40A8021:ud
 mov (8)		mudMSGHDR_ENC_STATS(1)<1>	0x0:ud						// Init payload MRF
 mov (8)		mudMSGHDR_ENC_STATS(0)<1>	r0.0<8;8,1>:ud				// message header
 
-shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r7.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
-mul (1)		acc0.1<1>:ud					r7.1<0;1,0>:w				3:w																							// Y origin * 3
+shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r9.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
+mul (1)		acc0.1<1>:ud					r9.1<0;1,0>:w				3:w																							// Y origin * 3
 shr (1)		mudMSGHDR_ENC_STATS(0,1)<1>		acc0.1<0;1,0>:ud			2:w		{ NoDDClr, NoDDChk }		//enable the flag after testing on si			   { NoDDClr, NoDDChk } // Y origin * 3/4
 mov (1)		mudMSGHDR_ENC_STATS(0,2)<1>		0x20007:ud				{ NoDDChk }			//enable the flag after testing on si						{ NoDDChk } // block width and height (8x3)
 add (2)		mudMSGHDR_ENC_STATS(0,0)<1>		mudMSGHDR_ENC_STATS(0,0)<2;2,1>       	r1.12<2;2,1>:uw					// Add pitch to X,Y origin
@@ -390,7 +390,7 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 // Description:	Read UV for 16x4 block through DATAPORT 
 
 
-	add (2)		r27.0<1>:d				r7.0<2;2,1>:w				r4.4<2;2,1>:w				// Source Y Block origin
+	add (2)		r27.0<1>:d				r9.0<2;2,1>:w				r4.4<2;2,1>:w				// Source Y Block origin
 	asr (1)  	r27.1<1>:d     			r27.1<0;1,0>:d       	1:w   						{ NoDDClr }		// U/V block origin should be half of Y's
 	mov (1)		r27.2<1>:ud				0x1000F:ud  					{ NoDDChk }		// U/V block width and height (8x4)
     mov (8)     mudMSGHDR_UVCOPY(0)<1>    	r27.0<8;8,1>:ud
@@ -407,7 +407,7 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 cmp.e.f0.0 (1)  null<1>:w               r1.28<0;1,0>:ub     1:w
 
 mov (8)		mudMSGHDR_DN_OUT(0)<1>		r0<8;8,1>:ud            						// message header   
-mov (2)     mdMSGHDR_DN_OUT(0,0)<1>		r7.0<2;2,1>:w  				{ NoDDClr }        	// X origin * 2 (422 output)
+mov (2)     mdMSGHDR_DN_OUT(0,0)<1>		r9.0<2;2,1>:w  				{ NoDDClr }        	// X origin * 2 (422 output)
 mov (1)     mudMSGHDR_DN_OUT(0,2)<1>	0x3000F:ud		{ NoDDChk }        	// block width and height (32x8)
 
 (f0.0) jmpi (1) TOP_FIELD_FIRST
@@ -441,8 +441,8 @@ send (8)    null<1>:d    r31.0		0x5    0x60A8018:ud
 add (4) a0.4<1>:uw   r2.28<4;4,1>:ub   608:w               // Initial Y,U,V offset in YUV422 block; it starts at m20
 
 mov (8) r27.0<1>:ud     r0.0<8;8,1>:ud
-shl (1) r27.0<1>:d      r7.0<0;1,0>:w            1:w  { NoDDClr }          // H. block origin need to be doubled
-mov (1) r27.1<1>:d      r7.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
+shl (1) r27.0<1>:d      r9.0<0;1,0>:w            1:w  { NoDDClr }          // H. block origin need to be doubled
+mov (1) r27.1<1>:d      r9.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
 mov (1) r27.2<1>:ud     0x3001F:ud          { NoDDChk }          // Block width and height (32x8)
 
 //prepare the message headers
diff --git a/src/shaders/post_processing/gen7/NV12_DNUV_NV12.g4a b/src/shaders/post_processing/gen7/NV12_DNUV_NV12.g4a
index 946a051..c106998 100644
--- a/src/shaders/post_processing/gen7/NV12_DNUV_NV12.g4a
+++ b/src/shaders/post_processing/gen7/NV12_DNUV_NV12.g4a
@@ -176,7 +176,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -185,15 +185,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -479,9 +479,9 @@
 // Cordinates: (x-2, y-2), (x+14, y-2), (x-2, y+6), (x+14, y+6), (x-2, y+14), (x+14, y+14)
 
 	//UV surface origin: (ORIX, ORIY/2)
-	add  (2)	r7.4<1>:w		r7.0<2;2,1>:w	 	r4.4<2;2,1>:w	 { AccWrEn } // Source Block origin
-	shr  (1)	r7.5<1>:w		acc0.5<0;1,0>:w		1:w
-	mov  (2)	acc0.0<1>:d							r7.4<2;2,1>:w
+	add  (2)	r9.4<1>:w		r9.0<2;2,1>:w	 	r4.4<2;2,1>:w	 { AccWrEn } // Source Block origin
+	shr  (1)	r9.5<1>:w		acc0.5<0;1,0>:w		1:w
+	mov  (2)	acc0.0<1>:d							r9.4<2;2,1>:w
 
 	//A
 	add  (2)   	r50.0<1>:d	acc0.0<2;2,1>:d		-2:d					{ AccWrEn }
@@ -515,13 +515,13 @@
  	//History Origin, Current Y origin and BNE surface origin - all are in inline GRF. Use , . -rT.
 
  	//Calculate Origin For History Surface: (ORIX/4, ORIY/8)
-	mov  (16)   acc0.0<1>:w						r7.0<0;2,1>:w
-	shr  (1)	r7.2<1>:w		acc0.2<0;1,0>:w	2:w			
-	shr  (1)	r7.3<1>:w		acc0.3<0;1,0>:w	3:w			
+	mov  (16)   acc0.0<1>:w						r9.0<0;2,1>:w
+	shr  (1)	r9.2<1>:w		acc0.2<0;1,0>:w	2:w			
+	shr  (1)	r9.3<1>:w		acc0.3<0;1,0>:w	3:w			
 
 	//Calculate Origin For BNE Surface: (ORIX/8, ORIY/16)
-	shr  (1)	r7.6<1>:w		acc0.6<0;1,0>:w		3:w		
-	shr  (1)	r7.7<1>:w		acc0.7<0;1,0>:w		4:w		
+	shr  (1)	r9.6<1>:w		acc0.6<0;1,0>:w		3:w		
+	shr  (1)	r9.7<1>:w		acc0.7<0;1,0>:w		4:w		
 
 
 
@@ -538,7 +538,7 @@
 
 
 
-	mov  (2)	r50.0<1>:d		r7.4<2;2,1>:w			{ AccWrEn } 	// Source lock origin
+	mov  (2)	r50.0<1>:d		r9.4<2;2,1>:w			{ AccWrEn } 	// Source lock origin
 	mov  (1)	r50.2<1>:ud		0xF000F:ud  						// U/V block width and height (16x16)
 	send (8)	udPREV_UV(0)<1>		r50		0x4	0x2890001:ud
 
@@ -556,7 +556,7 @@
 
 
 
-	mov  (2)	r50.0<1>:d	r7.2<2;2,1>:w			
+	mov  (2)	r50.0<1>:d	r9.2<2;2,1>:w			
 	mov  (1)	r50.2<1>:ud	0x30007:ud  		
 	send (8)	udHIST_UV(0)<1>			r50		0x4	0x2190022:ud
 
@@ -579,7 +579,7 @@
 
 	mov (8)		acc0.0<1>:ud		r0.0<8;8,1>:ud
 	mov (1)		acc0.2<1>:ud		0xF000F:ud
-	add (2)		acc0.0<1>:ud		r7.0<2;2,1>:w		r4.4<2;2,1>:w
+	add (2)		acc0.0<1>:ud		r9.0<2;2,1>:w		r4.4<2;2,1>:w
 
 	mov (8)     r92.0<1>:ud	acc0.0<8;8,1>:ud
 
@@ -621,8 +621,8 @@
 	mov (4) r61.28<1>:ub		r1.12<4;4,1>:ub		
 
 	//Move Inline Data to another space - so that it can be used as Temp Space --> r7
-	mov (4) r62.10<1>:w				r7.0<4;4,1>:w
-	mov (4) r63.10<1>:w		r7.4<4;4,1>:w
+	mov (4) r62.10<1>:w				r9.0<4;4,1>:w
+	mov (4) r63.10<1>:w		r9.4<4;4,1>:w
 
 
 
@@ -639,7 +639,7 @@
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -658,7 +658,7 @@ add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -677,7 +677,7 @@ add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -696,7 +696,7 @@ add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -714,7 +714,7 @@ add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -733,7 +733,7 @@ add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -752,7 +752,7 @@ add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -771,7 +771,7 @@ add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -2506,7 +2506,7 @@ cmp.g.f0.0 (16) null:uw      			uwCURBE_TEMP(0)<16;16,1>   (abs)wDIFF(17)<16;16,
 
 // End of common.inc
 
-mov (1) ip:ud r7.7<0;1,0>:d
+mov (1) ip:ud r9.7<0;1,0>:d
 
 
 .end_code
diff --git a/src/shaders/post_processing/gen7/NV12_DN_422CP.g4a b/src/shaders/post_processing/gen7/NV12_DN_422CP.g4a
index 65116d0..96eb676 100644
--- a/src/shaders/post_processing/gen7/NV12_DN_422CP.g4a
+++ b/src/shaders/post_processing/gen7/NV12_DN_422CP.g4a
@@ -175,7 +175,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -184,15 +184,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -299,14 +299,14 @@
 
 // Prepare the DNDI send command
 mov (8)		mudMSGHDR_DNDI(0)<1>			r0.0<8;8,1>:ud					// message header
-mov (1)		mwMSGHDR_DNDI(1,4)<1>			r7.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
-mov (1)		mwMSGHDR_DNDI(1,12)<1>			r7.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
+mov (1)		mwMSGHDR_DNDI(1,4)<1>			r9.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
+mov (1)		mwMSGHDR_DNDI(1,12)<1>			r9.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
 
 send (8)	udDNDI_RESP(0)<1>	r18	0x2	0x45E8003:ud
 
 // On Gen6, with VDI walker, use the XY pair returned rather than programmed above
 // VDI_RETURNED_XY is ordered XY in case of walker enables and the same as programmed in case of walker disabled
-mov (2) 	r7.0<1>:w     uwDNDI_RESP(4,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
+mov (2) 	r9.0<1>:w     uwDNDI_RESP(4,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
 
 
 
@@ -321,7 +321,7 @@ mov (8)    r27<1>:ud				r0.0<8;8,1>:ud                   			// message header
 	mov (2)    mudMSGHDR_HIST(1)<1>    	udDNDI_RESP(4,0)<2;2,1>    	// Move denoise history to MRF (4x2)
 
 
-shr (2)    r27.0<1>:ud		r7.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
+shr (2)    r27.0<1>:ud		r9.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
 add (1)    r27.0<1>:ud		r27.0<0;1,0>:ud			r1.12<0;1,0>:uw		{ NoDDClr }  	// Add pitch to X origin
 mov (1)    r27.2<1>:ud		0x10003:ud									{ NoDDChk }  	// block width and height
 
@@ -339,8 +339,8 @@ send (8)	null<1>:d	r22	0x5		0x40A8021:ud
 mov (8)		mudMSGHDR_ENC_STATS(1)<1>	0x0:ud						// Init payload MRF
 mov (8)		mudMSGHDR_ENC_STATS(0)<1>	r0.0<8;8,1>:ud				// message header
 
-shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r7.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
-mul (1)		acc0.1<1>:ud					r7.1<0;1,0>:w				3:w																							// Y origin * 3
+shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r9.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
+mul (1)		acc0.1<1>:ud					r9.1<0;1,0>:w				3:w																							// Y origin * 3
 shr (1)		mudMSGHDR_ENC_STATS(0,1)<1>		acc0.1<0;1,0>:ud			2:w		{ NoDDClr, NoDDChk }		//enable the flag after testing on si			   { NoDDClr, NoDDChk } // Y origin * 3/4
 mov (1)		mudMSGHDR_ENC_STATS(0,2)<1>		0x50003:ud				{ NoDDChk }			//enable the flag after testing on si						{ NoDDChk } // block width and height (8x3)
 add (2)		mudMSGHDR_ENC_STATS(0,0)<1>		mudMSGHDR_ENC_STATS(0,0)<2;2,1>       	r1.12<2;2,1>:uw					// Add pitch to X,Y origin
@@ -387,7 +387,7 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 //we are reading extra data in ALL cases irrespective of whether upsampling is reqd or not later on, to keep things simple.
 
 
-	add (2)		r27.0<1>:d				r7.0<2;2,1>:w				r4.4<2;2,1>:w				// Source Y Block origin
+	add (2)		r27.0<1>:d				r9.0<2;2,1>:w				r4.4<2;2,1>:w				// Source Y Block origin
 	asr (1)  	r27.1<1>:d     			r27.1<0;1,0>:d       	1:w   						{ NoDDClr }	// U/V block origin should be half of Y's
 	mov (1)		r27.2<1>:ud				0x4000F:ud  					{ NoDDChk }	// U/V block width and height (8x5)
     mov (8)     mudMSGHDR_UVCOPY(0)<1>    	r27.0<8;8,1>:ud
@@ -404,7 +404,7 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 
 
 mov (8)     mudDN_Y_OUT(0,0)<1>     r0<8;8,1>:ud                                // message header
-mov (2)     mudDN_Y_OUT(0,0)<1>     r7.0<2;2,1>:w                  { NoDDClr }     // X origin
+mov (2)     mudDN_Y_OUT(0,0)<1>     r9.0<2;2,1>:w                  { NoDDClr }     // X origin
 mov (1)     mudDN_Y_OUT(0,2)<1>     0x7000F:ud    { NoDDChk }     // block width and height (16x8)
 
 //send out data through data port
@@ -472,13 +472,13 @@ send (8)    null<1>:d    mudDN_Y_OUT      0x5    0xA0A8018:ud
 
 
 mov (8)		mudMSGHDR_DN_OUT(0)<1>		r0<8;8,1>:ud            			// message header
-shl (1)     mdMSGHDR_DN_OUT(0,0)<1>		r7.0<0;1,0>:w     1:w  		{ NoDDClr }            // X origin * 2 (422 output)
-mov (1)     mdMSGHDR_DN_OUT(0,1)<1>		r7.1<0;1,0>:w          		{ NoDDClr, NoDDChk }   // Y origin
+shl (1)     mdMSGHDR_DN_OUT(0,0)<1>		r9.0<0;1,0>:w     1:w  		{ NoDDClr }            // X origin * 2 (422 output)
+mov (1)     mdMSGHDR_DN_OUT(0,1)<1>		r9.1<0;1,0>:w          		{ NoDDClr, NoDDChk }   // Y origin
 mov (1)     mudMSGHDR_DN_OUT(0,2)<1>	0x7000F:ud	{ NoDDClr, NoDDChk }            // block width and height (16x8)
 
 //M0.3	- 0 - CP Enable, 1 - Area of Interest, 3:2 Message Format(TBD), 4:3 - Ignored, 31:5 CP state pointer
 //Compose area-of-interest bit + color pipe state pointer
-or (1)		mudMSGHDR_DN_OUT(0,3)<1>		r2.4<0;1,0>:ud 	r7.26<0;1,0>:b		{ NoDDChk }
+or (1)		mudMSGHDR_DN_OUT(0,3)<1>		r2.4<0;1,0>:ud 	r9.26<0;1,0>:b		{ NoDDChk }
 
 // First 8 x 8 Block
 	mov (8)		mubMSGHDR_DN_OUT(1)<2>			ubDNDI_RESP(0,0)<8;8,1>				{ NoDDClr } 	// copy line of Y directly to memory as optimization
diff --git a/src/shaders/post_processing/gen7/NV12_DN_NV12.g4a b/src/shaders/post_processing/gen7/NV12_DN_NV12.g4a
index 4ba4bc6..f7692a3 100644
--- a/src/shaders/post_processing/gen7/NV12_DN_NV12.g4a
+++ b/src/shaders/post_processing/gen7/NV12_DN_NV12.g4a
@@ -175,7 +175,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -184,15 +184,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -299,14 +299,14 @@
 
 // Prepare the DNDI send command
 mov (8)		mudMSGHDR_DNDI(0)<1>			r0.0<8;8,1>:ud					// message header
-mov (1)		mwMSGHDR_DNDI(1,4)<1>			r7.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
-mov (1)		mwMSGHDR_DNDI(1,12)<1>			r7.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
+mov (1)		mwMSGHDR_DNDI(1,4)<1>			r9.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
+mov (1)		mwMSGHDR_DNDI(1,12)<1>			r9.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
 
 send (8)	udDNDI_RESP(0)<1>	r18	0x2	0x45E8003:ud
 
 // On Gen6, with VDI walker, use the XY pair returned rather than programmed above
 // VDI_RETURNED_XY is ordered XY in case of walker enables and the same as programmed in case of walker disabled
-mov (2) 	r7.0<1>:w     uwDNDI_RESP(4,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
+mov (2) 	r9.0<1>:w     uwDNDI_RESP(4,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
 
 
 
@@ -321,7 +321,7 @@ mov (8)    r27<1>:ud				r0.0<8;8,1>:ud                   			// message header
 	mov (2)    mudMSGHDR_HIST(1)<1>    	udDNDI_RESP(4,0)<2;2,1>    	// Move denoise history to MRF (4x2)
 
 
-shr (2)    r27.0<1>:ud		r7.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
+shr (2)    r27.0<1>:ud		r9.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
 add (1)    r27.0<1>:ud		r27.0<0;1,0>:ud			r1.12<0;1,0>:uw		{ NoDDClr }  	// Add pitch to X origin
 mov (1)    r27.2<1>:ud		0x10003:ud									{ NoDDChk }  	// block width and height
 
@@ -339,8 +339,8 @@ send (8)	null<1>:d	r22	0x5		0x40A8021:ud
 mov (8)		mudMSGHDR_ENC_STATS(1)<1>	0x0:ud						// Init payload MRF
 mov (8)		mudMSGHDR_ENC_STATS(0)<1>	r0.0<8;8,1>:ud				// message header
 
-shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r7.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
-mul (1)		acc0.1<1>:ud					r7.1<0;1,0>:w				3:w																							// Y origin * 3
+shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r9.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
+mul (1)		acc0.1<1>:ud					r9.1<0;1,0>:w				3:w																							// Y origin * 3
 shr (1)		mudMSGHDR_ENC_STATS(0,1)<1>		acc0.1<0;1,0>:ud			2:w		{ NoDDClr, NoDDChk }		//enable the flag after testing on si			   { NoDDClr, NoDDChk } // Y origin * 3/4
 mov (1)		mudMSGHDR_ENC_STATS(0,2)<1>		0x50003:ud				{ NoDDChk }			//enable the flag after testing on si						{ NoDDChk } // block width and height (8x3)
 add (2)		mudMSGHDR_ENC_STATS(0,0)<1>		mudMSGHDR_ENC_STATS(0,0)<2;2,1>       	r1.12<2;2,1>:uw					// Add pitch to X,Y origin
@@ -387,7 +387,7 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 //we are reading extra data in ALL cases irrespective of whether upsampling is reqd or not later on, to keep things simple.
 
 
-	add (2)		r27.0<1>:d				r7.0<2;2,1>:w				r4.4<2;2,1>:w				// Source Y Block origin
+	add (2)		r27.0<1>:d				r9.0<2;2,1>:w				r4.4<2;2,1>:w				// Source Y Block origin
 	asr (1)  	r27.1<1>:d     			r27.1<0;1,0>:d       	1:w   						{ NoDDClr }	// U/V block origin should be half of Y's
 	mov (1)		r27.2<1>:ud				0x4000F:ud  					{ NoDDChk }	// U/V block width and height (8x5)
     mov (8)     mudMSGHDR_UVCOPY(0)<1>    	r27.0<8;8,1>:ud
@@ -404,7 +404,7 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 
 
 mov (8)     mudDN_Y_OUT(0,0)<1>     r0<8;8,1>:ud                                // message header
-mov (2)     mudDN_Y_OUT(0,0)<1>     r7.0<2;2,1>:w                  { NoDDClr }     // X origin
+mov (2)     mudDN_Y_OUT(0,0)<1>     r9.0<2;2,1>:w                  { NoDDClr }     // X origin
 mov (1)     mudDN_Y_OUT(0,2)<1>     0x7000F:ud    { NoDDChk }     // block width and height (16x8)
 
 //send out data through data port
diff --git a/src/shaders/post_processing/gen7/PA_AVS_Buf_0.g4a b/src/shaders/post_processing/gen7/PA_AVS_Buf_0.g4a
index 9f9abe9..bf55e0b 100644
--- a/src/shaders/post_processing/gen7/PA_AVS_Buf_0.g4a
+++ b/src/shaders/post_processing/gen7/PA_AVS_Buf_0.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -437,13 +437,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
@@ -471,8 +471,8 @@
 
 
         //OPT: rAVS_PAYLOAD.1 and .7 --> use NODDCLR, NODDCHK -rT
-        mov (1)   r25.7<1>:ud      r7.7:ud           { NoDDClr }
-        mov (1)   r25.1<1>:ud      r7.12:uw       { NoDDChk }
+        mov (1)   r25.7<1>:ud      r9.7:ud           { NoDDClr }
+        mov (1)   r25.1<1>:ud      r9.12:uw       { NoDDChk }
 
 
     // set the vertical block number
diff --git a/src/shaders/post_processing/gen7/PA_AVS_Buf_1.g4a b/src/shaders/post_processing/gen7/PA_AVS_Buf_1.g4a
index 1ff72e1..80bb2be 100644
--- a/src/shaders/post_processing/gen7/PA_AVS_Buf_1.g4a
+++ b/src/shaders/post_processing/gen7/PA_AVS_Buf_1.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -437,13 +437,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
@@ -467,7 +467,7 @@
 
     // set the vertical block number
 
-        add (1)   r25.1<1>:ud    r7.12:uw  1:ud
+        add (1)   r25.1<1>:ud    r9.12:uw  1:ud
 
 
     mov (8)     r17.0:ud      r25.0<8;8,1>:ud
diff --git a/src/shaders/post_processing/gen7/PA_AVS_Buf_2.g4a b/src/shaders/post_processing/gen7/PA_AVS_Buf_2.g4a
index e487242..a67c705 100644
--- a/src/shaders/post_processing/gen7/PA_AVS_Buf_2.g4a
+++ b/src/shaders/post_processing/gen7/PA_AVS_Buf_2.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -437,13 +437,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
@@ -468,7 +468,7 @@
     // set the vertical block number
 
 
-        add (1)   r25.1<1>:ud    r7.12:uw  2:ud
+        add (1)   r25.1<1>:ud    r9.12:uw  2:ud
 
 
     mov (8)     r17.0:ud      r25.0<8;8,1>:ud
diff --git a/src/shaders/post_processing/gen7/PA_AVS_Buf_3.g4a b/src/shaders/post_processing/gen7/PA_AVS_Buf_3.g4a
index e867bb0..af9152d 100644
--- a/src/shaders/post_processing/gen7/PA_AVS_Buf_3.g4a
+++ b/src/shaders/post_processing/gen7/PA_AVS_Buf_3.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -437,13 +437,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
@@ -468,7 +468,7 @@
     // set the vertical block number
 
 
-        add (1)   r25.1<1>:ud    r7.12:uw  3:ud
+        add (1)   r25.1<1>:ud    r9.12:uw  3:ud
 
 
     mov (8)     r17.0:ud      r25.0<8;8,1>:ud
diff --git a/src/shaders/post_processing/gen7/PA_DI_422CP.g4a b/src/shaders/post_processing/gen7/PA_DI_422CP.g4a
index fb1d034..521e843 100644
--- a/src/shaders/post_processing/gen7/PA_DI_422CP.g4a
+++ b/src/shaders/post_processing/gen7/PA_DI_422CP.g4a
@@ -169,7 +169,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -178,15 +178,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -293,14 +293,14 @@
 
 // Prepare the DNDI send command
 mov (8)		mudMSGHDR_DNDI(0)<1>			r0.0<8;8,1>:ud					// message header
-mov (1)		mwMSGHDR_DNDI(1,4)<1>			r7.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
-mov (1)		mwMSGHDR_DNDI(1,12)<1>			r7.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
+mov (1)		mwMSGHDR_DNDI(1,4)<1>			r9.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
+mov (1)		mwMSGHDR_DNDI(1,12)<1>			r9.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
 
 send (8)	udDNDI_RESP(0)<1>	r18	0x2	0x4AE8003:ud
 
 // On Gen6, with VDI walker, use the XY pair returned rather than programmed above
 // VDI_RETURNED_XY is ordered XY in case of walker enables and the same as programmed in case of walker disabled
-mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
+mov (2) 	r9.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
 
 
 
@@ -312,8 +312,8 @@ mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in
 mov (8)     mudMSGHDR_STMM(0)<1>	r0.0<8;8,1>:ud               							// message header   
 mov (8)     mudMSGHDR_STMM(1)<1>   	udDNDI_RESP(8,0)         					// Move STMM to MRF 
 
-shr (1)     mudMSGHDR_STMM(0,0)<1>	r7.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
-mov (1)     mudMSGHDR_STMM(0,1)<1>	r7.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
+shr (1)     mudMSGHDR_STMM(0,0)<1>	r9.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
+mov (1)     mudMSGHDR_STMM(0,1)<1>	r9.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
 mov (1)     mudMSGHDR_STMM(0,2)<1>	0x30007:ud           { NoDDChk } 		// block width and height (8x4)
 
 send (8)	null<1>:d	r20	0x5		0x40A8021:ud      
@@ -329,8 +329,8 @@ send (8)	null<1>:d	r20	0x5		0x40A8021:ud
 mov (8)		mudMSGHDR_ENC_STATS(1)<1>	0x0:ud						// Init payload MRF
 mov (8)		mudMSGHDR_ENC_STATS(0)<1>	r0.0<8;8,1>:ud				// message header
 
-shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r7.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
-mul (1)		acc0.1<1>:ud					r7.1<0;1,0>:w				3:w																							// Y origin * 3
+shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r9.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
+mul (1)		acc0.1<1>:ud					r9.1<0;1,0>:w				3:w																							// Y origin * 3
 shr (1)		mudMSGHDR_ENC_STATS(0,1)<1>		acc0.1<0;1,0>:ud			2:w		{ NoDDClr, NoDDChk }		//enable the flag after testing on si			   { NoDDClr, NoDDChk } // Y origin * 3/4
 mov (1)		mudMSGHDR_ENC_STATS(0,2)<1>		0x20007:ud				{ NoDDChk }			//enable the flag after testing on si						{ NoDDChk } // block width and height (8x3)
 add (2)		mudMSGHDR_ENC_STATS(0,0)<1>		mudMSGHDR_ENC_STATS(0,0)<2;2,1>       	r1.12<2;2,1>:uw					// Add pitch to X,Y origin
@@ -373,13 +373,13 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 
 
 mov (8) r27.0<1>:ud     r0.0<8;8,1>:ud
-shl (1) r27.0<1>:ud     r7.0<0;1,0>:w            1:w  { NoDDClr }          // H. block origin need to be doubled
-mov (1) r27.1<1>:ud     r7.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
+shl (1) r27.0<1>:ud     r9.0<0;1,0>:w            1:w  { NoDDClr }          // H. block origin need to be doubled
+mov (1) r27.1<1>:ud     r9.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
 mov (1) r27.2<1>:ud     0x3000F:ud        { NoDDClr, NoDDChk }       // Block width and height (16x8)
 
 //M0.3  - 0 - CP Enable, 1 - Area of Interest, 3:2 Message Format(TBD), 4:3 - Ignored, 31:5 CP state pointer
 //Compose area-of-interest bit + color pipe state pointer
-or (1)  r27.3<1>:ud     r2.4<0;1,0>:ud     r7.26<0;1,0>:b     { NoDDChk }
+or (1)  r27.3<1>:ud     r2.4<0;1,0>:ud     r9.26<0;1,0>:b     { NoDDChk }
 
 //prepare the message headers
 mov (8) r18.0<1>:ud       r27<8;8,1>:ud
diff --git a/src/shaders/post_processing/gen7/PA_DI_PA.g4a b/src/shaders/post_processing/gen7/PA_DI_PA.g4a
index 08ee191..b733565 100644
--- a/src/shaders/post_processing/gen7/PA_DI_PA.g4a
+++ b/src/shaders/post_processing/gen7/PA_DI_PA.g4a
@@ -169,7 +169,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -178,15 +178,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -293,14 +293,14 @@
 
 // Prepare the DNDI send command
 mov (8)		mudMSGHDR_DNDI(0)<1>			r0.0<8;8,1>:ud					// message header
-mov (1)		mwMSGHDR_DNDI(1,4)<1>			r7.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
-mov (1)		mwMSGHDR_DNDI(1,12)<1>			r7.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
+mov (1)		mwMSGHDR_DNDI(1,4)<1>			r9.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
+mov (1)		mwMSGHDR_DNDI(1,12)<1>			r9.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
 
 send (8)	udDNDI_RESP(0)<1>	r18	0x2	0x4AE8003:ud
 
 // On Gen6, with VDI walker, use the XY pair returned rather than programmed above
 // VDI_RETURNED_XY is ordered XY in case of walker enables and the same as programmed in case of walker disabled
-mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
+mov (2) 	r9.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
 
 
 
@@ -312,8 +312,8 @@ mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in
 mov (8)     mudMSGHDR_STMM(0)<1>	r0.0<8;8,1>:ud               							// message header   
 mov (8)     mudMSGHDR_STMM(1)<1>   	udDNDI_RESP(8,0)         					// Move STMM to MRF 
 
-shr (1)     mudMSGHDR_STMM(0,0)<1>	r7.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
-mov (1)     mudMSGHDR_STMM(0,1)<1>	r7.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
+shr (1)     mudMSGHDR_STMM(0,0)<1>	r9.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
+mov (1)     mudMSGHDR_STMM(0,1)<1>	r9.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
 mov (1)     mudMSGHDR_STMM(0,2)<1>	0x30007:ud           { NoDDChk } 		// block width and height (8x4)
 
 send (8)	null<1>:d	r20	0x5		0x40A8021:ud      
@@ -329,8 +329,8 @@ send (8)	null<1>:d	r20	0x5		0x40A8021:ud
 mov (8)		mudMSGHDR_ENC_STATS(1)<1>	0x0:ud						// Init payload MRF
 mov (8)		mudMSGHDR_ENC_STATS(0)<1>	r0.0<8;8,1>:ud				// message header
 
-shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r7.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
-mul (1)		acc0.1<1>:ud					r7.1<0;1,0>:w				3:w																							// Y origin * 3
+shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r9.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
+mul (1)		acc0.1<1>:ud					r9.1<0;1,0>:w				3:w																							// Y origin * 3
 shr (1)		mudMSGHDR_ENC_STATS(0,1)<1>		acc0.1<0;1,0>:ud			2:w		{ NoDDClr, NoDDChk }		//enable the flag after testing on si			   { NoDDClr, NoDDChk } // Y origin * 3/4
 mov (1)		mudMSGHDR_ENC_STATS(0,2)<1>		0x20007:ud				{ NoDDChk }			//enable the flag after testing on si						{ NoDDChk } // block width and height (8x3)
 add (2)		mudMSGHDR_ENC_STATS(0,0)<1>		mudMSGHDR_ENC_STATS(0,0)<2;2,1>       	r1.12<2;2,1>:uw					// Add pitch to X,Y origin
@@ -363,8 +363,8 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 add (4) a0.4<1>:uw   r2.28<4;4,1>:ub   608:w               // Initial Y,U,V offset in YUV422 block; it starts at m20
 
 mov (8) r27.0<1>:ud     r0.0<8;8,1>:ud
-shl (1) r27.0<1>:d      r7.0<0;1,0>:w            1:w  { NoDDClr }          // H. block origin need to be doubled
-mov (1) r27.1<1>:d      r7.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
+shl (1) r27.0<1>:d      r9.0<0;1,0>:w            1:w  { NoDDClr }          // H. block origin need to be doubled
+mov (1) r27.1<1>:d      r9.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
 mov (1) r27.2<1>:ud     0x3001F:ud          { NoDDChk }          // Block width and height (32x8)
 
 //prepare the message headers
diff --git a/src/shaders/post_processing/gen7/PA_DNDI_422CP.g4a b/src/shaders/post_processing/gen7/PA_DNDI_422CP.g4a
index 996f65d..f36c78d 100644
--- a/src/shaders/post_processing/gen7/PA_DNDI_422CP.g4a
+++ b/src/shaders/post_processing/gen7/PA_DNDI_422CP.g4a
@@ -174,7 +174,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -183,15 +183,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -298,14 +298,14 @@
 
 // Prepare the DNDI send command
 mov (8)		mudMSGHDR_DNDI(0)<1>			r0.0<8;8,1>:ud					// message header
-mov (1)		mwMSGHDR_DNDI(1,4)<1>			r7.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
-mov (1)		mwMSGHDR_DNDI(1,12)<1>			r7.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
+mov (1)		mwMSGHDR_DNDI(1,4)<1>			r9.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
+mov (1)		mwMSGHDR_DNDI(1,12)<1>			r9.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
 
 send (8)	udDNDI_RESP(0)<1>	r18	0x2	0x4CE8003:ud
 
 // On Gen6, with VDI walker, use the XY pair returned rather than programmed above
 // VDI_RETURNED_XY is ordered XY in case of walker enables and the same as programmed in case of walker disabled
-mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
+mov (2) 	r9.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
 
 
 
@@ -317,8 +317,8 @@ mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in
 mov (8)     mudMSGHDR_STMM(0)<1>	r0.0<8;8,1>:ud               							// message header   
 mov (8)     mudMSGHDR_STMM(1)<1>   	udDNDI_RESP(8,0)         					// Move STMM to MRF 
 
-shr (1)     mudMSGHDR_STMM(0,0)<1>	r7.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
-mov (1)     mudMSGHDR_STMM(0,1)<1>	r7.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
+shr (1)     mudMSGHDR_STMM(0,0)<1>	r9.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
+mov (1)     mudMSGHDR_STMM(0,1)<1>	r9.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
 mov (1)     mudMSGHDR_STMM(0,2)<1>	0x30007:ud           { NoDDChk } 		// block width and height (8x4)
 
 send (8)	null<1>:d	r20	0x5		0x40A8021:ud      
@@ -335,7 +335,7 @@ mov (8)    r27<1>:ud				r0.0<8;8,1>:ud                   			// message header
 	mov (1)    mudMSGHDR_HIST(1)<1>		udDNDI_RESP(9,0)<0;1,0>		// Move denoise history to MRF (4x1)
 
 
-shr (2)    r27.0<1>:ud		r7.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
+shr (2)    r27.0<1>:ud		r9.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
 add (1)    r27.0<1>:ud		r27.0<0;1,0>:ud			r1.12<0;1,0>:uw		{ NoDDClr }  	// Add pitch to X origin
 mov (1)    r27.2<1>:ud		0x3:ud									{ NoDDChk }  	// block width and height
 
@@ -353,8 +353,8 @@ send (8)	null<1>:d	r22	0x5		0x40A8021:ud
 mov (8)		mudMSGHDR_ENC_STATS(1)<1>	0x0:ud						// Init payload MRF
 mov (8)		mudMSGHDR_ENC_STATS(0)<1>	r0.0<8;8,1>:ud				// message header
 
-shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r7.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
-mul (1)		acc0.1<1>:ud					r7.1<0;1,0>:w				3:w																							// Y origin * 3
+shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r9.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
+mul (1)		acc0.1<1>:ud					r9.1<0;1,0>:w				3:w																							// Y origin * 3
 shr (1)		mudMSGHDR_ENC_STATS(0,1)<1>		acc0.1<0;1,0>:ud			2:w		{ NoDDClr, NoDDChk }		//enable the flag after testing on si			   { NoDDClr, NoDDChk } // Y origin * 3/4
 mov (1)		mudMSGHDR_ENC_STATS(0,2)<1>		0x20007:ud				{ NoDDChk }			//enable the flag after testing on si						{ NoDDChk } // block width and height (8x3)
 add (2)		mudMSGHDR_ENC_STATS(0,0)<1>		mudMSGHDR_ENC_STATS(0,0)<2;2,1>       	r1.12<2;2,1>:uw					// Add pitch to X,Y origin
@@ -390,8 +390,8 @@ cmp.e.f0.0 (1)  null<1>:w               r1.28<0;1,0>:ub     1:w
 add (4)		a0.4<1>:uw   r4.0<4;4,1>:ub   1024:w    // Initial Y,U,V offset in YUV422 block; it starts at m14
 
 mov (8)		mudMSGHDR_DN_OUT(0)<1>		r0<8;8,1>:ud            			// message header
-shl (1)     mdMSGHDR_DN_OUT(0,0)<1>		r7.0<0;1,0>:w     1:w  		{ NoDDClr }            // X origin * 2 (422 output)
-mov (1)     mdMSGHDR_DN_OUT(0,1)<1>		r7.1<0;1,0>:w          		{ NoDDClr, NoDDChk }   // Y origin
+shl (1)     mdMSGHDR_DN_OUT(0,0)<1>		r9.0<0;1,0>:w     1:w  		{ NoDDClr }            // X origin * 2 (422 output)
+mov (1)     mdMSGHDR_DN_OUT(0,1)<1>		r9.1<0;1,0>:w          		{ NoDDClr, NoDDChk }   // Y origin
 mov (1)     mudMSGHDR_DN_OUT(0,2)<1>	0x3001F:ud	{ NoDDChk }            // block width and height (32x8)
 
 (f0.0) jmpi (1) TOP_FIELD_FIRST
@@ -449,13 +449,13 @@ send (8)    null<1>:d    r31.0		0x5    0xA0A8018:ud
 
 
 mov (8) r27.0<1>:ud     r0.0<8;8,1>:ud
-shl (1) r27.0<1>:ud     r7.0<0;1,0>:w            1:w  { NoDDClr }          // H. block origin need to be doubled
-mov (1) r27.1<1>:ud     r7.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
+shl (1) r27.0<1>:ud     r9.0<0;1,0>:w            1:w  { NoDDClr }          // H. block origin need to be doubled
+mov (1) r27.1<1>:ud     r9.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
 mov (1) r27.2<1>:ud     0x3000F:ud        { NoDDClr, NoDDChk }       // Block width and height (16x8)
 
 //M0.3  - 0 - CP Enable, 1 - Area of Interest, 3:2 Message Format(TBD), 4:3 - Ignored, 31:5 CP state pointer
 //Compose area-of-interest bit + color pipe state pointer
-or (1)  r27.3<1>:ud     r2.4<0;1,0>:ud     r7.26<0;1,0>:b     { NoDDChk }
+or (1)  r27.3<1>:ud     r2.4<0;1,0>:ud     r9.26<0;1,0>:b     { NoDDChk }
 
 //prepare the message headers
 mov (8) r18.0<1>:ud       r27<8;8,1>:ud
diff --git a/src/shaders/post_processing/gen7/PA_DNDI_PA.g4a b/src/shaders/post_processing/gen7/PA_DNDI_PA.g4a
index 54b84ac..7af1e38 100644
--- a/src/shaders/post_processing/gen7/PA_DNDI_PA.g4a
+++ b/src/shaders/post_processing/gen7/PA_DNDI_PA.g4a
@@ -174,7 +174,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -183,15 +183,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -298,14 +298,14 @@
 
 // Prepare the DNDI send command
 mov (8)		mudMSGHDR_DNDI(0)<1>			r0.0<8;8,1>:ud					// message header
-mov (1)		mwMSGHDR_DNDI(1,4)<1>			r7.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
-mov (1)		mwMSGHDR_DNDI(1,12)<1>			r7.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
+mov (1)		mwMSGHDR_DNDI(1,4)<1>			r9.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
+mov (1)		mwMSGHDR_DNDI(1,12)<1>			r9.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
 
 send (8)	udDNDI_RESP(0)<1>	r18	0x2	0x4CE8003:ud
 
 // On Gen6, with VDI walker, use the XY pair returned rather than programmed above
 // VDI_RETURNED_XY is ordered XY in case of walker enables and the same as programmed in case of walker disabled
-mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
+mov (2) 	r9.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
 
 
 
@@ -317,8 +317,8 @@ mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in
 mov (8)     mudMSGHDR_STMM(0)<1>	r0.0<8;8,1>:ud               							// message header   
 mov (8)     mudMSGHDR_STMM(1)<1>   	udDNDI_RESP(8,0)         					// Move STMM to MRF 
 
-shr (1)     mudMSGHDR_STMM(0,0)<1>	r7.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
-mov (1)     mudMSGHDR_STMM(0,1)<1>	r7.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
+shr (1)     mudMSGHDR_STMM(0,0)<1>	r9.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
+mov (1)     mudMSGHDR_STMM(0,1)<1>	r9.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
 mov (1)     mudMSGHDR_STMM(0,2)<1>	0x30007:ud           { NoDDChk } 		// block width and height (8x4)
 
 send (8)	null<1>:d	r20	0x5		0x40A8021:ud      
@@ -335,7 +335,7 @@ mov (8)    r27<1>:ud				r0.0<8;8,1>:ud                   			// message header
 	mov (1)    mudMSGHDR_HIST(1)<1>		udDNDI_RESP(9,0)<0;1,0>		// Move denoise history to MRF (4x1)
 
 
-shr (2)    r27.0<1>:ud		r7.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
+shr (2)    r27.0<1>:ud		r9.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
 add (1)    r27.0<1>:ud		r27.0<0;1,0>:ud			r1.12<0;1,0>:uw		{ NoDDClr }  	// Add pitch to X origin
 mov (1)    r27.2<1>:ud		0x3:ud									{ NoDDChk }  	// block width and height
 
@@ -353,8 +353,8 @@ send (8)	null<1>:d	r22	0x5		0x40A8021:ud
 mov (8)		mudMSGHDR_ENC_STATS(1)<1>	0x0:ud						// Init payload MRF
 mov (8)		mudMSGHDR_ENC_STATS(0)<1>	r0.0<8;8,1>:ud				// message header
 
-shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r7.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
-mul (1)		acc0.1<1>:ud					r7.1<0;1,0>:w				3:w																							// Y origin * 3
+shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r9.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
+mul (1)		acc0.1<1>:ud					r9.1<0;1,0>:w				3:w																							// Y origin * 3
 shr (1)		mudMSGHDR_ENC_STATS(0,1)<1>		acc0.1<0;1,0>:ud			2:w		{ NoDDClr, NoDDChk }		//enable the flag after testing on si			   { NoDDClr, NoDDChk } // Y origin * 3/4
 mov (1)		mudMSGHDR_ENC_STATS(0,2)<1>		0x20007:ud				{ NoDDChk }			//enable the flag after testing on si						{ NoDDChk } // block width and height (8x3)
 add (2)		mudMSGHDR_ENC_STATS(0,0)<1>		mudMSGHDR_ENC_STATS(0,0)<2;2,1>       	r1.12<2;2,1>:uw					// Add pitch to X,Y origin
@@ -390,8 +390,8 @@ cmp.e.f0.0 (1)  null<1>:w               r1.28<0;1,0>:ub     1:w
 add (4)		a0.4<1>:uw   r4.0<4;4,1>:ub   1024:w    // Initial Y,U,V offset in YUV422 block; it starts at m14
 
 mov (8)		mudMSGHDR_DN_OUT(0)<1>		r0<8;8,1>:ud            			// message header
-shl (1)     mdMSGHDR_DN_OUT(0,0)<1>		r7.0<0;1,0>:w     1:w  		{ NoDDClr }            // X origin * 2 (422 output)
-mov (1)     mdMSGHDR_DN_OUT(0,1)<1>		r7.1<0;1,0>:w          		{ NoDDClr, NoDDChk }   // Y origin
+shl (1)     mdMSGHDR_DN_OUT(0,0)<1>		r9.0<0;1,0>:w     1:w  		{ NoDDClr }            // X origin * 2 (422 output)
+mov (1)     mdMSGHDR_DN_OUT(0,1)<1>		r9.1<0;1,0>:w          		{ NoDDClr, NoDDChk }   // Y origin
 mov (1)     mudMSGHDR_DN_OUT(0,2)<1>	0x3001F:ud	{ NoDDChk }            // block width and height (32x8)
 
 (f0.0) jmpi (1) TOP_FIELD_FIRST
@@ -439,8 +439,8 @@ send (8)    null<1>:d    r31.0		0x5    0xA0A8018:ud
 add (4) a0.4<1>:uw   r2.28<4;4,1>:ub   608:w               // Initial Y,U,V offset in YUV422 block; it starts at m20
 
 mov (8) r27.0<1>:ud     r0.0<8;8,1>:ud
-shl (1) r27.0<1>:d      r7.0<0;1,0>:w            1:w  { NoDDClr }          // H. block origin need to be doubled
-mov (1) r27.1<1>:d      r7.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
+shl (1) r27.0<1>:d      r9.0<0;1,0>:w            1:w  { NoDDClr }          // H. block origin need to be doubled
+mov (1) r27.1<1>:d      r9.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
 mov (1) r27.2<1>:ud     0x3001F:ud          { NoDDChk }          // Block width and height (32x8)
 
 //prepare the message headers
diff --git a/src/shaders/post_processing/gen7/PA_DNUV_PA.g4a b/src/shaders/post_processing/gen7/PA_DNUV_PA.g4a
index 195bc6a..c525bc8 100644
--- a/src/shaders/post_processing/gen7/PA_DNUV_PA.g4a
+++ b/src/shaders/post_processing/gen7/PA_DNUV_PA.g4a
@@ -176,7 +176,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -185,15 +185,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -480,11 +480,11 @@
 // Cordinates: (x, y), (x, y+8), (x+32, y), (x+32, y+8), (x-4, y-2), (x+64, y-2),(x, y-2), (x+32, y-2), (x, y+16), (x+32, y+16)
 
 	//UV surface origin: (2xORIX, ORIY)
-	add  (2)	r7.4<1>:w		r7.0<2;2,1>:w	 	r4.4<2;2,1>:w	 { AccWrEn } // Source Block origin
-	shl  (1)	r7.4<1>:w		acc0.4<0;1,0>:w		1:w
+	add  (2)	r9.4<1>:w		r9.0<2;2,1>:w	 	r4.4<2;2,1>:w	 { AccWrEn } // Source Block origin
+	shl  (1)	r9.4<1>:w		acc0.4<0;1,0>:w		1:w
 
 	//A1
-	mov  (2)	r92.0<1>:d		r7.4<2;2,1>:w	 	{ AccWrEn }		// Source Block origin
+	mov  (2)	r92.0<1>:d		r9.4<2;2,1>:w	 	{ AccWrEn }		// Source Block origin
  	mov  (1)   	r92.2<1>:ud		0x7001F:ud		
  	send (8)	udCURR_Y0(0)<1>			r92			0x4	0x2890003:ud
 
@@ -543,10 +543,10 @@
 	//History Origin, Current Y origin and BNE surface origin - all are in inline GRF. Use , . -rT.
 
  	//Calculate Origin For History Surface: (ORIX/4, ORIY/4)
-	shr  (2)	r7.2<1>:w		r7.0<2;2,1>:w		2:w			
+	shr  (2)	r9.2<1>:w		r9.0<2;2,1>:w		2:w			
 
 	//Calculate Origin For BNE Surface: (ORIX/8, ORIY/8)
-	shr  (2)	r7.6<1>:w		r7.0<2;2,1>:w		3:w			
+	shr  (2)	r9.6<1>:w		r9.0<2;2,1>:w		3:w			
 
 
 
@@ -563,7 +563,7 @@
 
 
 
-	mov  (2)	r50.0<1>:d	r7.4<2;2,1>:w	 	{ AccWrEn } 	// Source lock origin
+	mov  (2)	r50.0<1>:d	r9.4<2;2,1>:w	 	{ AccWrEn } 	// Source lock origin
 	mov  (1)	r50.2<1>:ud	0x7001F:ud  					// U/V block width and height (16x16)
 	send (8)	udPREV_UV(0)<1>			r50		0x4	0x2890000:ud
 
@@ -588,7 +588,7 @@
 
 
 
-	mov  (2)	r50.0<1>:d	r7.2<2;2,1>:w			
+	mov  (2)	r50.0<1>:d	r9.2<2;2,1>:w			
 	mov  (1)	r50.2<1>:ud	0x30007:ud  		
 	send (8)	udHIST_UV(0)<1>			r50		0x4	0x2190022:ud
 
@@ -851,8 +851,8 @@
 	mov (4) r61.28<1>:ub		r1.12<4;4,1>:ub		
 
 	//Move Inline Data to another space - so that it can be used as Temp Space --> r7
-	mov (4) r62.10<1>:w				r7.0<4;4,1>:w
-	mov (4) r63.10<1>:w		r7.4<4;4,1>:w
+	mov (4) r62.10<1>:w				r9.0<4;4,1>:w
+	mov (4) r63.10<1>:w		r9.4<4;4,1>:w
 
 
 
@@ -869,7 +869,7 @@
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -888,7 +888,7 @@ add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -907,7 +907,7 @@ add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -926,7 +926,7 @@ add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -944,7 +944,7 @@ add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -963,7 +963,7 @@ add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -982,7 +982,7 @@ add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -1001,7 +1001,7 @@ add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -2719,7 +2719,7 @@ cmp.g.f0.0 (16) null:uw      			uwCURBE_TEMP(0)<16;16,1>   (abs)wDIFF(17)<16;16,
 
 // End of common.inc
 
-mov (1) ip:ud r7.7<0;1,0>:d
+mov (1) ip:ud r9.7<0;1,0>:d
 
 
 .end_code
diff --git a/src/shaders/post_processing/gen7/PA_DN_422CP.g4a b/src/shaders/post_processing/gen7/PA_DN_422CP.g4a
index f76377b..503b59d 100644
--- a/src/shaders/post_processing/gen7/PA_DN_422CP.g4a
+++ b/src/shaders/post_processing/gen7/PA_DN_422CP.g4a
@@ -175,7 +175,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -184,15 +184,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -299,14 +299,14 @@
 
 // Prepare the DNDI send command
 mov (8)		mudMSGHDR_DNDI(0)<1>			r0.0<8;8,1>:ud					// message header
-mov (1)		mwMSGHDR_DNDI(1,4)<1>			r7.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
-mov (1)		mwMSGHDR_DNDI(1,12)<1>			r7.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
+mov (1)		mwMSGHDR_DNDI(1,4)<1>			r9.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
+mov (1)		mwMSGHDR_DNDI(1,12)<1>			r9.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
 
 send (8)	udDNDI_RESP(0)<1>	r18	0x2	0x49E8003:ud
 
 // On Gen6, with VDI walker, use the XY pair returned rather than programmed above
 // VDI_RETURNED_XY is ordered XY in case of walker enables and the same as programmed in case of walker disabled
-mov (2) 	r7.0<1>:w     uwDNDI_RESP(4,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
+mov (2) 	r9.0<1>:w     uwDNDI_RESP(4,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
 
 
 
@@ -321,7 +321,7 @@ mov (8)    r27<1>:ud				r0.0<8;8,1>:ud                   			// message header
 	mov (2)    mudMSGHDR_HIST(1)<1>    	udDNDI_RESP(4,0)<2;2,1>    	// Move denoise history to MRF (4x2)
 
 
-shr (2)    r27.0<1>:ud		r7.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
+shr (2)    r27.0<1>:ud		r9.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
 add (1)    r27.0<1>:ud		r27.0<0;1,0>:ud			r1.12<0;1,0>:uw		{ NoDDClr }  	// Add pitch to X origin
 mov (1)    r27.2<1>:ud		0x10003:ud									{ NoDDChk }  	// block width and height
 
@@ -339,8 +339,8 @@ send (8)	null<1>:d	r22	0x5		0x40A8021:ud
 mov (8)		mudMSGHDR_ENC_STATS(1)<1>	0x0:ud						// Init payload MRF
 mov (8)		mudMSGHDR_ENC_STATS(0)<1>	r0.0<8;8,1>:ud				// message header
 
-shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r7.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
-mul (1)		acc0.1<1>:ud					r7.1<0;1,0>:w				3:w																							// Y origin * 3
+shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r9.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
+mul (1)		acc0.1<1>:ud					r9.1<0;1,0>:w				3:w																							// Y origin * 3
 shr (1)		mudMSGHDR_ENC_STATS(0,1)<1>		acc0.1<0;1,0>:ud			2:w		{ NoDDClr, NoDDChk }		//enable the flag after testing on si			   { NoDDClr, NoDDChk } // Y origin * 3/4
 mov (1)		mudMSGHDR_ENC_STATS(0,2)<1>		0x50003:ud				{ NoDDChk }			//enable the flag after testing on si						{ NoDDChk } // block width and height (8x3)
 add (2)		mudMSGHDR_ENC_STATS(0,0)<1>		mudMSGHDR_ENC_STATS(0,0)<2;2,1>       	r1.12<2;2,1>:uw					// Add pitch to X,Y origin
@@ -381,8 +381,8 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 add (4)		a0.4<1>:uw   r2.28<4;4,1>:ub   1024:w    // Initial Y,U,V offset in YUV422 block; it starts at m14
 
 mov (8)		mudMSGHDR_DN_OUT(0)<1>		r0<8;8,1>:ud            					// message header
-shl (1)     mdMSGHDR_DN_OUT(0,0)<1>		r7.0<0;1,0>:w     1:w  		{ NoDDClr }     // X origin * 2 (422 output)
-mov (1)     mdMSGHDR_DN_OUT(0,1)<1>		r7.1<0;1,0>:w          		{ NoDDClr, NoDDChk }  // Y origin
+shl (1)     mdMSGHDR_DN_OUT(0,0)<1>		r9.0<0;1,0>:w     1:w  		{ NoDDClr }     // X origin * 2 (422 output)
+mov (1)     mdMSGHDR_DN_OUT(0,1)<1>		r9.1<0;1,0>:w          		{ NoDDClr, NoDDChk }  // Y origin
 mov (1)     mudMSGHDR_DN_OUT(0,2)<1>	0x7001F:ud	{ NoDDChk }     // block width and height (32x8)
 
 	mov (16)    r[a0.4,0]<2>:ub   ubDNDI_RESP(0,0)<16;16,1>    	{ NoDDClr }   	// copy line of Y directly to memory as optimization
@@ -424,13 +424,13 @@ send (8)    null<1>:d    r31.0		0x5    0x120A8018:ud
 
 
 mov (8)		mudMSGHDR_DN_OUT(0)<1>		r0<8;8,1>:ud            			// message header
-shl (1)     mdMSGHDR_DN_OUT(0,0)<1>		r7.0<0;1,0>:w     1:w  		{ NoDDClr }            // X origin * 2 (422 output)
-mov (1)     mdMSGHDR_DN_OUT(0,1)<1>		r7.1<0;1,0>:w          		{ NoDDClr, NoDDChk }   // Y origin
+shl (1)     mdMSGHDR_DN_OUT(0,0)<1>		r9.0<0;1,0>:w     1:w  		{ NoDDClr }            // X origin * 2 (422 output)
+mov (1)     mdMSGHDR_DN_OUT(0,1)<1>		r9.1<0;1,0>:w          		{ NoDDClr, NoDDChk }   // Y origin
 mov (1)     mudMSGHDR_DN_OUT(0,2)<1>	0x7000F:ud	{ NoDDClr, NoDDChk }            // block width and height (16x8)
 
 //M0.3	- 0 - CP Enable, 1 - Area of Interest, 3:2 Message Format(TBD), 4:3 - Ignored, 31:5 CP state pointer
 //Compose area-of-interest bit + color pipe state pointer
-or (1)		mudMSGHDR_DN_OUT(0,3)<1>		r2.4<0;1,0>:ud 	r7.26<0;1,0>:b		{ NoDDChk }
+or (1)		mudMSGHDR_DN_OUT(0,3)<1>		r2.4<0;1,0>:ud 	r9.26<0;1,0>:b		{ NoDDChk }
 
 // First 8 x 8 Block
 	mov (8)		mubMSGHDR_DN_OUT(1)<2>			ubDNDI_RESP(0,0)<8;8,1>				{ NoDDClr } 	// copy line of Y directly to memory as optimization
diff --git a/src/shaders/post_processing/gen7/PA_DN_PA.g4a b/src/shaders/post_processing/gen7/PA_DN_PA.g4a
index c84af13..c85d784 100644
--- a/src/shaders/post_processing/gen7/PA_DN_PA.g4a
+++ b/src/shaders/post_processing/gen7/PA_DN_PA.g4a
@@ -175,7 +175,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -184,15 +184,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -299,14 +299,14 @@
 
 // Prepare the DNDI send command
 mov (8)		mudMSGHDR_DNDI(0)<1>			r0.0<8;8,1>:ud					// message header
-mov (1)		mwMSGHDR_DNDI(1,4)<1>			r7.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
-mov (1)		mwMSGHDR_DNDI(1,12)<1>			r7.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
+mov (1)		mwMSGHDR_DNDI(1,4)<1>			r9.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
+mov (1)		mwMSGHDR_DNDI(1,12)<1>			r9.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
 
 send (8)	udDNDI_RESP(0)<1>	r18	0x2	0x49E8003:ud
 
 // On Gen6, with VDI walker, use the XY pair returned rather than programmed above
 // VDI_RETURNED_XY is ordered XY in case of walker enables and the same as programmed in case of walker disabled
-mov (2) 	r7.0<1>:w     uwDNDI_RESP(4,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
+mov (2) 	r9.0<1>:w     uwDNDI_RESP(4,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
 
 
 
@@ -321,7 +321,7 @@ mov (8)    r27<1>:ud				r0.0<8;8,1>:ud                   			// message header
 	mov (2)    mudMSGHDR_HIST(1)<1>    	udDNDI_RESP(4,0)<2;2,1>    	// Move denoise history to MRF (4x2)
 
 
-shr (2)    r27.0<1>:ud		r7.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
+shr (2)    r27.0<1>:ud		r9.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
 add (1)    r27.0<1>:ud		r27.0<0;1,0>:ud			r1.12<0;1,0>:uw		{ NoDDClr }  	// Add pitch to X origin
 mov (1)    r27.2<1>:ud		0x10003:ud									{ NoDDChk }  	// block width and height
 
@@ -339,8 +339,8 @@ send (8)	null<1>:d	r22	0x5		0x40A8021:ud
 mov (8)		mudMSGHDR_ENC_STATS(1)<1>	0x0:ud						// Init payload MRF
 mov (8)		mudMSGHDR_ENC_STATS(0)<1>	r0.0<8;8,1>:ud				// message header
 
-shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r7.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
-mul (1)		acc0.1<1>:ud					r7.1<0;1,0>:w				3:w																							// Y origin * 3
+shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r9.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
+mul (1)		acc0.1<1>:ud					r9.1<0;1,0>:w				3:w																							// Y origin * 3
 shr (1)		mudMSGHDR_ENC_STATS(0,1)<1>		acc0.1<0;1,0>:ud			2:w		{ NoDDClr, NoDDChk }		//enable the flag after testing on si			   { NoDDClr, NoDDChk } // Y origin * 3/4
 mov (1)		mudMSGHDR_ENC_STATS(0,2)<1>		0x50003:ud				{ NoDDChk }			//enable the flag after testing on si						{ NoDDChk } // block width and height (8x3)
 add (2)		mudMSGHDR_ENC_STATS(0,0)<1>		mudMSGHDR_ENC_STATS(0,0)<2;2,1>       	r1.12<2;2,1>:uw					// Add pitch to X,Y origin
@@ -381,8 +381,8 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 add (4)		a0.4<1>:uw   r2.28<4;4,1>:ub   1024:w    // Initial Y,U,V offset in YUV422 block; it starts at m14
 
 mov (8)		mudMSGHDR_DN_OUT(0)<1>		r0<8;8,1>:ud            					// message header
-shl (1)     mdMSGHDR_DN_OUT(0,0)<1>		r7.0<0;1,0>:w     1:w  		{ NoDDClr }     // X origin * 2 (422 output)
-mov (1)     mdMSGHDR_DN_OUT(0,1)<1>		r7.1<0;1,0>:w          		{ NoDDClr, NoDDChk }  // Y origin
+shl (1)     mdMSGHDR_DN_OUT(0,0)<1>		r9.0<0;1,0>:w     1:w  		{ NoDDClr }     // X origin * 2 (422 output)
+mov (1)     mdMSGHDR_DN_OUT(0,1)<1>		r9.1<0;1,0>:w          		{ NoDDClr, NoDDChk }  // Y origin
 mov (1)     mudMSGHDR_DN_OUT(0,2)<1>	0x7001F:ud	{ NoDDChk }     // block width and height (32x8)
 
 	mov (16)    r[a0.4,0]<2>:ub   ubDNDI_RESP(0,0)<16;16,1>    	{ NoDDClr }   	// copy line of Y directly to memory as optimization
diff --git a/src/shaders/post_processing/gen7/PL2_AVS_Buf_0.g4a b/src/shaders/post_processing/gen7/PL2_AVS_Buf_0.g4a
index 5556aa7..67a1920 100644
--- a/src/shaders/post_processing/gen7/PL2_AVS_Buf_0.g4a
+++ b/src/shaders/post_processing/gen7/PL2_AVS_Buf_0.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -434,13 +434,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
@@ -467,8 +467,8 @@
     mov (1)     r16.2:ud      0x0000D000:ud                                        // Enable Red channel
 
 
-        mov (1)   r25.7<1>:ud    r7.7:ud           { NoDDClr }
-        mov (1)   r25.1<1>:ud    r7.12:uw       { NoDDChk }
+        mov (1)   r25.7<1>:ud    r9.7:ud           { NoDDClr }
+        mov (1)   r25.1<1>:ud    r9.12:uw       { NoDDChk }
 
 
     // set the vertical block number
diff --git a/src/shaders/post_processing/gen7/PL2_AVS_Buf_1.g4a b/src/shaders/post_processing/gen7/PL2_AVS_Buf_1.g4a
index b3604ab..acd2c9c 100644
--- a/src/shaders/post_processing/gen7/PL2_AVS_Buf_1.g4a
+++ b/src/shaders/post_processing/gen7/PL2_AVS_Buf_1.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -434,13 +434,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
@@ -464,7 +464,7 @@
 
     // set the vertical block number
 
-       add (1)   r25.1<1>:ud    r7.12:uw  1:ud
+       add (1)   r25.1<1>:ud    r9.12:uw  1:ud
 
 
     mov (8)     r17.0:ud      r25.0<8;8,1>:ud                                     // Copy msg payload mirrors to MRFs
diff --git a/src/shaders/post_processing/gen7/PL2_AVS_Buf_2.g4a b/src/shaders/post_processing/gen7/PL2_AVS_Buf_2.g4a
index 7f49300..8b3923f 100644
--- a/src/shaders/post_processing/gen7/PL2_AVS_Buf_2.g4a
+++ b/src/shaders/post_processing/gen7/PL2_AVS_Buf_2.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -434,13 +434,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
@@ -465,7 +465,7 @@
     // set the vertical block number
 
 
-      add (1)   r25.1<1>:ud    r7.12:uw  2:ud
+      add (1)   r25.1<1>:ud    r9.12:uw  2:ud
 
 
     mov (8)     r17.0:ud      r25.0<8;8,1>:ud                                     // Copy msg payload mirrors to MRFs
diff --git a/src/shaders/post_processing/gen7/PL2_AVS_Buf_3.g4a b/src/shaders/post_processing/gen7/PL2_AVS_Buf_3.g4a
index 8e213ed..f4b6c8d 100644
--- a/src/shaders/post_processing/gen7/PL2_AVS_Buf_3.g4a
+++ b/src/shaders/post_processing/gen7/PL2_AVS_Buf_3.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -434,13 +434,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
@@ -465,7 +465,7 @@
     // set the vertical block number
 
 
-      add (1)   r25.1<1>:ud    r7.12:uw  3:ud
+      add (1)   r25.1<1>:ud    r9.12:uw  3:ud
 
 
     mov (8)     r17.0:ud      r25.0<8;8,1>:ud                                     // Copy msg payload mirrors to MRFs
diff --git a/src/shaders/post_processing/gen7/PL3_AVS_Buf_0.g4a b/src/shaders/post_processing/gen7/PL3_AVS_Buf_0.g4a
index 102dce1..77290fc 100644
--- a/src/shaders/post_processing/gen7/PL3_AVS_Buf_0.g4a
+++ b/src/shaders/post_processing/gen7/PL3_AVS_Buf_0.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -434,13 +434,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
@@ -467,8 +467,8 @@
     mov (1)     r16.2:ud      0x0000D000:ud            // Enable Red channel
 
 
-        mov (1)   r25.7<1>:ud    r7.7:ud           { NoDDClr }
-        mov (1)   r25.1<1>:ud    r7.12:uw       { NoDDChk }
+        mov (1)   r25.7<1>:ud    r9.7:ud           { NoDDClr }
+        mov (1)   r25.1<1>:ud    r9.12:uw       { NoDDChk }
 
 
     // set the vertical block number
diff --git a/src/shaders/post_processing/gen7/PL3_AVS_Buf_1.g4a b/src/shaders/post_processing/gen7/PL3_AVS_Buf_1.g4a
index d5cf749..ef49acf 100644
--- a/src/shaders/post_processing/gen7/PL3_AVS_Buf_1.g4a
+++ b/src/shaders/post_processing/gen7/PL3_AVS_Buf_1.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -434,13 +434,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
@@ -464,7 +464,7 @@
 
     // set the vertical block number
 
-       add (1)   r25.1<1>:ud    r7.12:uw  1:ud
+       add (1)   r25.1<1>:ud    r9.12:uw  1:ud
 
 
     mov (8)     r17.0:ud      r25.0<8;8,1>:ud         // Copy msg payload mirrors to MRFs
diff --git a/src/shaders/post_processing/gen7/PL3_AVS_Buf_2.g4a b/src/shaders/post_processing/gen7/PL3_AVS_Buf_2.g4a
index eea6ad1..59b4f8a 100644
--- a/src/shaders/post_processing/gen7/PL3_AVS_Buf_2.g4a
+++ b/src/shaders/post_processing/gen7/PL3_AVS_Buf_2.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -434,13 +434,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
@@ -465,7 +465,7 @@
     // set the vertical block number
 
 
-      add (1)   r25.1<1>:ud    r7.12:uw  2:ud
+      add (1)   r25.1<1>:ud    r9.12:uw  2:ud
 
 
     mov (8)     r17.0:ud      r25.0<8;8,1>:ud         // Copy msg payload mirrors to MRFs
diff --git a/src/shaders/post_processing/gen7/PL3_AVS_Buf_3.g4a b/src/shaders/post_processing/gen7/PL3_AVS_Buf_3.g4a
index c6326ef..2dc8d2e 100644
--- a/src/shaders/post_processing/gen7/PL3_AVS_Buf_3.g4a
+++ b/src/shaders/post_processing/gen7/PL3_AVS_Buf_3.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -434,13 +434,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
@@ -465,7 +465,7 @@
     // set the vertical block number
 
 
-      add (1)   r25.1<1>:ud    r7.12:uw  3:ud
+      add (1)   r25.1<1>:ud    r9.12:uw  3:ud
 
 
     mov (8)     r17.0:ud      r25.0<8;8,1>:ud         // Copy msg payload mirrors to MRFs
diff --git a/src/shaders/post_processing/gen7/PL3_DNDI_422CP.g4a b/src/shaders/post_processing/gen7/PL3_DNDI_422CP.g4a
index 2c23210..9f99f3f 100644
--- a/src/shaders/post_processing/gen7/PL3_DNDI_422CP.g4a
+++ b/src/shaders/post_processing/gen7/PL3_DNDI_422CP.g4a
@@ -174,7 +174,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -183,15 +183,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -298,14 +298,14 @@
 
 // Prepare the DNDI send command
 mov (8)		mudMSGHDR_DNDI(0)<1>			r0.0<8;8,1>:ud					// message header
-mov (1)		mwMSGHDR_DNDI(1,4)<1>			r7.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
-mov (1)		mwMSGHDR_DNDI(1,12)<1>			r7.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
+mov (1)		mwMSGHDR_DNDI(1,4)<1>			r9.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
+mov (1)		mwMSGHDR_DNDI(1,12)<1>			r9.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
 
 send (8)	udDNDI_RESP(0)<1>	r18	0x2	0x4BE8003:ud
 
 // On Gen6, with VDI walker, use the XY pair returned rather than programmed above
 // VDI_RETURNED_XY is ordered XY in case of walker enables and the same as programmed in case of walker disabled
-mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
+mov (2) 	r9.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
 
 
 
@@ -317,8 +317,8 @@ mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in
 mov (8)     mudMSGHDR_STMM(0)<1>	r0.0<8;8,1>:ud               							// message header   
 mov (8)     mudMSGHDR_STMM(1)<1>   	udDNDI_RESP(8,0)         					// Move STMM to MRF 
 
-shr (1)     mudMSGHDR_STMM(0,0)<1>	r7.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
-mov (1)     mudMSGHDR_STMM(0,1)<1>	r7.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
+shr (1)     mudMSGHDR_STMM(0,0)<1>	r9.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
+mov (1)     mudMSGHDR_STMM(0,1)<1>	r9.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
 mov (1)     mudMSGHDR_STMM(0,2)<1>	0x30007:ud           { NoDDChk } 		// block width and height (8x4)
 
 send (8)	null<1>:d	r20	0x5		0x40A8021:ud      
@@ -335,7 +335,7 @@ mov (8)    r27<1>:ud				r0.0<8;8,1>:ud                   			// message header
 	mov (1)    mudMSGHDR_HIST(1)<1>		udDNDI_RESP(9,0)<0;1,0>		// Move denoise history to MRF (4x1)
 
 
-shr (2)    r27.0<1>:ud		r7.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
+shr (2)    r27.0<1>:ud		r9.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
 add (1)    r27.0<1>:ud		r27.0<0;1,0>:ud			r1.12<0;1,0>:uw		{ NoDDClr }  	// Add pitch to X origin
 mov (1)    r27.2<1>:ud		0x3:ud									{ NoDDChk }  	// block width and height
 
@@ -353,8 +353,8 @@ send (8)	null<1>:d	r22	0x5		0x40A8021:ud
 mov (8)		mudMSGHDR_ENC_STATS(1)<1>	0x0:ud						// Init payload MRF
 mov (8)		mudMSGHDR_ENC_STATS(0)<1>	r0.0<8;8,1>:ud				// message header
 
-shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r7.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
-mul (1)		acc0.1<1>:ud					r7.1<0;1,0>:w				3:w																							// Y origin * 3
+shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r9.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
+mul (1)		acc0.1<1>:ud					r9.1<0;1,0>:w				3:w																							// Y origin * 3
 shr (1)		mudMSGHDR_ENC_STATS(0,1)<1>		acc0.1<0;1,0>:ud			2:w		{ NoDDClr, NoDDChk }		//enable the flag after testing on si			   { NoDDClr, NoDDChk } // Y origin * 3/4
 mov (1)		mudMSGHDR_ENC_STATS(0,2)<1>		0x20007:ud				{ NoDDChk }			//enable the flag after testing on si						{ NoDDChk } // block width and height (8x3)
 add (2)		mudMSGHDR_ENC_STATS(0,0)<1>		mudMSGHDR_ENC_STATS(0,0)<2;2,1>       	r1.12<2;2,1>:uw					// Add pitch to X,Y origin
@@ -390,7 +390,7 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 // Description:	Read UV for 16x4 block through DATAPORT 
 
 
-	add (2)		r27.0<1>:d			r7.0<2;2,1>:w				r4.4<2;2,1>:w				// Source Y Block origin
+	add (2)		r27.0<1>:d			r9.0<2;2,1>:w				r4.4<2;2,1>:w				// Source Y Block origin
 	asr (2)  	r27.0<1>:d     		r27.0<2;2,1>:d       	1:w   						{ NoDDClr }		// U/V block origin should be half of Y's
 	mov (1)		r27.2<1>:ud			0x10007:ud  					 	{ NoDDChk }		// U/V block width and height (8x2)
     mov (8)     r36<1>:ud    	r27.0<8;8,1>:ud
@@ -409,7 +409,7 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 cmp.e.f0.0 (1)  null<1>:w               r1.28<0;1,0>:ub     1:w
 
 mov (8)		mudMSGHDR_DN_OUT(0)<1>		r0<8;8,1>:ud            						// message header   
-mov (2)     mdMSGHDR_DN_OUT(0,0)<1>		r7.0<2;2,1>:w  				{ NoDDClr }        	// X origin * 2 (422 output)
+mov (2)     mdMSGHDR_DN_OUT(0,0)<1>		r9.0<2;2,1>:w  				{ NoDDClr }        	// X origin * 2 (422 output)
 mov (1)     mudMSGHDR_DN_OUT(0,2)<1>	0x3000F:ud		{ NoDDChk }        	// block width and height (32x8)
 
 (f0.0) jmpi (1) TOP_FIELD_FIRST
@@ -453,13 +453,13 @@ send (8)    null<1>:d    r31.0		0x5    0x60A8018:ud
 
 
 mov (8) r27.0<1>:ud     r0.0<8;8,1>:ud
-shl (1) r27.0<1>:ud     r7.0<0;1,0>:w            1:w  { NoDDClr }          // H. block origin need to be doubled
-mov (1) r27.1<1>:ud     r7.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
+shl (1) r27.0<1>:ud     r9.0<0;1,0>:w            1:w  { NoDDClr }          // H. block origin need to be doubled
+mov (1) r27.1<1>:ud     r9.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
 mov (1) r27.2<1>:ud     0x3000F:ud        { NoDDClr, NoDDChk }       // Block width and height (16x8)
 
 //M0.3  - 0 - CP Enable, 1 - Area of Interest, 3:2 Message Format(TBD), 4:3 - Ignored, 31:5 CP state pointer
 //Compose area-of-interest bit + color pipe state pointer
-or (1)  r27.3<1>:ud     r2.4<0;1,0>:ud     r7.26<0;1,0>:b     { NoDDChk }
+or (1)  r27.3<1>:ud     r2.4<0;1,0>:ud     r9.26<0;1,0>:b     { NoDDChk }
 
 //prepare the message headers
 mov (8) r18.0<1>:ud       r27<8;8,1>:ud
diff --git a/src/shaders/post_processing/gen7/PL3_DNDI_PA.g4a b/src/shaders/post_processing/gen7/PL3_DNDI_PA.g4a
index bd97902..f9fc3c6 100644
--- a/src/shaders/post_processing/gen7/PL3_DNDI_PA.g4a
+++ b/src/shaders/post_processing/gen7/PL3_DNDI_PA.g4a
@@ -174,7 +174,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -183,15 +183,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -298,14 +298,14 @@
 
 // Prepare the DNDI send command
 mov (8)		mudMSGHDR_DNDI(0)<1>			r0.0<8;8,1>:ud					// message header
-mov (1)		mwMSGHDR_DNDI(1,4)<1>			r7.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
-mov (1)		mwMSGHDR_DNDI(1,12)<1>			r7.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
+mov (1)		mwMSGHDR_DNDI(1,4)<1>			r9.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
+mov (1)		mwMSGHDR_DNDI(1,12)<1>			r9.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
 
 send (8)	udDNDI_RESP(0)<1>	r18	0x2	0x4BE8003:ud
 
 // On Gen6, with VDI walker, use the XY pair returned rather than programmed above
 // VDI_RETURNED_XY is ordered XY in case of walker enables and the same as programmed in case of walker disabled
-mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
+mov (2) 	r9.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
 
 
 
@@ -317,8 +317,8 @@ mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in
 mov (8)     mudMSGHDR_STMM(0)<1>	r0.0<8;8,1>:ud               							// message header   
 mov (8)     mudMSGHDR_STMM(1)<1>   	udDNDI_RESP(8,0)         					// Move STMM to MRF 
 
-shr (1)     mudMSGHDR_STMM(0,0)<1>	r7.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
-mov (1)     mudMSGHDR_STMM(0,1)<1>	r7.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
+shr (1)     mudMSGHDR_STMM(0,0)<1>	r9.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
+mov (1)     mudMSGHDR_STMM(0,1)<1>	r9.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
 mov (1)     mudMSGHDR_STMM(0,2)<1>	0x30007:ud           { NoDDChk } 		// block width and height (8x4)
 
 send (8)	null<1>:d	r20	0x5		0x40A8021:ud      
@@ -335,7 +335,7 @@ mov (8)    r27<1>:ud				r0.0<8;8,1>:ud                   			// message header
 	mov (1)    mudMSGHDR_HIST(1)<1>		udDNDI_RESP(9,0)<0;1,0>		// Move denoise history to MRF (4x1)
 
 
-shr (2)    r27.0<1>:ud		r7.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
+shr (2)    r27.0<1>:ud		r9.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
 add (1)    r27.0<1>:ud		r27.0<0;1,0>:ud			r1.12<0;1,0>:uw		{ NoDDClr }  	// Add pitch to X origin
 mov (1)    r27.2<1>:ud		0x3:ud									{ NoDDChk }  	// block width and height
 
@@ -353,8 +353,8 @@ send (8)	null<1>:d	r22	0x5		0x40A8021:ud
 mov (8)		mudMSGHDR_ENC_STATS(1)<1>	0x0:ud						// Init payload MRF
 mov (8)		mudMSGHDR_ENC_STATS(0)<1>	r0.0<8;8,1>:ud				// message header
 
-shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r7.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
-mul (1)		acc0.1<1>:ud					r7.1<0;1,0>:w				3:w																							// Y origin * 3
+shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r9.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
+mul (1)		acc0.1<1>:ud					r9.1<0;1,0>:w				3:w																							// Y origin * 3
 shr (1)		mudMSGHDR_ENC_STATS(0,1)<1>		acc0.1<0;1,0>:ud			2:w		{ NoDDClr, NoDDChk }		//enable the flag after testing on si			   { NoDDClr, NoDDChk } // Y origin * 3/4
 mov (1)		mudMSGHDR_ENC_STATS(0,2)<1>		0x20007:ud				{ NoDDChk }			//enable the flag after testing on si						{ NoDDChk } // block width and height (8x3)
 add (2)		mudMSGHDR_ENC_STATS(0,0)<1>		mudMSGHDR_ENC_STATS(0,0)<2;2,1>       	r1.12<2;2,1>:uw					// Add pitch to X,Y origin
@@ -390,7 +390,7 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 // Description:	Read UV for 16x4 block through DATAPORT 
 
 
-	add (2)		r27.0<1>:d			r7.0<2;2,1>:w				r4.4<2;2,1>:w				// Source Y Block origin
+	add (2)		r27.0<1>:d			r9.0<2;2,1>:w				r4.4<2;2,1>:w				// Source Y Block origin
 	asr (2)  	r27.0<1>:d     		r27.0<2;2,1>:d       	1:w   						{ NoDDClr }		// U/V block origin should be half of Y's
 	mov (1)		r27.2<1>:ud			0x10007:ud  					 	{ NoDDChk }		// U/V block width and height (8x2)
     mov (8)     r36<1>:ud    	r27.0<8;8,1>:ud
@@ -409,7 +409,7 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 cmp.e.f0.0 (1)  null<1>:w               r1.28<0;1,0>:ub     1:w
 
 mov (8)		mudMSGHDR_DN_OUT(0)<1>		r0<8;8,1>:ud            						// message header   
-mov (2)     mdMSGHDR_DN_OUT(0,0)<1>		r7.0<2;2,1>:w  				{ NoDDClr }        	// X origin * 2 (422 output)
+mov (2)     mdMSGHDR_DN_OUT(0,0)<1>		r9.0<2;2,1>:w  				{ NoDDClr }        	// X origin * 2 (422 output)
 mov (1)     mudMSGHDR_DN_OUT(0,2)<1>	0x3000F:ud		{ NoDDChk }        	// block width and height (32x8)
 
 (f0.0) jmpi (1) TOP_FIELD_FIRST
@@ -443,8 +443,8 @@ send (8)    null<1>:d    r31.0		0x5    0x60A8018:ud
 add (4) a0.4<1>:uw   r2.28<4;4,1>:ub   608:w               // Initial Y,U,V offset in YUV422 block; it starts at m20
 
 mov (8) r27.0<1>:ud     r0.0<8;8,1>:ud
-shl (1) r27.0<1>:d      r7.0<0;1,0>:w            1:w  { NoDDClr }          // H. block origin need to be doubled
-mov (1) r27.1<1>:d      r7.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
+shl (1) r27.0<1>:d      r9.0<0;1,0>:w            1:w  { NoDDClr }          // H. block origin need to be doubled
+mov (1) r27.1<1>:d      r9.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
 mov (1) r27.2<1>:ud     0x3001F:ud          { NoDDChk }          // Block width and height (32x8)
 
 //prepare the message headers
diff --git a/src/shaders/post_processing/gen7/PL3_DNUV_PL3.g4a b/src/shaders/post_processing/gen7/PL3_DNUV_PL3.g4a
index 1accd72..7dd5445 100644
--- a/src/shaders/post_processing/gen7/PL3_DNUV_PL3.g4a
+++ b/src/shaders/post_processing/gen7/PL3_DNUV_PL3.g4a
@@ -176,7 +176,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -185,15 +185,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -481,9 +481,9 @@
 //2. Load V data into TEMP space (r25-r44)
 
 	//U/V surface origin: (ORIX/2, ORIY/2)
-	add  (2)	r7.4<1>:w		r7.0<2;2,1>:w	 	r4.4<2;2,1>:w	 { AccWrEn }  	// Source Block origin
-	shr  (2)	r7.4<1>:w		acc0.4<2;2,1>:w		1:w							   			//U Data
-	mov  (2)	acc0.0<1>:d							r7.4<2;2,1>:w
+	add  (2)	r9.4<1>:w		r9.0<2;2,1>:w	 	r4.4<2;2,1>:w	 { AccWrEn }  	// Source Block origin
+	shr  (2)	r9.4<1>:w		acc0.4<2;2,1>:w		1:w							   			//U Data
+	mov  (2)	acc0.0<1>:d							r9.4<2;2,1>:w
 
 	//A1
 	add  (1)   	r50.0<1>:d	acc0.0<0;1,0>:d		-1:d						 
@@ -519,13 +519,13 @@
  	//History Origin, Current Y origin and BNE surface origin - all are in inline GRF. Use , . -rT.
 
  	//Calculate Origin For History Surface: (ORIX/4, ORIY/8)
-	mov  (16)	acc0.0<1>:w						r7.0<0;2,1>:w				{ AccWrEn }
-	shr  (1)	r7.2<1>:w		acc0.2<0;1,0>:w	2:w			
-	shr  (1)	r7.3<1>:w		acc0.3<0;1,0>:w	3:w			
+	mov  (16)	acc0.0<1>:w						r9.0<0;2,1>:w				{ AccWrEn }
+	shr  (1)	r9.2<1>:w		acc0.2<0;1,0>:w	2:w			
+	shr  (1)	r9.3<1>:w		acc0.3<0;1,0>:w	3:w			
 
 	//Calculate Origin For BNE Surface: (ORIX/8, ORIY/16)
-	shr  (1)	r7.6<1>:w		acc0.6<0;1,0>:w		3:w		
-	shr  (1)	r7.7<1>:w		acc0.7<0;1,0>:w		4:w		
+	shr  (1)	r9.6<1>:w		acc0.6<0;1,0>:w		3:w		
+	shr  (1)	r9.7<1>:w		acc0.7<0;1,0>:w		4:w		
 
 
 
@@ -545,7 +545,7 @@
 //1. Load U in bottom half of UV space for prev frame (r17-r24)
 //2. Load V in bottom quarter of Y space for curr frame (r120-r127)
 
-	mov  (2)	r50.0<1>:d		r7.4<2;2,1>:w			{ AccWrEn } 	// Source lock origin
+	mov  (2)	r50.0<1>:d		r9.4<2;2,1>:w			{ AccWrEn } 	// Source lock origin
 	mov  (1)	r50.2<1>:ud	0xF000F:ud  						// U/V block width and height (16x16)
 
 	mov  (8)	r49.0<1>:ud	r50<8;8,1>:ud
@@ -564,7 +564,7 @@
 
 
 
-	mov  (2)	r50.0<1>:d	r7.2<2;2,1>:w			
+	mov  (2)	r50.0<1>:d	r9.2<2;2,1>:w			
 	mov  (1)	r50.2<1>:ud	0x30007:ud  		
 	send (8)	udHIST_UV(0)<1>			r50		0x4	0x2190022:ud
 
@@ -748,7 +748,7 @@
 
 	mov (8)		acc0.0<1>:ud		r0.0<8;8,1>:ud
 	mov (1)		acc0.2<1>:ud		0xF000F:ud
-	add (2)		acc0.0<1>:ud		r7.0<2;2,1>:w		r4.4<2;2,1>:w
+	add (2)		acc0.0<1>:ud		r9.0<2;2,1>:w		r4.4<2;2,1>:w
 
 	mov (8)     r92.0<1>:ud	acc0.0<8;8,1>:ud
 
@@ -790,8 +790,8 @@
 	mov (4) r61.28<1>:ub		r1.12<4;4,1>:ub		
 
 	//Move Inline Data to another space - so that it can be used as Temp Space --> r7
-	mov (4) r62.10<1>:w				r7.0<4;4,1>:w
-	mov (4) r63.10<1>:w		r7.4<4;4,1>:w
+	mov (4) r62.10<1>:w				r9.0<4;4,1>:w
+	mov (4) r63.10<1>:w		r9.4<4;4,1>:w
 
 
 
@@ -808,7 +808,7 @@
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -827,7 +827,7 @@ add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -846,7 +846,7 @@ add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -865,7 +865,7 @@ add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -883,7 +883,7 @@ add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -902,7 +902,7 @@ add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -921,7 +921,7 @@ add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -940,7 +940,7 @@ add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
 
 
 
-add (1) r7.7<1>:d ip:ud 32:d { NoCompact }
+add (1) r9.7<1>:d ip:ud 32:d { NoCompact }
  jmpi (1) DN_UV_NOISE_DETECTION_UV { NoCompact }
 
 
@@ -2699,7 +2699,7 @@ cmp.g.f0.0 (16) null:uw      			uwCURBE_TEMP(0)<16;16,1>   (abs)wDIFF(17)<16;16,
 
 // End of common.inc
 
-mov (1) ip:ud r7.7<0;1,0>:d
+mov (1) ip:ud r9.7<0;1,0>:d
 
 
 .end_code
diff --git a/src/shaders/post_processing/gen7/PL3_DN_422CP.g4a b/src/shaders/post_processing/gen7/PL3_DN_422CP.g4a
index 622d79f..d341017 100644
--- a/src/shaders/post_processing/gen7/PL3_DN_422CP.g4a
+++ b/src/shaders/post_processing/gen7/PL3_DN_422CP.g4a
@@ -175,7 +175,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -184,15 +184,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -299,14 +299,14 @@
 
 // Prepare the DNDI send command
 mov (8)		mudMSGHDR_DNDI(0)<1>			r0.0<8;8,1>:ud					// message header
-mov (1)		mwMSGHDR_DNDI(1,4)<1>			r7.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
-mov (1)		mwMSGHDR_DNDI(1,12)<1>			r7.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
+mov (1)		mwMSGHDR_DNDI(1,4)<1>			r9.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
+mov (1)		mwMSGHDR_DNDI(1,12)<1>			r9.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
 
 send (8)	udDNDI_RESP(0)<1>	r18	0x2	0x45E8003:ud
 
 // On Gen6, with VDI walker, use the XY pair returned rather than programmed above
 // VDI_RETURNED_XY is ordered XY in case of walker enables and the same as programmed in case of walker disabled
-mov (2) 	r7.0<1>:w     uwDNDI_RESP(4,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
+mov (2) 	r9.0<1>:w     uwDNDI_RESP(4,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
 
 
 
@@ -321,7 +321,7 @@ mov (8)    r27<1>:ud				r0.0<8;8,1>:ud                   			// message header
 	mov (2)    mudMSGHDR_HIST(1)<1>    	udDNDI_RESP(4,0)<2;2,1>    	// Move denoise history to MRF (4x2)
 
 
-shr (2)    r27.0<1>:ud		r7.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
+shr (2)    r27.0<1>:ud		r9.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
 add (1)    r27.0<1>:ud		r27.0<0;1,0>:ud			r1.12<0;1,0>:uw		{ NoDDClr }  	// Add pitch to X origin
 mov (1)    r27.2<1>:ud		0x10003:ud									{ NoDDChk }  	// block width and height
 
@@ -339,8 +339,8 @@ send (8)	null<1>:d	r22	0x5		0x40A8021:ud
 mov (8)		mudMSGHDR_ENC_STATS(1)<1>	0x0:ud						// Init payload MRF
 mov (8)		mudMSGHDR_ENC_STATS(0)<1>	r0.0<8;8,1>:ud				// message header
 
-shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r7.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
-mul (1)		acc0.1<1>:ud					r7.1<0;1,0>:w				3:w																							// Y origin * 3
+shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r9.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
+mul (1)		acc0.1<1>:ud					r9.1<0;1,0>:w				3:w																							// Y origin * 3
 shr (1)		mudMSGHDR_ENC_STATS(0,1)<1>		acc0.1<0;1,0>:ud			2:w		{ NoDDClr, NoDDChk }		//enable the flag after testing on si			   { NoDDClr, NoDDChk } // Y origin * 3/4
 mov (1)		mudMSGHDR_ENC_STATS(0,2)<1>		0x50003:ud				{ NoDDChk }			//enable the flag after testing on si						{ NoDDChk } // block width and height (8x3)
 add (2)		mudMSGHDR_ENC_STATS(0,0)<1>		mudMSGHDR_ENC_STATS(0,0)<2;2,1>       	r1.12<2;2,1>:uw					// Add pitch to X,Y origin
@@ -387,7 +387,7 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 //we are reading extra data in ALL cases irrespective of whether upsampling is reqd or not later on, to keep things simple.
 
 
-	add (2)		r27.0<1>:d				r7.0<2;2,1>:w				r4.4<2;2,1>:w				// Source Y Block origin
+	add (2)		r27.0<1>:d				r9.0<2;2,1>:w				r4.4<2;2,1>:w				// Source Y Block origin
 	asr (2)  	r27.0<1>:d     			r27.0<2;2,1>:d       	1:w   						{ NoDDClr }	// U/V block origin should be half of Y's
 	mov (1)		r27.2<1>:ud				0x40007:ud  					 	{ NoDDChk }	// U/V block width and height (8x5)
     mov (8)     r36<1>:ud    		r27.0<8;8,1>:ud
@@ -407,7 +407,7 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 
 
 mov (8)     mudDN_Y_OUT(0,0)<1>     r0<8;8,1>:ud                                // message header
-mov (2)     mudDN_Y_OUT(0,0)<1>     r7.0<2;2,1>:w                  { NoDDClr }     // X origin
+mov (2)     mudDN_Y_OUT(0,0)<1>     r9.0<2;2,1>:w                  { NoDDClr }     // X origin
 mov (1)     mudDN_Y_OUT(0,2)<1>     0x7000F:ud    { NoDDChk }     // block width and height (16x8)
 
 //send out data through data port
@@ -477,13 +477,13 @@ send (8)    null<1>:d    mudDN_Y_OUT      0x5    0xA0A8018:ud
 
 
 mov (8)		mudMSGHDR_DN_OUT(0)<1>		r0<8;8,1>:ud            			// message header
-shl (1)     mdMSGHDR_DN_OUT(0,0)<1>		r7.0<0;1,0>:w     1:w  		{ NoDDClr }            // X origin * 2 (422 output)
-mov (1)     mdMSGHDR_DN_OUT(0,1)<1>		r7.1<0;1,0>:w          		{ NoDDClr, NoDDChk }   // Y origin
+shl (1)     mdMSGHDR_DN_OUT(0,0)<1>		r9.0<0;1,0>:w     1:w  		{ NoDDClr }            // X origin * 2 (422 output)
+mov (1)     mdMSGHDR_DN_OUT(0,1)<1>		r9.1<0;1,0>:w          		{ NoDDClr, NoDDChk }   // Y origin
 mov (1)     mudMSGHDR_DN_OUT(0,2)<1>	0x7000F:ud	{ NoDDClr, NoDDChk }            // block width and height (16x8)
 
 //M0.3	- 0 - CP Enable, 1 - Area of Interest, 3:2 Message Format(TBD), 4:3 - Ignored, 31:5 CP state pointer
 //Compose area-of-interest bit + color pipe state pointer
-or (1)		mudMSGHDR_DN_OUT(0,3)<1>		r2.4<0;1,0>:ud 	r7.26<0;1,0>:b		{ NoDDChk }
+or (1)		mudMSGHDR_DN_OUT(0,3)<1>		r2.4<0;1,0>:ud 	r9.26<0;1,0>:b		{ NoDDChk }
 
 // First 8 x 8 Block
 	mov (8)		mubMSGHDR_DN_OUT(1)<2>			ubDNDI_RESP(0,0)<8;8,1>				{ NoDDClr } 	// copy line of Y directly to memory as optimization
diff --git a/src/shaders/post_processing/gen7/PL3_DN_PL3.g4a b/src/shaders/post_processing/gen7/PL3_DN_PL3.g4a
index a31d1f4..ef08c4e 100644
--- a/src/shaders/post_processing/gen7/PL3_DN_PL3.g4a
+++ b/src/shaders/post_processing/gen7/PL3_DN_PL3.g4a
@@ -175,7 +175,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -184,15 +184,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -299,14 +299,14 @@
 
 // Prepare the DNDI send command
 mov (8)		mudMSGHDR_DNDI(0)<1>			r0.0<8;8,1>:ud					// message header
-mov (1)		mwMSGHDR_DNDI(1,4)<1>			r7.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
-mov (1)		mwMSGHDR_DNDI(1,12)<1>			r7.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
+mov (1)		mwMSGHDR_DNDI(1,4)<1>			r9.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
+mov (1)		mwMSGHDR_DNDI(1,12)<1>			r9.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
 
 send (8)	udDNDI_RESP(0)<1>	r18	0x2	0x45E8003:ud
 
 // On Gen6, with VDI walker, use the XY pair returned rather than programmed above
 // VDI_RETURNED_XY is ordered XY in case of walker enables and the same as programmed in case of walker disabled
-mov (2) 	r7.0<1>:w     uwDNDI_RESP(4,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
+mov (2) 	r9.0<1>:w     uwDNDI_RESP(4,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
 
 
 
@@ -321,7 +321,7 @@ mov (8)    r27<1>:ud				r0.0<8;8,1>:ud                   			// message header
 	mov (2)    mudMSGHDR_HIST(1)<1>    	udDNDI_RESP(4,0)<2;2,1>    	// Move denoise history to MRF (4x2)
 
 
-shr (2)    r27.0<1>:ud		r7.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
+shr (2)    r27.0<1>:ud		r9.0<2;2,1>:w				2:w                                 	// X,Y origin / 4
 add (1)    r27.0<1>:ud		r27.0<0;1,0>:ud			r1.12<0;1,0>:uw		{ NoDDClr }  	// Add pitch to X origin
 mov (1)    r27.2<1>:ud		0x10003:ud									{ NoDDChk }  	// block width and height
 
@@ -339,8 +339,8 @@ send (8)	null<1>:d	r22	0x5		0x40A8021:ud
 mov (8)		mudMSGHDR_ENC_STATS(1)<1>	0x0:ud						// Init payload MRF
 mov (8)		mudMSGHDR_ENC_STATS(0)<1>	r0.0<8;8,1>:ud				// message header
 
-shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r7.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
-mul (1)		acc0.1<1>:ud					r7.1<0;1,0>:w				3:w																							// Y origin * 3
+shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r9.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
+mul (1)		acc0.1<1>:ud					r9.1<0;1,0>:w				3:w																							// Y origin * 3
 shr (1)		mudMSGHDR_ENC_STATS(0,1)<1>		acc0.1<0;1,0>:ud			2:w		{ NoDDClr, NoDDChk }		//enable the flag after testing on si			   { NoDDClr, NoDDChk } // Y origin * 3/4
 mov (1)		mudMSGHDR_ENC_STATS(0,2)<1>		0x50003:ud				{ NoDDChk }			//enable the flag after testing on si						{ NoDDChk } // block width and height (8x3)
 add (2)		mudMSGHDR_ENC_STATS(0,0)<1>		mudMSGHDR_ENC_STATS(0,0)<2;2,1>       	r1.12<2;2,1>:uw					// Add pitch to X,Y origin
@@ -387,7 +387,7 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 //we are reading extra data in ALL cases irrespective of whether upsampling is reqd or not later on, to keep things simple.
 
 
-	add (2)		r27.0<1>:d				r7.0<2;2,1>:w				r4.4<2;2,1>:w				// Source Y Block origin
+	add (2)		r27.0<1>:d				r9.0<2;2,1>:w				r4.4<2;2,1>:w				// Source Y Block origin
 	asr (2)  	r27.0<1>:d     			r27.0<2;2,1>:d       	1:w   						{ NoDDClr }	// U/V block origin should be half of Y's
 	mov (1)		r27.2<1>:ud				0x40007:ud  					 	{ NoDDChk }	// U/V block width and height (8x5)
     mov (8)     r36<1>:ud    		r27.0<8;8,1>:ud
@@ -407,7 +407,7 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 
 
 mov (8)     mudDN_Y_OUT(0,0)<1>     r0<8;8,1>:ud                                // message header
-mov (2)     mudDN_Y_OUT(0,0)<1>     r7.0<2;2,1>:w                  { NoDDClr }     // X origin
+mov (2)     mudDN_Y_OUT(0,0)<1>     r9.0<2;2,1>:w                  { NoDDClr }     // X origin
 mov (1)     mudDN_Y_OUT(0,2)<1>     0x7000F:ud    { NoDDChk }     // block width and height (16x8)
 
 //send out data through data port
diff --git a/src/shaders/post_processing/gen7/PL_DI_422CP.g4a b/src/shaders/post_processing/gen7/PL_DI_422CP.g4a
index 086f1ed..c47c6ef 100644
--- a/src/shaders/post_processing/gen7/PL_DI_422CP.g4a
+++ b/src/shaders/post_processing/gen7/PL_DI_422CP.g4a
@@ -169,7 +169,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -178,15 +178,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -293,14 +293,14 @@
 
 // Prepare the DNDI send command
 mov (8)		mudMSGHDR_DNDI(0)<1>			r0.0<8;8,1>:ud					// message header
-mov (1)		mwMSGHDR_DNDI(1,4)<1>			r7.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
-mov (1)		mwMSGHDR_DNDI(1,12)<1>			r7.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
+mov (1)		mwMSGHDR_DNDI(1,4)<1>			r9.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
+mov (1)		mwMSGHDR_DNDI(1,12)<1>			r9.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
 
 send (8)	udDNDI_RESP(0)<1>	r18	0x2	0x4AE8003:ud
 
 // On Gen6, with VDI walker, use the XY pair returned rather than programmed above
 // VDI_RETURNED_XY is ordered XY in case of walker enables and the same as programmed in case of walker disabled
-mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
+mov (2) 	r9.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
 
 
 
@@ -312,8 +312,8 @@ mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in
 mov (8)     mudMSGHDR_STMM(0)<1>	r0.0<8;8,1>:ud               							// message header   
 mov (8)     mudMSGHDR_STMM(1)<1>   	udDNDI_RESP(8,0)         					// Move STMM to MRF 
 
-shr (1)     mudMSGHDR_STMM(0,0)<1>	r7.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
-mov (1)     mudMSGHDR_STMM(0,1)<1>	r7.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
+shr (1)     mudMSGHDR_STMM(0,0)<1>	r9.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
+mov (1)     mudMSGHDR_STMM(0,1)<1>	r9.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
 mov (1)     mudMSGHDR_STMM(0,2)<1>	0x30007:ud           { NoDDChk } 		// block width and height (8x4)
 
 send (8)	null<1>:d	r20	0x5		0x40A8021:ud      
@@ -329,8 +329,8 @@ send (8)	null<1>:d	r20	0x5		0x40A8021:ud
 mov (8)		mudMSGHDR_ENC_STATS(1)<1>	0x0:ud						// Init payload MRF
 mov (8)		mudMSGHDR_ENC_STATS(0)<1>	r0.0<8;8,1>:ud				// message header
 
-shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r7.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
-mul (1)		acc0.1<1>:ud					r7.1<0;1,0>:w				3:w																							// Y origin * 3
+shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r9.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
+mul (1)		acc0.1<1>:ud					r9.1<0;1,0>:w				3:w																							// Y origin * 3
 shr (1)		mudMSGHDR_ENC_STATS(0,1)<1>		acc0.1<0;1,0>:ud			2:w		{ NoDDClr, NoDDChk }		//enable the flag after testing on si			   { NoDDClr, NoDDChk } // Y origin * 3/4
 mov (1)		mudMSGHDR_ENC_STATS(0,2)<1>		0x20007:ud				{ NoDDChk }			//enable the flag after testing on si						{ NoDDChk } // block width and height (8x3)
 add (2)		mudMSGHDR_ENC_STATS(0,0)<1>		mudMSGHDR_ENC_STATS(0,0)<2;2,1>       	r1.12<2;2,1>:uw					// Add pitch to X,Y origin
@@ -373,13 +373,13 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 
 
 mov (8) r27.0<1>:ud     r0.0<8;8,1>:ud
-shl (1) r27.0<1>:ud     r7.0<0;1,0>:w            1:w  { NoDDClr }          // H. block origin need to be doubled
-mov (1) r27.1<1>:ud     r7.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
+shl (1) r27.0<1>:ud     r9.0<0;1,0>:w            1:w  { NoDDClr }          // H. block origin need to be doubled
+mov (1) r27.1<1>:ud     r9.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
 mov (1) r27.2<1>:ud     0x3000F:ud        { NoDDClr, NoDDChk }       // Block width and height (16x8)
 
 //M0.3  - 0 - CP Enable, 1 - Area of Interest, 3:2 Message Format(TBD), 4:3 - Ignored, 31:5 CP state pointer
 //Compose area-of-interest bit + color pipe state pointer
-or (1)  r27.3<1>:ud     r2.4<0;1,0>:ud     r7.26<0;1,0>:b     { NoDDChk }
+or (1)  r27.3<1>:ud     r2.4<0;1,0>:ud     r9.26<0;1,0>:b     { NoDDChk }
 
 //prepare the message headers
 mov (8) r18.0<1>:ud       r27<8;8,1>:ud
diff --git a/src/shaders/post_processing/gen7/PL_DI_PA.g4a b/src/shaders/post_processing/gen7/PL_DI_PA.g4a
index c60038d..10c87af 100644
--- a/src/shaders/post_processing/gen7/PL_DI_PA.g4a
+++ b/src/shaders/post_processing/gen7/PL_DI_PA.g4a
@@ -169,7 +169,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -178,15 +178,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -293,14 +293,14 @@
 
 // Prepare the DNDI send command
 mov (8)		mudMSGHDR_DNDI(0)<1>			r0.0<8;8,1>:ud					// message header
-mov (1)		mwMSGHDR_DNDI(1,4)<1>			r7.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
-mov (1)		mwMSGHDR_DNDI(1,12)<1>			r7.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
+mov (1)		mwMSGHDR_DNDI(1,4)<1>			r9.0<0;1,0>:w		{ NoDDClr }		// horizontal origin	// Do we need to add offset here? -vK
+mov (1)		mwMSGHDR_DNDI(1,12)<1>			r9.1<0;1,0>:w		{ NoDDChk }		// vertical origin		// Can these 2 be combined? - vK
 
 send (8)	udDNDI_RESP(0)<1>	r18	0x2	0x4AE8003:ud
 
 // On Gen6, with VDI walker, use the XY pair returned rather than programmed above
 // VDI_RETURNED_XY is ordered XY in case of walker enables and the same as programmed in case of walker disabled
-mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
+mov (2) 	r9.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in W.14 and W.15    
 
 
 
@@ -312,8 +312,8 @@ mov (2) 	r7.0<1>:w     uwDNDI_RESP(9,14)<2;2,1>	// horizontal/Vertial origin in
 mov (8)     mudMSGHDR_STMM(0)<1>	r0.0<8;8,1>:ud               							// message header   
 mov (8)     mudMSGHDR_STMM(1)<1>   	udDNDI_RESP(8,0)         					// Move STMM to MRF 
 
-shr (1)     mudMSGHDR_STMM(0,0)<1>	r7.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
-mov (1)     mudMSGHDR_STMM(0,1)<1>	r7.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
+shr (1)     mudMSGHDR_STMM(0,0)<1>	r9.0<0;1,0>:w            1:w     { NoDDClr } 		// X origin / 2
+mov (1)     mudMSGHDR_STMM(0,1)<1>	r9.1<0;1,0>:w                    { NoDDClr, NoDDChk }  	// Y origin
 mov (1)     mudMSGHDR_STMM(0,2)<1>	0x30007:ud           { NoDDChk } 		// block width and height (8x4)
 
 send (8)	null<1>:d	r20	0x5		0x40A8021:ud      
@@ -329,8 +329,8 @@ send (8)	null<1>:d	r20	0x5		0x40A8021:ud
 mov (8)		mudMSGHDR_ENC_STATS(1)<1>	0x0:ud						// Init payload MRF
 mov (8)		mudMSGHDR_ENC_STATS(0)<1>	r0.0<8;8,1>:ud				// message header
 
-shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r7.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
-mul (1)		acc0.1<1>:ud					r7.1<0;1,0>:w				3:w																							// Y origin * 3
+shr (1)		mudMSGHDR_ENC_STATS(0,0)<1>		r9.0<0;1,0>:w            	1:w  	{ NoDDClr }			//enable the flag after testing on si           			{ NoDDClr }	// X origin / 2
+mul (1)		acc0.1<1>:ud					r9.1<0;1,0>:w				3:w																							// Y origin * 3
 shr (1)		mudMSGHDR_ENC_STATS(0,1)<1>		acc0.1<0;1,0>:ud			2:w		{ NoDDClr, NoDDChk }		//enable the flag after testing on si			   { NoDDClr, NoDDChk } // Y origin * 3/4
 mov (1)		mudMSGHDR_ENC_STATS(0,2)<1>		0x20007:ud				{ NoDDChk }			//enable the flag after testing on si						{ NoDDChk } // block width and height (8x3)
 add (2)		mudMSGHDR_ENC_STATS(0,0)<1>		mudMSGHDR_ENC_STATS(0,0)<2;2,1>       	r1.12<2;2,1>:uw					// Add pitch to X,Y origin
@@ -363,8 +363,8 @@ send (8)   null<1>:d    r24    0x5    0x40A8021:ud
 add (4) a0.4<1>:uw   r2.28<4;4,1>:ub   608:w               // Initial Y,U,V offset in YUV422 block; it starts at m20
 
 mov (8) r27.0<1>:ud     r0.0<8;8,1>:ud
-shl (1) r27.0<1>:d      r7.0<0;1,0>:w            1:w  { NoDDClr }          // H. block origin need to be doubled
-mov (1) r27.1<1>:d      r7.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
+shl (1) r27.0<1>:d      r9.0<0;1,0>:w            1:w  { NoDDClr }          // H. block origin need to be doubled
+mov (1) r27.1<1>:d      r9.1<0;1,0>:w                 { NoDDClr, NoDDChk }       // Block origin
 mov (1) r27.2<1>:ud     0x3001F:ud          { NoDDChk }          // Block width and height (32x8)
 
 //prepare the message headers
diff --git a/src/shaders/post_processing/gen7/RGB_to_YUV.g4a b/src/shaders/post_processing/gen7/RGB_to_YUV.g4a
index 179a66a..09602c5 100644
--- a/src/shaders/post_processing/gen7/RGB_to_YUV.g4a
+++ b/src/shaders/post_processing/gen7/RGB_to_YUV.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
diff --git a/src/shaders/post_processing/gen7/Save_AVS_NV12.g4a b/src/shaders/post_processing/gen7/Save_AVS_NV12.g4a
index 7cb1ce1..20a317f 100644
--- a/src/shaders/post_processing/gen7/Save_AVS_NV12.g4a
+++ b/src/shaders/post_processing/gen7/Save_AVS_NV12.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -428,9 +428,9 @@
 	mov  (8) r28<1>:ud      r27<8;8,1>:ud
 	mov  (8) r37<1>:ud      r27<8;8,1>:ud
 
-	mov  (2) r28.0<1>:d     r7.0<2;2,1>:w                   		{ NoDDClr }  		//ORI Y (LUMA) 	= ORI
-	mov  (1) r37.0<1>:d     r7.0<0;1,0>:w                   		{ NoDDClr }  		//H ORI (CHROMA)	= H ORI
-	shr  (1) r37.1<1>:d     r7.1<0;1,0>:w            1:w  		{ NoDDClr, NoDDChk }  	//V ORI (CHROMA)	= V ORI/2
+	mov  (2) r28.0<1>:d     r9.0<2;2,1>:w                   		{ NoDDClr }  		//ORI Y (LUMA) 	= ORI
+	mov  (1) r37.0<1>:d     r9.0<0;1,0>:w                   		{ NoDDClr }  		//H ORI (CHROMA)	= H ORI
+	shr  (1) r37.1<1>:d     r9.1<0;1,0>:w            1:w  		{ NoDDClr, NoDDChk }  	//V ORI (CHROMA)	= V ORI/2
 
   	mov  (1) r28.2<1>:ud    0xF000F:ud	{ NoDDChk }  // Y Block width and height (16x16)
 	mov  (1) r37.2<1>:ud    0x7000F:ud  	{ NoDDChk }  // UV Block width and height(16x8)
diff --git a/src/shaders/post_processing/gen7/Save_AVS_PA.g4a b/src/shaders/post_processing/gen7/Save_AVS_PA.g4a
index 2f97843..107474d 100644
--- a/src/shaders/post_processing/gen7/Save_AVS_PA.g4a
+++ b/src/shaders/post_processing/gen7/Save_AVS_PA.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -412,8 +412,8 @@
 	//Set DEST pointers according to output packing i.e. YUYV, YVYU, UYVY, VYUY
 	add	(4)		a0.4<1>:w			r2.28<4;4,1>:ub    928:uw
 
-    shl (1) r27.0<1>:d      r7.0<0;1,0>:w            1:w  			 { NoDDClr }            // H. block origin need to be 2 times
-    mov (1) r27.1<1>:d      r7.1<0;1,0>:w                 			 { NoDDClr, NoDDChk }   // Block origin (1st quadrant)
+    shl (1) r27.0<1>:d      r9.0<0;1,0>:w            1:w  			 { NoDDClr }            // H. block origin need to be 2 times
+    mov (1) r27.1<1>:d      r9.1<0;1,0>:w                 			 { NoDDClr, NoDDChk }   // Block origin (1st quadrant)
     mov (1) r27.2<1>:ud     0x1001F:ud  	 { NoDDChk }            // Block width and height (32x2)
 
 // Rounding
diff --git a/src/shaders/post_processing/gen7/Save_AVS_PL3.g4a b/src/shaders/post_processing/gen7/Save_AVS_PL3.g4a
index d9cde4e..a193212 100644
--- a/src/shaders/post_processing/gen7/Save_AVS_PL3.g4a
+++ b/src/shaders/post_processing/gen7/Save_AVS_PL3.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -433,9 +433,9 @@
 	mov  (8) r37<1>:ud      r27<8;8,1>:ud
 	mov  (8) r46<1>:ud      r27<8;8,1>:ud
 
-	mov  (2) r28.0<1>:d     r7.0<2;2,1>:w                   		{ NoDDClr }  //ORI Y (LUMA) = ORI
-	shr  (2) r37.0<1>:d     r7.0<2;2,1>:w            1:w  		{ NoDDClr }  //H/V ORI U 	= H/V ORI/2
-	shr  (2) r46.0<1>:d     r7.0<2;2,1>:w            1:w  		{ NoDDClr }  //H/V ORI V 	= H/V ORI/2
+	mov  (2) r28.0<1>:d     r9.0<2;2,1>:w                   		{ NoDDClr }  //ORI Y (LUMA) = ORI
+	shr  (2) r37.0<1>:d     r9.0<2;2,1>:w            1:w  		{ NoDDClr }  //H/V ORI U 	= H/V ORI/2
+	shr  (2) r46.0<1>:d     r9.0<2;2,1>:w            1:w  		{ NoDDClr }  //H/V ORI V 	= H/V ORI/2
 
   	mov  (1) r28.2<1>:ud    0xF000F:ud	{ NoDDChk }  // Y Block width and height (16x16)
 	mov  (1)r37.2<1>:ud     0x70007:ud  	{ NoDDChk }  // U Block width and height (8x8)
diff --git a/src/shaders/post_processing/gen7/Save_AVS_RGB.g4a b/src/shaders/post_processing/gen7/Save_AVS_RGB.g4a
index df0f492..8b0c329 100644
--- a/src/shaders/post_processing/gen7/Save_AVS_RGB.g4a
+++ b/src/shaders/post_processing/gen7/Save_AVS_RGB.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -423,8 +423,8 @@
 	(f0.0)	mov (1)	a0.0:uw a0.2:uw
 	(f0.0)	mov (1)	a0.2:uw uwTemp0<0;1,0>
 
-    shl (1) r27.0<1>:d      r7.0<0;1,0>:w            2:w  			{ NoDDClr }       // H. block origin need to be quadrupled
-    mov (1) r27.1<1>:d      r7.1<0;1,0>:w                 			{ NoDDClr, NoDDChk }    // Block origin (1st quadrant)
+    shl (1) r27.0<1>:d      r9.0<0;1,0>:w            2:w  			{ NoDDClr }       // H. block origin need to be quadrupled
+    mov (1) r27.1<1>:d      r9.1<0;1,0>:w                 			{ NoDDClr, NoDDChk }    // Block origin (1st quadrant)
     mov (1) r27.2<1>:ud     0x1001F:ud  	{ NoDDChk }       // Block width and height (32x2)
 
     add (4)   a0.4:uw   a0.0<4;4,1>:w          r22.8<0;2,1>:w
diff --git a/src/shaders/post_processing/gen7/Save_AVS_RGBX.g4a b/src/shaders/post_processing/gen7/Save_AVS_RGBX.g4a
index deb2220..a61fdbd 100644
--- a/src/shaders/post_processing/gen7/Save_AVS_RGBX.g4a
+++ b/src/shaders/post_processing/gen7/Save_AVS_RGBX.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -431,8 +431,8 @@
 	(f0.0)	mov (1)	a0.0<1>:uw a0.2<0;1,0>:uw
 	(f0.0)	mov (1)	a0.2<1>:uw uwTemp0<0;1,0>
 
-    shl (1) r27.0<1>:d      r7.0<0;1,0>:w            2:w  			{ NoDDClr }       // H. block origin need to be quadrupled
-    mov (1) r27.1<1>:d      r7.1<0;1,0>:w                 			{ NoDDClr, NoDDChk }    // Block origin (1st quadrant)
+    shl (1) r27.0<1>:d      r9.0<0;1,0>:w            2:w  			{ NoDDClr }       // H. block origin need to be quadrupled
+    mov (1) r27.1<1>:d      r9.1<0;1,0>:w                 			{ NoDDClr, NoDDChk }    // Block origin (1st quadrant)
     mov (1) r27.2<1>:ud     0x3001F:ud  	{ NoDDChk }       // Block width and height (32x4)
 
     mov (4)   a0.4<1>:uw   a0.0<4;4,1>:uw         
diff --git a/src/shaders/post_processing/gen7/Set_AVS_Buf_0123_BGRA.g4a b/src/shaders/post_processing/gen7/Set_AVS_Buf_0123_BGRA.g4a
index 4c0e993..8d3a350 100644
--- a/src/shaders/post_processing/gen7/Set_AVS_Buf_0123_BGRA.g4a
+++ b/src/shaders/post_processing/gen7/Set_AVS_Buf_0123_BGRA.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
diff --git a/src/shaders/post_processing/gen7/Set_AVS_Buf_0123_PL2.g4a b/src/shaders/post_processing/gen7/Set_AVS_Buf_0123_PL2.g4a
index 23ed046..3e8a543 100644
--- a/src/shaders/post_processing/gen7/Set_AVS_Buf_0123_PL2.g4a
+++ b/src/shaders/post_processing/gen7/Set_AVS_Buf_0123_PL2.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
diff --git a/src/shaders/post_processing/gen7/Set_AVS_Buf_0123_PL3.g4a b/src/shaders/post_processing/gen7/Set_AVS_Buf_0123_PL3.g4a
index 4eac610..777a882 100644
--- a/src/shaders/post_processing/gen7/Set_AVS_Buf_0123_PL3.g4a
+++ b/src/shaders/post_processing/gen7/Set_AVS_Buf_0123_PL3.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
diff --git a/src/shaders/post_processing/gen7/Set_AVS_Buf_0123_VUYA.g4a b/src/shaders/post_processing/gen7/Set_AVS_Buf_0123_VUYA.g4a
index 02222ad..72b13fc 100644
--- a/src/shaders/post_processing/gen7/Set_AVS_Buf_0123_VUYA.g4a
+++ b/src/shaders/post_processing/gen7/Set_AVS_Buf_0123_VUYA.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
diff --git a/src/shaders/post_processing/gen7/Set_AVS_Buf_0123_VYUA.g4a b/src/shaders/post_processing/gen7/Set_AVS_Buf_0123_VYUA.g4a
index c3c50c5..bc0e019 100644
--- a/src/shaders/post_processing/gen7/Set_AVS_Buf_0123_VYUA.g4a
+++ b/src/shaders/post_processing/gen7/Set_AVS_Buf_0123_VYUA.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
diff --git a/src/shaders/post_processing/gen7/Set_Layer_0.g4a b/src/shaders/post_processing/gen7/Set_Layer_0.g4a
index 029951e..4aaac2c 100644
--- a/src/shaders/post_processing/gen7/Set_Layer_0.g4a
+++ b/src/shaders/post_processing/gen7/Set_Layer_0.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -443,8 +443,8 @@
 
 
 	//For layer 0, use f0.1 directly
-	cmp.ne.f0.1  			(1)  null<1>:d    r7.2:uw 		0:uw
-	(f0.1)cmp.ne.f0.1	(1)  null<1>:d		 r7.3:uw		0:uw
+	cmp.ne.f0.1  			(1)  null<1>:d    r9.2:uw 		0:uw
+	(f0.1)cmp.ne.f0.1	(1)  null<1>:d		 r9.3:uw		0:uw
 	(-f0.1)  jmpi  (1)  SKIP_LAYER_L0
 
 
@@ -453,7 +453,7 @@
 
 	//Copy all AVS Payload data
 	// Setup Message Payload Header for 1st block of Media Sampler 8x8 (16x4 for IVB+)
-	mov (1) r25.6:f        r7.5:f		{ NoDDClr }		//NLAS dx
+	mov (1) r25.6:f        r9.5:f		{ NoDDClr }		//NLAS dx
 	mov (1) r25.4:f        r3.0:f				{ NoDDClr, NoDDChk } 	//Step X
 	mov (1) r25.5:f        r4.0:f				{ NoDDClr, NoDDChk }	//Step Y
 
@@ -470,14 +470,14 @@
     // Calculating X(8)
     mov (1)   acc0.2:f           		r6.0:f
     mac (1)   acc0.2:f           		r3.0:f          	8.0:f
-    mac (1)   r23.2:f    	r7.5:f     28.0:f		{ NoDDClr }
+    mac (1)   r23.2:f    	r9.5:f     28.0:f		{ NoDDClr }
 
     // Calculating Y(4)
     mul (1)   r23.1<1>:f   	r4.0:f       4.0:f   	{ NoDDClr, NoDDChk }  //dY*4
 
     // Calculating dx(8)
     mov (1)   acc0.4:f           r3.0:f
-    mac (1)   r23.4:f     r7.5:f		8.0:f		{ NoDDClr, NoDDChk }
+    mac (1)   r23.4:f     r9.5:f		8.0:f		{ NoDDClr, NoDDChk }
 
 	// Binding Index
 	mov (1)	r23.5:ud		0:ud							{ NoDDChk }
diff --git a/src/shaders/post_processing/gen7/VP_Setup.g4a b/src/shaders/post_processing/gen7/VP_Setup.g4a
index 7c42a2e..980cd0f 100644
--- a/src/shaders/post_processing/gen7/VP_Setup.g4a
+++ b/src/shaders/post_processing/gen7/VP_Setup.g4a
@@ -175,7 +175,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -184,15 +184,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -388,13 +388,13 @@ mov (8) r25:ud 	r0.0<8;8,1>:ud
 mov (8) r26:ud 	r0.0<8;8,1>:ud
 
 // Calculate StepX for all layers and overwrite it on the ratio
-	mul	(8)		r3.0<1>:f   r3.0<8;8,1>:f 	r7.4<0;1,0>:f				//StepX_ratio = StepX / VideoStepX
+	mul	(8)		r3.0<1>:f   r3.0<8;8,1>:f 	r9.4<0;1,0>:f				//StepX_ratio = StepX / VideoStepX
 
 	//Normalised Ratio of Horizontal step size with main video for all layers now becomes
 	//Normalised Horizontal step size for all layers
 
 // Calculate block origin for all layers and overwrite it on the frame origin
-	mov (2)	r8.5<1>:f						r7.0<2;2,1>:w		//Convert origin from word to float
+	mov (2)	r8.5<1>:f						r9.0<2;2,1>:w		//Convert origin from word to float
 
 	cmp.e.f0.0 	(8)	null<1>:d				r2.26:ub 		1:uw
 
diff --git a/src/shaders/post_processing/gen7/YUV_to_RGB.g4a b/src/shaders/post_processing/gen7/YUV_to_RGB.g4a
index b7147fc..6af651f 100644
--- a/src/shaders/post_processing/gen7/YUV_to_RGB.g4a
+++ b/src/shaders/post_processing/gen7/YUV_to_RGB.g4a
@@ -159,7 +159,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -168,15 +168,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -386,34 +386,36 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 1]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 17]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f 
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac   (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
-	
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+	mac.sat (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	r7.2<0;1,0>:f
 	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
 
-	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
-	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
-	mov   (16) wTempB(0, 0)<2>	  fBUFFER_B(0, 0)<8;8,1>
-	 	
-	mov   (16) r[a0.1,1]<2>:ub	  ubTempR(0, 0)<32;8,4>
-	mov   (16) r[a0.2,1]<2>:ub	  ubTempG(0, 0)<32;8,4>	
-	mov   (16) r[a0.0,1]<2>:ub	  ubTempB(0, 0)<32;8,4>	
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
+
+        mov   (16) wTempR(0, 0)<2>        fBUFFER_R(0, 0)<8;8,1>
+        mov   (16) wTempG(0, 0)<2>        fBUFFER_G(0, 0)<8;8,1>
+        mov   (16) wTempB(0, 0)<2>        fBUFFER_B(0, 0)<8;8,1>
+        mov   (16) r[a0.1,1]<2>:ub        ubTempR(0, 0)<32;8,4>
+        mov   (16) r[a0.2,1]<2>:ub        ubTempG(0, 0)<32;8,4>
+        mov   (16) r[a0.0,1]<2>:ub        ubTempB(0, 0)<32;8,4>
 
 //the second line in the block 0
         
@@ -424,27 +426,29 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 33]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 49]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac	(16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+        mac.sat (16) fBUFFER_R(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.2<0;1,0>:f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
-	
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>     fBUFFER_R(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
@@ -461,27 +465,30 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 65]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 81]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac	(16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+        mac.sat (16) fBUFFER_R(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.2<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>     fBUFFER_R(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
-	
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
 	mov   (16) wTempB(0, 0)<2>	  fBUFFER_B(0, 0)<8;8,1>
@@ -497,26 +504,29 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 97]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 113]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac	(16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+        mac.sat (16) fBUFFER_R(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.2<0;1,0>:f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>     fBUFFER_R(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
@@ -536,31 +546,33 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 1]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 17]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac   (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
-	
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+        mac.sat (16) fBUFFER_R(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.2<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>     fBUFFER_R(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
 	mov   (16) wTempB(0, 0)<2>	  fBUFFER_B(0, 0)<8;8,1>
-	 	
 	mov   (16) r[a0.1,1]<2>:ub	  ubTempR(0, 0)<32;8,4>
 	mov   (16) r[a0.2,1]<2>:ub	  ubTempG(0, 0)<32;8,4>	
 	mov   (16) r[a0.0,1]<2>:ub	  ubTempB(0, 0)<32;8,4>	
@@ -574,27 +586,29 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 33]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 49]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac	(16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+        mac.sat (16) fBUFFER_R(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.2<0;1,0>:f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
-	
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>     fBUFFER_R(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
@@ -611,27 +625,30 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 65]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 81]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac	(16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+        mac.sat (16) fBUFFER_R(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.2<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>     fBUFFER_R(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
-	
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
 	mov   (16) wTempB(0, 0)<2>	  fBUFFER_B(0, 0)<8;8,1>
@@ -647,26 +664,29 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 97]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 113]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac	(16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+        mac.sat (16) fBUFFER_R(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.2<0;1,0>:f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>     fBUFFER_R(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
@@ -686,31 +706,33 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 1]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 17]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac   (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
-	
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+        mac.sat (16) fBUFFER_R(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.2<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>     fBUFFER_R(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
 	mov   (16) wTempB(0, 0)<2>	  fBUFFER_B(0, 0)<8;8,1>
-	 	
 	mov   (16) r[a0.1,1]<2>:ub	  ubTempR(0, 0)<32;8,4>
 	mov   (16) r[a0.2,1]<2>:ub	  ubTempG(0, 0)<32;8,4>	
 	mov   (16) r[a0.0,1]<2>:ub	  ubTempB(0, 0)<32;8,4>	
@@ -724,27 +746,29 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 33]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 49]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac	(16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+        mac.sat (16) fBUFFER_R(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.2<0;1,0>:f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
-	
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>     fBUFFER_R(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
@@ -761,27 +785,30 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 65]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 81]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac	(16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+        mac.sat (16) fBUFFER_R(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.2<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>     fBUFFER_R(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
-	
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
 	mov   (16) wTempB(0, 0)<2>	  fBUFFER_B(0, 0)<8;8,1>
@@ -797,26 +824,29 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 97]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 113]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac	(16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+        mac.sat (16) fBUFFER_R(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.2<0;1,0>:f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>     fBUFFER_R(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
@@ -836,31 +866,33 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 1]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 17]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac   (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
-	
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+        mac.sat (16) fBUFFER_R(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.2<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>     fBUFFER_R(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
 	mov   (16) wTempB(0, 0)<2>	  fBUFFER_B(0, 0)<8;8,1>
-	 	
 	mov   (16) r[a0.1,1]<2>:ub	  ubTempR(0, 0)<32;8,4>
 	mov   (16) r[a0.2,1]<2>:ub	  ubTempG(0, 0)<32;8,4>	
 	mov   (16) r[a0.0,1]<2>:ub	  ubTempB(0, 0)<32;8,4>	
@@ -874,27 +906,29 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 33]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 49]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac	(16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+        mac.sat (16) fBUFFER_R(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.2<0;1,0>:f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
-	
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>     fBUFFER_R(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
@@ -911,27 +945,30 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 65]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 81]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+        mac.sat (16) fBUFFER_R(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.2<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>     fBUFFER_R(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
-	
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
 	mov   (16) wTempB(0, 0)<2>	  fBUFFER_B(0, 0)<8;8,1>
@@ -947,26 +984,29 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 97]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 113]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac	(16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+        mac.sat (16) fBUFFER_R(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.2<0;1,0>:f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>     fBUFFER_R(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
diff --git a/src/shaders/post_processing/gen7/avs.g75b b/src/shaders/post_processing/gen7/avs.g75b
index c25432e..a6fd4c8 100644
--- a/src/shaders/post_processing/gen7/avs.g75b
+++ b/src/shaders/post_processing/gen7/avs.g75b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x000000d0 },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x00006ea2 },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000290 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -396,7 +396,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000280 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -438,7 +438,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000280 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -480,7 +480,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000280 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -523,9 +523,9 @@
    { 0x00400040, 0x22082da8, 0x006902c0, 0x02000200 },
    { 0x00600001, 0x23800021, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00021, 0x008d0360, 0x00000000 },
-   { 0x00200401, 0x238001a5, 0x004500e0, 0x00000000 },
-   { 0x00000401, 0x24a001a5, 0x000000e0, 0x00000000 },
-   { 0x00000c08, 0x24a43da5, 0x000000e2, 0x00010001 },
+   { 0x00200401, 0x238001a5, 0x00450120, 0x00000000 },
+   { 0x00000401, 0x24a001a5, 0x00000120, 0x00000000 },
+   { 0x00000c08, 0x24a43da5, 0x00000122, 0x00010001 },
    { 0x00000801, 0x23880061, 0x00000000, 0x000f000f },
    { 0x00000801, 0x24a80061, 0x00000000, 0x0007000f },
    { 0x80800040, 0xa4002d29, 0x00b18400, 0x00800080 },
diff --git a/src/shaders/post_processing/gen7/avs.g7b b/src/shaders/post_processing/gen7/avs.g7b
index 445ae01..1cf1b2f 100644
--- a/src/shaders/post_processing/gen7/avs.g7b
+++ b/src/shaders/post_processing/gen7/avs.g7b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x0000001a },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x00006ea2 },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000052 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -396,7 +396,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000050 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -438,7 +438,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000050 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -480,7 +480,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000050 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -523,9 +523,9 @@
    { 0x00400040, 0x22082da8, 0x006902c0, 0x02000200 },
    { 0x00600001, 0x23800021, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00021, 0x008d0360, 0x00000000 },
-   { 0x00200401, 0x238001a5, 0x004500e0, 0x00000000 },
-   { 0x00000401, 0x24a001a5, 0x000000e0, 0x00000000 },
-   { 0x00000c08, 0x24a43da5, 0x000000e2, 0x00010001 },
+   { 0x00200401, 0x238001a5, 0x00450120, 0x00000000 },
+   { 0x00000401, 0x24a001a5, 0x00000120, 0x00000000 },
+   { 0x00000c08, 0x24a43da5, 0x00000122, 0x00010001 },
    { 0x00000801, 0x23880061, 0x00000000, 0x000f000f },
    { 0x00000801, 0x24a80061, 0x00000000, 0x0007000f },
    { 0x80800040, 0xa4002d29, 0x00b18400, 0x00800080 },
diff --git a/src/shaders/post_processing/gen7/dndi.g75b b/src/shaders/post_processing/gen7/dndi.g75b
index ffa9d49..2f9dff9 100644
--- a/src/shaders/post_processing/gen7/dndi.g75b
+++ b/src/shaders/post_processing/gen7/dndi.g75b
@@ -1,18 +1,18 @@
    { 0x00600001, 0x22400021, 0x008d0000, 0x00000000 },
-   { 0x00000401, 0x226801ad, 0x000000e0, 0x00000000 },
-   { 0x00000801, 0x227801ad, 0x000000e2, 0x00000000 },
+   { 0x00000401, 0x226801ad, 0x00000120, 0x00000000 },
+   { 0x00000801, 0x227801ad, 0x00000122, 0x00000000 },
    { 0x02600031, 0x25c00e21, 0x00000240, 0x04ae8003 },
-   { 0x00200001, 0x20e0012d, 0x004506fc, 0x00000000 },
+   { 0x00200001, 0x2120012d, 0x004506fc, 0x00000000 },
    { 0x00600001, 0x22800021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x22a00021, 0x008d06c0, 0x00000000 },
-   { 0x00000408, 0x22803da1, 0x000000e0, 0x00010001 },
-   { 0x00000c01, 0x228401a1, 0x000000e2, 0x00000000 },
+   { 0x00000408, 0x22803da1, 0x00000120, 0x00010001 },
+   { 0x00000c01, 0x228401a1, 0x00000122, 0x00000000 },
    { 0x00000801, 0x22880061, 0x00000000, 0x00030007 },
    { 0x05600031, 0x20000e24, 0x00000280, 0x040a8021 },
    { 0x00600001, 0x23200061, 0x00000000, 0x00000000 },
    { 0x00600001, 0x23000021, 0x008d0000, 0x00000000 },
-   { 0x00000408, 0x23003da1, 0x000000e0, 0x00010001 },
-   { 0x00000041, 0x24043da0, 0x000000e2, 0x00030003 },
+   { 0x00000408, 0x23003da1, 0x00000120, 0x00010001 },
+   { 0x00000041, 0x24043da0, 0x00000122, 0x00030003 },
    { 0x00000c08, 0x23043c01, 0x00000404, 0x00020002 },
    { 0x00000801, 0x23080061, 0x00000000, 0x00020007 },
    { 0x00200040, 0x23002421, 0x00450300, 0x00450038 },
@@ -21,8 +21,8 @@
    { 0x00200801, 0x43280021, 0x004506f4, 0x00000000 },
    { 0x05600031, 0x20000e24, 0x00000300, 0x040a8021 },
    { 0x00600001, 0x23800021, 0x008d0000, 0x00000000 },
-   { 0x00000401, 0x238001a5, 0x000000e0, 0x00000000 },
-   { 0x00000c01, 0x238401a5, 0x000000e2, 0x00000000 },
+   { 0x00000401, 0x238001a5, 0x00000120, 0x00000000 },
+   { 0x00000c01, 0x238401a5, 0x00000122, 0x00000000 },
    { 0x00000801, 0x23880061, 0x00000000, 0x0003000f },
    { 0x00600001, 0x22400021, 0x008d0380, 0x00000000 },
    { 0x00600001, 0x22e00021, 0x008d0380, 0x00000000 },
diff --git a/src/shaders/post_processing/gen7/dndi.g7b b/src/shaders/post_processing/gen7/dndi.g7b
index ffa9d49..2f9dff9 100644
--- a/src/shaders/post_processing/gen7/dndi.g7b
+++ b/src/shaders/post_processing/gen7/dndi.g7b
@@ -1,18 +1,18 @@
    { 0x00600001, 0x22400021, 0x008d0000, 0x00000000 },
-   { 0x00000401, 0x226801ad, 0x000000e0, 0x00000000 },
-   { 0x00000801, 0x227801ad, 0x000000e2, 0x00000000 },
+   { 0x00000401, 0x226801ad, 0x00000120, 0x00000000 },
+   { 0x00000801, 0x227801ad, 0x00000122, 0x00000000 },
    { 0x02600031, 0x25c00e21, 0x00000240, 0x04ae8003 },
-   { 0x00200001, 0x20e0012d, 0x004506fc, 0x00000000 },
+   { 0x00200001, 0x2120012d, 0x004506fc, 0x00000000 },
    { 0x00600001, 0x22800021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x22a00021, 0x008d06c0, 0x00000000 },
-   { 0x00000408, 0x22803da1, 0x000000e0, 0x00010001 },
-   { 0x00000c01, 0x228401a1, 0x000000e2, 0x00000000 },
+   { 0x00000408, 0x22803da1, 0x00000120, 0x00010001 },
+   { 0x00000c01, 0x228401a1, 0x00000122, 0x00000000 },
    { 0x00000801, 0x22880061, 0x00000000, 0x00030007 },
    { 0x05600031, 0x20000e24, 0x00000280, 0x040a8021 },
    { 0x00600001, 0x23200061, 0x00000000, 0x00000000 },
    { 0x00600001, 0x23000021, 0x008d0000, 0x00000000 },
-   { 0x00000408, 0x23003da1, 0x000000e0, 0x00010001 },
-   { 0x00000041, 0x24043da0, 0x000000e2, 0x00030003 },
+   { 0x00000408, 0x23003da1, 0x00000120, 0x00010001 },
+   { 0x00000041, 0x24043da0, 0x00000122, 0x00030003 },
    { 0x00000c08, 0x23043c01, 0x00000404, 0x00020002 },
    { 0x00000801, 0x23080061, 0x00000000, 0x00020007 },
    { 0x00200040, 0x23002421, 0x00450300, 0x00450038 },
@@ -21,8 +21,8 @@
    { 0x00200801, 0x43280021, 0x004506f4, 0x00000000 },
    { 0x05600031, 0x20000e24, 0x00000300, 0x040a8021 },
    { 0x00600001, 0x23800021, 0x008d0000, 0x00000000 },
-   { 0x00000401, 0x238001a5, 0x000000e0, 0x00000000 },
-   { 0x00000c01, 0x238401a5, 0x000000e2, 0x00000000 },
+   { 0x00000401, 0x238001a5, 0x00000120, 0x00000000 },
+   { 0x00000c01, 0x238401a5, 0x00000122, 0x00000000 },
    { 0x00000801, 0x23880061, 0x00000000, 0x0003000f },
    { 0x00600001, 0x22400021, 0x008d0380, 0x00000000 },
    { 0x00600001, 0x22e00021, 0x008d0380, 0x00000000 },
diff --git a/src/shaders/post_processing/gen7/nv12_dn_nv12.g75b b/src/shaders/post_processing/gen7/nv12_dn_nv12.g75b
index a43e216..663cbec 100644
--- a/src/shaders/post_processing/gen7/nv12_dn_nv12.g75b
+++ b/src/shaders/post_processing/gen7/nv12_dn_nv12.g75b
@@ -1,19 +1,19 @@
    { 0x00600001, 0x22400021, 0x008d0000, 0x00000000 },
-   { 0x00000401, 0x226801ad, 0x000000e0, 0x00000000 },
-   { 0x00000801, 0x227801ad, 0x000000e2, 0x00000000 },
+   { 0x00000401, 0x226801ad, 0x00000120, 0x00000000 },
+   { 0x00000801, 0x227801ad, 0x00000122, 0x00000000 },
    { 0x02600031, 0x25c00e21, 0x00000240, 0x045e8003 },
-   { 0x00200001, 0x20e0012d, 0x0045065c, 0x00000000 },
+   { 0x00200001, 0x2120012d, 0x0045065c, 0x00000000 },
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00200001, 0x22e00021, 0x00450640, 0x00000000 },
-   { 0x00200008, 0x23603da1, 0x004500e0, 0x00020002 },
+   { 0x00200008, 0x23603da1, 0x00450120, 0x00020002 },
    { 0x00000440, 0x23602421, 0x00000360, 0x00000038 },
    { 0x00000801, 0x23680061, 0x00000000, 0x00010003 },
    { 0x00600001, 0x22c00021, 0x008d0360, 0x00000000 },
    { 0x05600031, 0x20000e24, 0x000002c0, 0x040a8021 },
    { 0x00600001, 0x23200061, 0x00000000, 0x00000000 },
    { 0x00600001, 0x23000021, 0x008d0000, 0x00000000 },
-   { 0x00000408, 0x23003da1, 0x000000e0, 0x00010001 },
-   { 0x00000041, 0x24043da0, 0x000000e2, 0x00030003 },
+   { 0x00000408, 0x23003da1, 0x00000120, 0x00010001 },
+   { 0x00000041, 0x24043da0, 0x00000122, 0x00030003 },
    { 0x00000c08, 0x23043c01, 0x00000404, 0x00020002 },
    { 0x00000801, 0x23080061, 0x00000000, 0x00050003 },
    { 0x00200040, 0x23002421, 0x00450300, 0x00450038 },
@@ -23,14 +23,14 @@
    { 0x00000c01, 0x23320129, 0x00000650, 0x00000000 },
    { 0x00200801, 0x23340129, 0x00450652, 0x00000000 },
    { 0x05600031, 0x20000e24, 0x00000300, 0x040a8021 },
-   { 0x00200040, 0x236035a5, 0x004500e0, 0x00450088 },
+   { 0x00200040, 0x236035a5, 0x00450120, 0x00450088 },
    { 0x0000040c, 0x23643ca5, 0x00000364, 0x00010001 },
    { 0x00000801, 0x23680061, 0x00000000, 0x0004000f },
    { 0x00600001, 0x24800021, 0x008d0360, 0x00000000 },
    { 0x04600031, 0x27400e21, 0x00000480, 0x02390001 },
    { 0x00000001, 0x24880061, 0x00000000, 0x0003000f },
    { 0x00600001, 0x25a00021, 0x008d0000, 0x00000000 },
-   { 0x00200401, 0x25a001a1, 0x004500e0, 0x00000000 },
+   { 0x00200401, 0x25a001a1, 0x00450120, 0x00000000 },
    { 0x00000801, 0x25a80061, 0x00000000, 0x0007000f },
    { 0x05600031, 0x20000e24, 0x000005a0, 0x0a0a8018 },
    { 0x00600001, 0x24a00021, 0x008d0740, 0x00000000 },
diff --git a/src/shaders/post_processing/gen7/nv12_dn_nv12.g7b b/src/shaders/post_processing/gen7/nv12_dn_nv12.g7b
index a43e216..663cbec 100644
--- a/src/shaders/post_processing/gen7/nv12_dn_nv12.g7b
+++ b/src/shaders/post_processing/gen7/nv12_dn_nv12.g7b
@@ -1,19 +1,19 @@
    { 0x00600001, 0x22400021, 0x008d0000, 0x00000000 },
-   { 0x00000401, 0x226801ad, 0x000000e0, 0x00000000 },
-   { 0x00000801, 0x227801ad, 0x000000e2, 0x00000000 },
+   { 0x00000401, 0x226801ad, 0x00000120, 0x00000000 },
+   { 0x00000801, 0x227801ad, 0x00000122, 0x00000000 },
    { 0x02600031, 0x25c00e21, 0x00000240, 0x045e8003 },
-   { 0x00200001, 0x20e0012d, 0x0045065c, 0x00000000 },
+   { 0x00200001, 0x2120012d, 0x0045065c, 0x00000000 },
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00200001, 0x22e00021, 0x00450640, 0x00000000 },
-   { 0x00200008, 0x23603da1, 0x004500e0, 0x00020002 },
+   { 0x00200008, 0x23603da1, 0x00450120, 0x00020002 },
    { 0x00000440, 0x23602421, 0x00000360, 0x00000038 },
    { 0x00000801, 0x23680061, 0x00000000, 0x00010003 },
    { 0x00600001, 0x22c00021, 0x008d0360, 0x00000000 },
    { 0x05600031, 0x20000e24, 0x000002c0, 0x040a8021 },
    { 0x00600001, 0x23200061, 0x00000000, 0x00000000 },
    { 0x00600001, 0x23000021, 0x008d0000, 0x00000000 },
-   { 0x00000408, 0x23003da1, 0x000000e0, 0x00010001 },
-   { 0x00000041, 0x24043da0, 0x000000e2, 0x00030003 },
+   { 0x00000408, 0x23003da1, 0x00000120, 0x00010001 },
+   { 0x00000041, 0x24043da0, 0x00000122, 0x00030003 },
    { 0x00000c08, 0x23043c01, 0x00000404, 0x00020002 },
    { 0x00000801, 0x23080061, 0x00000000, 0x00050003 },
    { 0x00200040, 0x23002421, 0x00450300, 0x00450038 },
@@ -23,14 +23,14 @@
    { 0x00000c01, 0x23320129, 0x00000650, 0x00000000 },
    { 0x00200801, 0x23340129, 0x00450652, 0x00000000 },
    { 0x05600031, 0x20000e24, 0x00000300, 0x040a8021 },
-   { 0x00200040, 0x236035a5, 0x004500e0, 0x00450088 },
+   { 0x00200040, 0x236035a5, 0x00450120, 0x00450088 },
    { 0x0000040c, 0x23643ca5, 0x00000364, 0x00010001 },
    { 0x00000801, 0x23680061, 0x00000000, 0x0004000f },
    { 0x00600001, 0x24800021, 0x008d0360, 0x00000000 },
    { 0x04600031, 0x27400e21, 0x00000480, 0x02390001 },
    { 0x00000001, 0x24880061, 0x00000000, 0x0003000f },
    { 0x00600001, 0x25a00021, 0x008d0000, 0x00000000 },
-   { 0x00200401, 0x25a001a1, 0x004500e0, 0x00000000 },
+   { 0x00200401, 0x25a001a1, 0x00450120, 0x00000000 },
    { 0x00000801, 0x25a80061, 0x00000000, 0x0007000f },
    { 0x05600031, 0x20000e24, 0x000005a0, 0x0a0a8018 },
    { 0x00600001, 0x24a00021, 0x008d0740, 0x00000000 },
diff --git a/src/shaders/post_processing/gen7/pa_to_pa.g75b b/src/shaders/post_processing/gen7/pa_to_pa.g75b
index 0ccd59e..1f63b1b 100644
--- a/src/shaders/post_processing/gen7/pa_to_pa.g75b
+++ b/src/shaders/post_processing/gen7/pa_to_pa.g75b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x000000d0 },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x000062ea },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000240 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -391,7 +391,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000230 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -428,7 +428,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000230 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -465,7 +465,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000230 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -501,8 +501,8 @@
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400040, 0x22002da8, 0x006902c0, 0x00000000 },
    { 0x00400040, 0x22082e2c, 0x0069005c, 0x03a003a0 },
-   { 0x00000409, 0x23603da5, 0x000000e0, 0x00010001 },
-   { 0x00000c01, 0x236401a5, 0x000000e2, 0x00000000 },
+   { 0x00000409, 0x23603da5, 0x00000120, 0x00010001 },
+   { 0x00000c01, 0x236401a5, 0x00000122, 0x00000000 },
    { 0x00000801, 0x23680061, 0x00000000, 0x0001001f },
    { 0x80400040, 0xc0002d29, 0x008a8000, 0x00800080 },
    { 0x80400040, 0xc0202d29, 0x008a8020, 0x00800080 },
diff --git a/src/shaders/post_processing/gen7/pa_to_pa.g7b b/src/shaders/post_processing/gen7/pa_to_pa.g7b
index 20728b5..656063e 100644
--- a/src/shaders/post_processing/gen7/pa_to_pa.g7b
+++ b/src/shaders/post_processing/gen7/pa_to_pa.g7b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x0000001a },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x000062ea },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000048 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -391,7 +391,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000046 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -428,7 +428,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000046 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -465,7 +465,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000046 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -501,8 +501,8 @@
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400040, 0x22002da8, 0x006902c0, 0x00000000 },
    { 0x00400040, 0x22082e2c, 0x0069005c, 0x03a003a0 },
-   { 0x00000409, 0x23603da5, 0x000000e0, 0x00010001 },
-   { 0x00000c01, 0x236401a5, 0x000000e2, 0x00000000 },
+   { 0x00000409, 0x23603da5, 0x00000120, 0x00010001 },
+   { 0x00000c01, 0x236401a5, 0x00000122, 0x00000000 },
    { 0x00000801, 0x23680061, 0x00000000, 0x0001001f },
    { 0x80400040, 0xc0002d29, 0x008a8000, 0x00800080 },
    { 0x80400040, 0xc0202d29, 0x008a8020, 0x00800080 },
diff --git a/src/shaders/post_processing/gen7/pa_to_pl2.g75b b/src/shaders/post_processing/gen7/pa_to_pl2.g75b
index 9b43e53..4e4139a 100644
--- a/src/shaders/post_processing/gen7/pa_to_pl2.g75b
+++ b/src/shaders/post_processing/gen7/pa_to_pl2.g75b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x000000d0 },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x000062ea },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000240 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -391,7 +391,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000230 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -428,7 +428,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000230 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -465,7 +465,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000230 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -503,9 +503,9 @@
    { 0x00400040, 0x22082da8, 0x006902c0, 0x02000200 },
    { 0x00600001, 0x23800021, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00021, 0x008d0360, 0x00000000 },
-   { 0x00200401, 0x238001a5, 0x004500e0, 0x00000000 },
-   { 0x00000401, 0x24a001a5, 0x000000e0, 0x00000000 },
-   { 0x00000c08, 0x24a43da5, 0x000000e2, 0x00010001 },
+   { 0x00200401, 0x238001a5, 0x00450120, 0x00000000 },
+   { 0x00000401, 0x24a001a5, 0x00000120, 0x00000000 },
+   { 0x00000c08, 0x24a43da5, 0x00000122, 0x00010001 },
    { 0x00000801, 0x23880061, 0x00000000, 0x000f000f },
    { 0x00000801, 0x24a80061, 0x00000000, 0x0007000f },
    { 0x80800040, 0xa4002d29, 0x00b18400, 0x00800080 },
diff --git a/src/shaders/post_processing/gen7/pa_to_pl2.g7b b/src/shaders/post_processing/gen7/pa_to_pl2.g7b
index d561c30..33335bb 100644
--- a/src/shaders/post_processing/gen7/pa_to_pl2.g7b
+++ b/src/shaders/post_processing/gen7/pa_to_pl2.g7b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x0000001a },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x000062ea },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000048 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -391,7 +391,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000046 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -428,7 +428,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000046 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -465,7 +465,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000046 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -503,9 +503,9 @@
    { 0x00400040, 0x22082da8, 0x006902c0, 0x02000200 },
    { 0x00600001, 0x23800021, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00021, 0x008d0360, 0x00000000 },
-   { 0x00200401, 0x238001a5, 0x004500e0, 0x00000000 },
-   { 0x00000401, 0x24a001a5, 0x000000e0, 0x00000000 },
-   { 0x00000c08, 0x24a43da5, 0x000000e2, 0x00010001 },
+   { 0x00200401, 0x238001a5, 0x00450120, 0x00000000 },
+   { 0x00000401, 0x24a001a5, 0x00000120, 0x00000000 },
+   { 0x00000c08, 0x24a43da5, 0x00000122, 0x00010001 },
    { 0x00000801, 0x23880061, 0x00000000, 0x000f000f },
    { 0x00000801, 0x24a80061, 0x00000000, 0x0007000f },
    { 0x80800040, 0xa4002d29, 0x00b18400, 0x00800080 },
diff --git a/src/shaders/post_processing/gen7/pa_to_pl3.g75b b/src/shaders/post_processing/gen7/pa_to_pl3.g75b
index 1be42b3..9e42f7e 100644
--- a/src/shaders/post_processing/gen7/pa_to_pl3.g75b
+++ b/src/shaders/post_processing/gen7/pa_to_pl3.g75b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x000000d0 },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x000062ea },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000240 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -391,7 +391,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000230 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -428,7 +428,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000230 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -465,7 +465,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000230 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -504,9 +504,9 @@
    { 0x00600001, 0x23800021, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00021, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x25c00021, 0x008d0360, 0x00000000 },
-   { 0x00200401, 0x238001a5, 0x004500e0, 0x00000000 },
-   { 0x00200408, 0x24a03da5, 0x004500e0, 0x00010001 },
-   { 0x00200408, 0x25c03da5, 0x004500e0, 0x00010001 },
+   { 0x00200401, 0x238001a5, 0x00450120, 0x00000000 },
+   { 0x00200408, 0x24a03da5, 0x00450120, 0x00010001 },
+   { 0x00200408, 0x25c03da5, 0x00450120, 0x00010001 },
    { 0x00000801, 0x23880061, 0x00000000, 0x000f000f },
    { 0x00000801, 0x24a80061, 0x00000000, 0x00070007 },
    { 0x00000801, 0x25c80061, 0x00000000, 0x00070007 },
diff --git a/src/shaders/post_processing/gen7/pa_to_pl3.g7b b/src/shaders/post_processing/gen7/pa_to_pl3.g7b
index ed0d629..ad9a1c3 100644
--- a/src/shaders/post_processing/gen7/pa_to_pl3.g7b
+++ b/src/shaders/post_processing/gen7/pa_to_pl3.g7b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x0000001a },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x000062ea },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000048 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -391,7 +391,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000046 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -428,7 +428,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000046 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -465,7 +465,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000046 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -504,9 +504,9 @@
    { 0x00600001, 0x23800021, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00021, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x25c00021, 0x008d0360, 0x00000000 },
-   { 0x00200401, 0x238001a5, 0x004500e0, 0x00000000 },
-   { 0x00200408, 0x24a03da5, 0x004500e0, 0x00010001 },
-   { 0x00200408, 0x25c03da5, 0x004500e0, 0x00010001 },
+   { 0x00200401, 0x238001a5, 0x00450120, 0x00000000 },
+   { 0x00200408, 0x24a03da5, 0x00450120, 0x00010001 },
+   { 0x00200408, 0x25c03da5, 0x00450120, 0x00010001 },
    { 0x00000801, 0x23880061, 0x00000000, 0x000f000f },
    { 0x00000801, 0x24a80061, 0x00000000, 0x00070007 },
    { 0x00000801, 0x25c80061, 0x00000000, 0x00070007 },
diff --git a/src/shaders/post_processing/gen7/pl2_to_pa.g75b b/src/shaders/post_processing/gen7/pl2_to_pa.g75b
index 5074bc2..589f1f8 100644
--- a/src/shaders/post_processing/gen7/pl2_to_pa.g75b
+++ b/src/shaders/post_processing/gen7/pl2_to_pa.g75b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x000000d0 },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x00006ea2 },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000290 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -396,7 +396,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000280 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -438,7 +438,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000280 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -480,7 +480,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000280 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -521,8 +521,8 @@
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400040, 0x22002da8, 0x006902c0, 0x00000000 },
    { 0x00400040, 0x22082e2c, 0x0069005c, 0x03a003a0 },
-   { 0x00000409, 0x23603da5, 0x000000e0, 0x00010001 },
-   { 0x00000c01, 0x236401a5, 0x000000e2, 0x00000000 },
+   { 0x00000409, 0x23603da5, 0x00000120, 0x00010001 },
+   { 0x00000c01, 0x236401a5, 0x00000122, 0x00000000 },
    { 0x00000801, 0x23680061, 0x00000000, 0x0001001f },
    { 0x80400040, 0xc0002d29, 0x008a8000, 0x00800080 },
    { 0x80400040, 0xc0202d29, 0x008a8020, 0x00800080 },
diff --git a/src/shaders/post_processing/gen7/pl2_to_pa.g7b b/src/shaders/post_processing/gen7/pl2_to_pa.g7b
index 053b837..1e6c104 100644
--- a/src/shaders/post_processing/gen7/pl2_to_pa.g7b
+++ b/src/shaders/post_processing/gen7/pl2_to_pa.g7b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x0000001a },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x00006ea2 },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000052 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -396,7 +396,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000050 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -438,7 +438,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000050 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -480,7 +480,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000050 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -521,8 +521,8 @@
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400040, 0x22002da8, 0x006902c0, 0x00000000 },
    { 0x00400040, 0x22082e2c, 0x0069005c, 0x03a003a0 },
-   { 0x00000409, 0x23603da5, 0x000000e0, 0x00010001 },
-   { 0x00000c01, 0x236401a5, 0x000000e2, 0x00000000 },
+   { 0x00000409, 0x23603da5, 0x00000120, 0x00010001 },
+   { 0x00000c01, 0x236401a5, 0x00000122, 0x00000000 },
    { 0x00000801, 0x23680061, 0x00000000, 0x0001001f },
    { 0x80400040, 0xc0002d29, 0x008a8000, 0x00800080 },
    { 0x80400040, 0xc0202d29, 0x008a8020, 0x00800080 },
diff --git a/src/shaders/post_processing/gen7/pl2_to_pl2.g75b b/src/shaders/post_processing/gen7/pl2_to_pl2.g75b
index c25432e..a6fd4c8 100644
--- a/src/shaders/post_processing/gen7/pl2_to_pl2.g75b
+++ b/src/shaders/post_processing/gen7/pl2_to_pl2.g75b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x000000d0 },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x00006ea2 },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000290 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -396,7 +396,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000280 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -438,7 +438,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000280 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -480,7 +480,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000280 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -523,9 +523,9 @@
    { 0x00400040, 0x22082da8, 0x006902c0, 0x02000200 },
    { 0x00600001, 0x23800021, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00021, 0x008d0360, 0x00000000 },
-   { 0x00200401, 0x238001a5, 0x004500e0, 0x00000000 },
-   { 0x00000401, 0x24a001a5, 0x000000e0, 0x00000000 },
-   { 0x00000c08, 0x24a43da5, 0x000000e2, 0x00010001 },
+   { 0x00200401, 0x238001a5, 0x00450120, 0x00000000 },
+   { 0x00000401, 0x24a001a5, 0x00000120, 0x00000000 },
+   { 0x00000c08, 0x24a43da5, 0x00000122, 0x00010001 },
    { 0x00000801, 0x23880061, 0x00000000, 0x000f000f },
    { 0x00000801, 0x24a80061, 0x00000000, 0x0007000f },
    { 0x80800040, 0xa4002d29, 0x00b18400, 0x00800080 },
diff --git a/src/shaders/post_processing/gen7/pl2_to_pl2.g7b b/src/shaders/post_processing/gen7/pl2_to_pl2.g7b
index 445ae01..1cf1b2f 100644
--- a/src/shaders/post_processing/gen7/pl2_to_pl2.g7b
+++ b/src/shaders/post_processing/gen7/pl2_to_pl2.g7b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x0000001a },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x00006ea2 },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000052 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -396,7 +396,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000050 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -438,7 +438,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000050 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -480,7 +480,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000050 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -523,9 +523,9 @@
    { 0x00400040, 0x22082da8, 0x006902c0, 0x02000200 },
    { 0x00600001, 0x23800021, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00021, 0x008d0360, 0x00000000 },
-   { 0x00200401, 0x238001a5, 0x004500e0, 0x00000000 },
-   { 0x00000401, 0x24a001a5, 0x000000e0, 0x00000000 },
-   { 0x00000c08, 0x24a43da5, 0x000000e2, 0x00010001 },
+   { 0x00200401, 0x238001a5, 0x00450120, 0x00000000 },
+   { 0x00000401, 0x24a001a5, 0x00000120, 0x00000000 },
+   { 0x00000c08, 0x24a43da5, 0x00000122, 0x00010001 },
    { 0x00000801, 0x23880061, 0x00000000, 0x000f000f },
    { 0x00000801, 0x24a80061, 0x00000000, 0x0007000f },
    { 0x80800040, 0xa4002d29, 0x00b18400, 0x00800080 },
diff --git a/src/shaders/post_processing/gen7/pl2_to_pl3.g75b b/src/shaders/post_processing/gen7/pl2_to_pl3.g75b
index 77bcdcb..f6fec4f 100644
--- a/src/shaders/post_processing/gen7/pl2_to_pl3.g75b
+++ b/src/shaders/post_processing/gen7/pl2_to_pl3.g75b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x000000d0 },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x00006ea2 },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000290 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -396,7 +396,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000280 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -438,7 +438,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000280 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -480,7 +480,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000280 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -524,9 +524,9 @@
    { 0x00600001, 0x23800021, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00021, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x25c00021, 0x008d0360, 0x00000000 },
-   { 0x00200401, 0x238001a5, 0x004500e0, 0x00000000 },
-   { 0x00200408, 0x24a03da5, 0x004500e0, 0x00010001 },
-   { 0x00200408, 0x25c03da5, 0x004500e0, 0x00010001 },
+   { 0x00200401, 0x238001a5, 0x00450120, 0x00000000 },
+   { 0x00200408, 0x24a03da5, 0x00450120, 0x00010001 },
+   { 0x00200408, 0x25c03da5, 0x00450120, 0x00010001 },
    { 0x00000801, 0x23880061, 0x00000000, 0x000f000f },
    { 0x00000801, 0x24a80061, 0x00000000, 0x00070007 },
    { 0x00000801, 0x25c80061, 0x00000000, 0x00070007 },
diff --git a/src/shaders/post_processing/gen7/pl2_to_pl3.g7b b/src/shaders/post_processing/gen7/pl2_to_pl3.g7b
index bec05ac..377b1bb 100644
--- a/src/shaders/post_processing/gen7/pl2_to_pl3.g7b
+++ b/src/shaders/post_processing/gen7/pl2_to_pl3.g7b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x0000001a },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x00006ea2 },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000052 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -396,7 +396,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000050 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -438,7 +438,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000050 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -480,7 +480,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000050 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -524,9 +524,9 @@
    { 0x00600001, 0x23800021, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00021, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x25c00021, 0x008d0360, 0x00000000 },
-   { 0x00200401, 0x238001a5, 0x004500e0, 0x00000000 },
-   { 0x00200408, 0x24a03da5, 0x004500e0, 0x00010001 },
-   { 0x00200408, 0x25c03da5, 0x004500e0, 0x00010001 },
+   { 0x00200401, 0x238001a5, 0x00450120, 0x00000000 },
+   { 0x00200408, 0x24a03da5, 0x00450120, 0x00010001 },
+   { 0x00200408, 0x25c03da5, 0x00450120, 0x00010001 },
    { 0x00000801, 0x23880061, 0x00000000, 0x000f000f },
    { 0x00000801, 0x24a80061, 0x00000000, 0x00070007 },
    { 0x00000801, 0x25c80061, 0x00000000, 0x00070007 },
diff --git a/src/shaders/post_processing/gen7/pl2_to_rgbx.g75b b/src/shaders/post_processing/gen7/pl2_to_rgbx.g75b
index 0337661..1d65bc5 100644
--- a/src/shaders/post_processing/gen7/pl2_to_rgbx.g75b
+++ b/src/shaders/post_processing/gen7/pl2_to_rgbx.g75b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x000000d0 },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x00006ea2 },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000290 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -396,7 +396,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000280 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -438,7 +438,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000280 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -480,7 +480,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000280 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -526,21 +526,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8811, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8001, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8011, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -553,21 +556,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8831, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8021, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8031, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -580,21 +586,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8851, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8041, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8051, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -607,21 +616,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8871, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8061, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8071, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -635,21 +647,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8811, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8001, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8011, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -662,21 +677,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8831, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8021, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8031, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -689,21 +707,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8851, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8041, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8051, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -716,21 +737,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8871, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8061, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8071, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -744,21 +768,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8811, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8001, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8011, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -771,21 +798,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8831, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8021, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8031, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -798,21 +828,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8851, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8041, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8051, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -825,21 +858,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8871, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8061, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8071, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -853,21 +889,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8811, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8001, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8011, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -880,21 +919,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8831, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8021, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8031, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -907,21 +949,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8851, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8041, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8051, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -934,21 +979,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8871, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8061, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8071, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -963,8 +1011,8 @@
    { 0x00010001, 0x22200109, 0x00000200, 0x00000000 },
    { 0x00010001, 0x22000108, 0x00000204, 0x00000000 },
    { 0x00010001, 0x22040128, 0x00000220, 0x00000000 },
-   { 0x00000409, 0x23603da5, 0x000000e0, 0x00020002 },
-   { 0x00000c01, 0x236401a5, 0x000000e2, 0x00000000 },
+   { 0x00000409, 0x23603da5, 0x00000120, 0x00020002 },
+   { 0x00000c01, 0x236401a5, 0x00000122, 0x00000000 },
    { 0x00000801, 0x23680061, 0x00000000, 0x0003001f },
    { 0x00400001, 0x22080108, 0x00690200, 0x00000000 },
    { 0x00600001, 0x23800021, 0x008d0360, 0x00000000 },
diff --git a/src/shaders/post_processing/gen7/pl2_to_rgbx.g7b b/src/shaders/post_processing/gen7/pl2_to_rgbx.g7b
index 540409d..7c38529 100644
--- a/src/shaders/post_processing/gen7/pl2_to_rgbx.g7b
+++ b/src/shaders/post_processing/gen7/pl2_to_rgbx.g7b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x0000001a },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x00006ea2 },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000052 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -396,7 +396,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000050 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -438,7 +438,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000050 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -480,7 +480,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000050 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -526,21 +526,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8811, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8001, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8011, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -553,21 +556,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8831, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8021, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8031, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -580,21 +586,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8851, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8041, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8051, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -607,21 +616,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8871, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8061, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8071, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -635,21 +647,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8811, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8001, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8011, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -662,21 +677,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8831, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8021, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8031, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -689,21 +707,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8851, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8041, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8051, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -716,21 +737,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8871, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8061, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8071, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -744,21 +768,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8811, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8001, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8011, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -771,21 +798,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8831, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8021, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8031, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -798,21 +828,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8851, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8041, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8051, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -825,21 +858,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8871, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8061, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8071, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -853,21 +889,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8811, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8001, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8011, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -880,21 +919,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8831, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8021, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8031, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -907,21 +949,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8851, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8041, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8051, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -934,21 +979,24 @@
    { 0x00600001, 0x24e0023d, 0x00ae8871, 0x00000000 },
    { 0x00600001, 0x2500023d, 0x00ae8061, 0x00000000 },
    { 0x00600001, 0x2520023d, 0x00ae8071, 0x00000000 },
-   { 0x00800040, 0x24c07fbd, 0x008d04c0, 0xc3000000 },
-   { 0x00800040, 0x25007fbd, 0x008d0500, 0xc3000000 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23807fbd, 0x008d0500, 0x3fb374bc },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbc, 0x008d04c0, 0xbeb020c5 },
-   { 0x00800048, 0x23c07fbd, 0x008d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x240003bc, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24007fbd, 0x008d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24807fbd, 0x008d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c07fbd, 0x008d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25007fbd, 0x008d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23807fbd, 0x008d0480, 0x437f0000 },
-   { 0x00800041, 0x23c07fbd, 0x008d04c0, 0x437f0000 },
-   { 0x00800041, 0x24007fbd, 0x008d0500, 0x437f0000 },
+   { 0x00800041, 0x24807fbd, 0x00200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c07fbd, 0x002004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25007fbd, 0x00200500, 0x3b8080c4 },
+   { 0x00800040, 0x248077bd, 0x00200480, 0x000000ec },
+   { 0x00800040, 0x24c077bd, 0x002004c0, 0x000000fc },
+   { 0x00800040, 0x250077bd, 0x00200500, 0x0000010c },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000e0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000e4 },
+   { 0x80800048, 0x238077bd, 0x008d0500, 0x000000e8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x000000f0 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c077bd, 0x008d0500, 0x000000f8 },
+   { 0x00800041, 0x240077bc, 0x008d0480, 0x00000100 },
+   { 0x00800048, 0x240077bc, 0x008d04c0, 0x00000104 },
+   { 0x80800048, 0x240077bd, 0x008d0500, 0x00000108 },
+   { 0x00800041, 0x23807fbd, 0x008d0380, 0x437f0000 },
+   { 0x00800041, 0x23c07fbd, 0x008d03c0, 0x437f0000 },
+   { 0x00800041, 0x24007fbd, 0x008d0400, 0x437f0000 },
    { 0x00800001, 0x454003ad, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x458003ad, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c003ad, 0x008d0400, 0x00000000 },
@@ -963,8 +1011,8 @@
    { 0x00010001, 0x22200109, 0x00000200, 0x00000000 },
    { 0x00010001, 0x22000108, 0x00000204, 0x00000000 },
    { 0x00010001, 0x22040128, 0x00000220, 0x00000000 },
-   { 0x00000409, 0x23603da5, 0x000000e0, 0x00020002 },
-   { 0x00000c01, 0x236401a5, 0x000000e2, 0x00000000 },
+   { 0x00000409, 0x23603da5, 0x00000120, 0x00020002 },
+   { 0x00000c01, 0x236401a5, 0x00000122, 0x00000000 },
    { 0x00000801, 0x23680061, 0x00000000, 0x0003001f },
    { 0x00400001, 0x22080108, 0x00690200, 0x00000000 },
    { 0x00600001, 0x23800021, 0x008d0360, 0x00000000 },
diff --git a/src/shaders/post_processing/gen7/pl3_to_pa.g75b b/src/shaders/post_processing/gen7/pl3_to_pa.g75b
index d11ab6d..0f7c498 100644
--- a/src/shaders/post_processing/gen7/pl3_to_pa.g75b
+++ b/src/shaders/post_processing/gen7/pl3_to_pa.g75b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x000000d0 },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x00006ea2 },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x000002c0 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -399,7 +399,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x000002b0 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -444,7 +444,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x000002b0 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -489,7 +489,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x000002b0 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -533,8 +533,8 @@
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400040, 0x22002da8, 0x006902c0, 0x00000000 },
    { 0x00400040, 0x22082e2c, 0x0069005c, 0x03a003a0 },
-   { 0x00000409, 0x23603da5, 0x000000e0, 0x00010001 },
-   { 0x00000c01, 0x236401a5, 0x000000e2, 0x00000000 },
+   { 0x00000409, 0x23603da5, 0x00000120, 0x00010001 },
+   { 0x00000c01, 0x236401a5, 0x00000122, 0x00000000 },
    { 0x00000801, 0x23680061, 0x00000000, 0x0001001f },
    { 0x80400040, 0xc0002d29, 0x008a8000, 0x00800080 },
    { 0x80400040, 0xc0202d29, 0x008a8020, 0x00800080 },
diff --git a/src/shaders/post_processing/gen7/pl3_to_pa.g7b b/src/shaders/post_processing/gen7/pl3_to_pa.g7b
index e1c3c05..5e46e34 100644
--- a/src/shaders/post_processing/gen7/pl3_to_pa.g7b
+++ b/src/shaders/post_processing/gen7/pl3_to_pa.g7b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x0000001a },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x00006ea2 },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000058 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -399,7 +399,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000056 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -444,7 +444,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000056 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -489,7 +489,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000056 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -533,8 +533,8 @@
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400040, 0x22002da8, 0x006902c0, 0x00000000 },
    { 0x00400040, 0x22082e2c, 0x0069005c, 0x03a003a0 },
-   { 0x00000409, 0x23603da5, 0x000000e0, 0x00010001 },
-   { 0x00000c01, 0x236401a5, 0x000000e2, 0x00000000 },
+   { 0x00000409, 0x23603da5, 0x00000120, 0x00010001 },
+   { 0x00000c01, 0x236401a5, 0x00000122, 0x00000000 },
    { 0x00000801, 0x23680061, 0x00000000, 0x0001001f },
    { 0x80400040, 0xc0002d29, 0x008a8000, 0x00800080 },
    { 0x80400040, 0xc0202d29, 0x008a8020, 0x00800080 },
diff --git a/src/shaders/post_processing/gen7/pl3_to_pl2.g75b b/src/shaders/post_processing/gen7/pl3_to_pl2.g75b
index 0cf2d5d..8aefed3 100644
--- a/src/shaders/post_processing/gen7/pl3_to_pl2.g75b
+++ b/src/shaders/post_processing/gen7/pl3_to_pl2.g75b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x000000d0 },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x00006ea2 },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x000002c0 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -399,7 +399,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x000002b0 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -444,7 +444,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x000002b0 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -489,7 +489,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x000002b0 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -535,9 +535,9 @@
    { 0x00400040, 0x22082da8, 0x006902c0, 0x02000200 },
    { 0x00600001, 0x23800021, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00021, 0x008d0360, 0x00000000 },
-   { 0x00200401, 0x238001a5, 0x004500e0, 0x00000000 },
-   { 0x00000401, 0x24a001a5, 0x000000e0, 0x00000000 },
-   { 0x00000c08, 0x24a43da5, 0x000000e2, 0x00010001 },
+   { 0x00200401, 0x238001a5, 0x00450120, 0x00000000 },
+   { 0x00000401, 0x24a001a5, 0x00000120, 0x00000000 },
+   { 0x00000c08, 0x24a43da5, 0x00000122, 0x00010001 },
    { 0x00000801, 0x23880061, 0x00000000, 0x000f000f },
    { 0x00000801, 0x24a80061, 0x00000000, 0x0007000f },
    { 0x80800040, 0xa4002d29, 0x00b18400, 0x00800080 },
diff --git a/src/shaders/post_processing/gen7/pl3_to_pl2.g7b b/src/shaders/post_processing/gen7/pl3_to_pl2.g7b
index 9b3a59c..3cd0fc1 100644
--- a/src/shaders/post_processing/gen7/pl3_to_pl2.g7b
+++ b/src/shaders/post_processing/gen7/pl3_to_pl2.g7b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x0000001a },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x00006ea2 },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000058 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -399,7 +399,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000056 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -444,7 +444,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000056 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -489,7 +489,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000056 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -535,9 +535,9 @@
    { 0x00400040, 0x22082da8, 0x006902c0, 0x02000200 },
    { 0x00600001, 0x23800021, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00021, 0x008d0360, 0x00000000 },
-   { 0x00200401, 0x238001a5, 0x004500e0, 0x00000000 },
-   { 0x00000401, 0x24a001a5, 0x000000e0, 0x00000000 },
-   { 0x00000c08, 0x24a43da5, 0x000000e2, 0x00010001 },
+   { 0x00200401, 0x238001a5, 0x00450120, 0x00000000 },
+   { 0x00000401, 0x24a001a5, 0x00000120, 0x00000000 },
+   { 0x00000c08, 0x24a43da5, 0x00000122, 0x00010001 },
    { 0x00000801, 0x23880061, 0x00000000, 0x000f000f },
    { 0x00000801, 0x24a80061, 0x00000000, 0x0007000f },
    { 0x80800040, 0xa4002d29, 0x00b18400, 0x00800080 },
diff --git a/src/shaders/post_processing/gen7/pl3_to_pl3.g75b b/src/shaders/post_processing/gen7/pl3_to_pl3.g75b
index 7d204f7..a11b132 100644
--- a/src/shaders/post_processing/gen7/pl3_to_pl3.g75b
+++ b/src/shaders/post_processing/gen7/pl3_to_pl3.g75b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x000000d0 },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x00006ea2 },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x000002c0 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -399,7 +399,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x000002b0 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -444,7 +444,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x000002b0 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -489,7 +489,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x000002b0 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -536,9 +536,9 @@
    { 0x00600001, 0x23800021, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00021, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x25c00021, 0x008d0360, 0x00000000 },
-   { 0x00200401, 0x238001a5, 0x004500e0, 0x00000000 },
-   { 0x00200408, 0x24a03da5, 0x004500e0, 0x00010001 },
-   { 0x00200408, 0x25c03da5, 0x004500e0, 0x00010001 },
+   { 0x00200401, 0x238001a5, 0x00450120, 0x00000000 },
+   { 0x00200408, 0x24a03da5, 0x00450120, 0x00010001 },
+   { 0x00200408, 0x25c03da5, 0x00450120, 0x00010001 },
    { 0x00000801, 0x23880061, 0x00000000, 0x000f000f },
    { 0x00000801, 0x24a80061, 0x00000000, 0x00070007 },
    { 0x00000801, 0x25c80061, 0x00000000, 0x00070007 },
diff --git a/src/shaders/post_processing/gen7/pl3_to_pl3.g7b b/src/shaders/post_processing/gen7/pl3_to_pl3.g7b
index 6929daa..1292798 100644
--- a/src/shaders/post_processing/gen7/pl3_to_pl3.g7b
+++ b/src/shaders/post_processing/gen7/pl3_to_pl3.g7b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x0000001a },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x00006ea2 },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000058 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -399,7 +399,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000056 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -444,7 +444,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000056 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -489,7 +489,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000056 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x044eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x0000d000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x00000001, 0x21d403bd, 0x00000228, 0x00000000 },
@@ -536,9 +536,9 @@
    { 0x00600001, 0x23800021, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00021, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x25c00021, 0x008d0360, 0x00000000 },
-   { 0x00200401, 0x238001a5, 0x004500e0, 0x00000000 },
-   { 0x00200408, 0x24a03da5, 0x004500e0, 0x00010001 },
-   { 0x00200408, 0x25c03da5, 0x004500e0, 0x00010001 },
+   { 0x00200401, 0x238001a5, 0x00450120, 0x00000000 },
+   { 0x00200408, 0x24a03da5, 0x00450120, 0x00010001 },
+   { 0x00200408, 0x25c03da5, 0x00450120, 0x00010001 },
    { 0x00000801, 0x23880061, 0x00000000, 0x000f000f },
    { 0x00000801, 0x24a80061, 0x00000000, 0x00070007 },
    { 0x00000801, 0x25c80061, 0x00000000, 0x00070007 },
diff --git a/src/shaders/post_processing/gen7/rgbx_to_nv12.g75b b/src/shaders/post_processing/gen7/rgbx_to_nv12.g75b
index 1cb9c44..6b4697c 100644
--- a/src/shaders/post_processing/gen7/rgbx_to_nv12.g75b
+++ b/src/shaders/post_processing/gen7/rgbx_to_nv12.g75b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x000000d0 },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x00006ea2 },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000240 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -391,7 +391,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000230 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -428,7 +428,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000230 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -465,7 +465,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000230 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -928,9 +928,9 @@
    { 0x00400040, 0x22082da8, 0x006902c0, 0x02000200 },
    { 0x00600001, 0x23800021, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00021, 0x008d0360, 0x00000000 },
-   { 0x00200401, 0x238001a5, 0x004500e0, 0x00000000 },
-   { 0x00000401, 0x24a001a5, 0x000000e0, 0x00000000 },
-   { 0x00000c08, 0x24a43da5, 0x000000e2, 0x00010001 },
+   { 0x00200401, 0x238001a5, 0x00450120, 0x00000000 },
+   { 0x00000401, 0x24a001a5, 0x00000120, 0x00000000 },
+   { 0x00000c08, 0x24a43da5, 0x00000122, 0x00010001 },
    { 0x00000801, 0x23880061, 0x00000000, 0x000f000f },
    { 0x00000801, 0x24a80061, 0x00000000, 0x0007000f },
    { 0x80800040, 0xa4002d29, 0x00b18400, 0x00800080 },
diff --git a/src/shaders/post_processing/gen7/rgbx_to_nv12.g7b b/src/shaders/post_processing/gen7/rgbx_to_nv12.g7b
index 5e11a68..5b624ce 100644
--- a/src/shaders/post_processing/gen7/rgbx_to_nv12.g7b
+++ b/src/shaders/post_processing/gen7/rgbx_to_nv12.g7b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200021, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400021, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x206077bd, 0x008d0060, 0x000000f0 },
-   { 0x00200001, 0x211401bd, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x206077bd, 0x008d0060, 0x00000130 },
+   { 0x00200001, 0x211401bd, 0x00450120, 0x00000000 },
    { 0x01600010, 0x20002e24, 0x0000005a, 0x00010001 },
    { 0x00000008, 0x22202d29, 0x00000044, 0x00000000 },
    { 0x00000005, 0x22202d29, 0x00000220, 0x00030003 },
@@ -325,21 +325,21 @@
    { 0x00000048, 0x20bc77bd, 0x0000009c, 0x00000114 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a00169, 0x00000000, 0xffffffff },
-   { 0x02000010, 0x20002d24, 0x020000e4, 0x00000000 },
-   { 0x02010010, 0x20002d24, 0x020000e6, 0x00000000 },
+   { 0x02000010, 0x20002d24, 0x02000124, 0x00000000 },
+   { 0x02010010, 0x20002d24, 0x02000126, 0x00000000 },
    { 0x00110220, 0x34001c00, 0x02001400, 0x0000001a },
    { 0x00000005, 0x23022d31, 0x00000044, 0x00030003 },
-   { 0x00000401, 0x233803bd, 0x000000f4, 0x00000000 },
+   { 0x00000401, 0x233803bd, 0x00000134, 0x00000000 },
    { 0x00000c01, 0x233003bd, 0x00000060, 0x00000000 },
    { 0x00000c01, 0x233403bd, 0x00000080, 0x00000000 },
    { 0x00000c01, 0x232803bd, 0x000000c0, 0x00000000 },
    { 0x00000801, 0x232c03bd, 0x000000a0, 0x00000000 },
    { 0x00000001, 0x240803bc, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24087fbc, 0x00000060, 0x41000000 },
-   { 0x00000448, 0x22e87fbd, 0x000000f4, 0x41e00000 },
+   { 0x00000448, 0x22e87fbd, 0x00000134, 0x41e00000 },
    { 0x00000c41, 0x22e47fbd, 0x00000080, 0x40800000 },
    { 0x00000001, 0x241003bc, 0x00000060, 0x00000000 },
-   { 0x00000c48, 0x22f07fbd, 0x000000f4, 0x41000000 },
+   { 0x00000c48, 0x22f07fbd, 0x00000134, 0x41000000 },
    { 0x00000801, 0x22f40061, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x2400036c, 0x00000000, 0x00006ea2 },
@@ -353,8 +353,8 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000048 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000401, 0x233c0021, 0x000000fc, 0x00000000 },
-   { 0x00000801, 0x23240121, 0x000000f8, 0x00000000 },
+   { 0x00000401, 0x233c0021, 0x0000013c, 0x00000000 },
+   { 0x00000801, 0x23240121, 0x00000138, 0x00000000 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -391,7 +391,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000046 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000001 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000001 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -428,7 +428,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000046 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000002 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000002 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -465,7 +465,7 @@
    { 0x00110220, 0x34001c00, 0x02001400, 0x00000046 },
    { 0x00000040, 0x22000c20, 0x000002f4, 0x050eb400 },
    { 0x00000001, 0x22080061, 0x00000000, 0x00000000 },
-   { 0x00000040, 0x23240d21, 0x000000f8, 0x00000003 },
+   { 0x00000040, 0x23240d21, 0x00000138, 0x00000003 },
    { 0x00600001, 0x22200021, 0x008d0320, 0x00000000 },
    { 0x00000001, 0x21d00109, 0x00000600, 0x00000000 },
    { 0x02000005, 0x20002d28, 0x00000046, 0x00020002 },
@@ -928,9 +928,9 @@
    { 0x00400040, 0x22082da8, 0x006902c0, 0x02000200 },
    { 0x00600001, 0x23800021, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00021, 0x008d0360, 0x00000000 },
-   { 0x00200401, 0x238001a5, 0x004500e0, 0x00000000 },
-   { 0x00000401, 0x24a001a5, 0x000000e0, 0x00000000 },
-   { 0x00000c08, 0x24a43da5, 0x000000e2, 0x00010001 },
+   { 0x00200401, 0x238001a5, 0x00450120, 0x00000000 },
+   { 0x00000401, 0x24a001a5, 0x00000120, 0x00000000 },
+   { 0x00000c08, 0x24a43da5, 0x00000122, 0x00010001 },
    { 0x00000801, 0x23880061, 0x00000000, 0x000f000f },
    { 0x00000801, 0x24a80061, 0x00000000, 0x0007000f },
    { 0x80800040, 0xa4002d29, 0x00b18400, 0x00800080 },
diff --git a/src/shaders/post_processing/gen8/EOT.g8a b/src/shaders/post_processing/gen8/EOT.g8a
index 72c3da3..f03f96c 100644
--- a/src/shaders/post_processing/gen8/EOT.g8a
+++ b/src/shaders/post_processing/gen8/EOT.g8a
@@ -137,7 +137,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -146,15 +146,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
diff --git a/src/shaders/post_processing/gen8/PA_AVS_Buf_0.g8a b/src/shaders/post_processing/gen8/PA_AVS_Buf_0.g8a
index 228b256..11acccb 100644
--- a/src/shaders/post_processing/gen8/PA_AVS_Buf_0.g8a
+++ b/src/shaders/post_processing/gen8/PA_AVS_Buf_0.g8a
@@ -137,7 +137,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -146,15 +146,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -412,13 +412,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
diff --git a/src/shaders/post_processing/gen8/PA_AVS_Buf_1.g8a b/src/shaders/post_processing/gen8/PA_AVS_Buf_1.g8a
index c93806d..246beec 100644
--- a/src/shaders/post_processing/gen8/PA_AVS_Buf_1.g8a
+++ b/src/shaders/post_processing/gen8/PA_AVS_Buf_1.g8a
@@ -137,7 +137,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -146,15 +146,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -412,13 +412,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
diff --git a/src/shaders/post_processing/gen8/PA_AVS_Buf_2.g8a b/src/shaders/post_processing/gen8/PA_AVS_Buf_2.g8a
index 2cfc90c..549bde6 100644
--- a/src/shaders/post_processing/gen8/PA_AVS_Buf_2.g8a
+++ b/src/shaders/post_processing/gen8/PA_AVS_Buf_2.g8a
@@ -137,7 +137,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -146,15 +146,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -412,13 +412,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
diff --git a/src/shaders/post_processing/gen8/PA_AVS_Buf_3.g8a b/src/shaders/post_processing/gen8/PA_AVS_Buf_3.g8a
index 0cbc4ba..ac9e631 100644
--- a/src/shaders/post_processing/gen8/PA_AVS_Buf_3.g8a
+++ b/src/shaders/post_processing/gen8/PA_AVS_Buf_3.g8a
@@ -137,7 +137,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -146,15 +146,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -412,13 +412,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
diff --git a/src/shaders/post_processing/gen8/PL2_AVS_Buf_0.g8a b/src/shaders/post_processing/gen8/PL2_AVS_Buf_0.g8a
index bbff22c..7463b3b 100644
--- a/src/shaders/post_processing/gen8/PL2_AVS_Buf_0.g8a
+++ b/src/shaders/post_processing/gen8/PL2_AVS_Buf_0.g8a
@@ -137,7 +137,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -146,15 +146,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -412,13 +412,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
diff --git a/src/shaders/post_processing/gen8/PL2_AVS_Buf_1.g8a b/src/shaders/post_processing/gen8/PL2_AVS_Buf_1.g8a
index e916576..89cc747 100644
--- a/src/shaders/post_processing/gen8/PL2_AVS_Buf_1.g8a
+++ b/src/shaders/post_processing/gen8/PL2_AVS_Buf_1.g8a
@@ -137,7 +137,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -146,15 +146,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -412,13 +412,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
diff --git a/src/shaders/post_processing/gen8/PL2_AVS_Buf_2.g8a b/src/shaders/post_processing/gen8/PL2_AVS_Buf_2.g8a
index ed51a19..b97657d 100644
--- a/src/shaders/post_processing/gen8/PL2_AVS_Buf_2.g8a
+++ b/src/shaders/post_processing/gen8/PL2_AVS_Buf_2.g8a
@@ -137,7 +137,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -146,15 +146,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -412,13 +412,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
diff --git a/src/shaders/post_processing/gen8/PL2_AVS_Buf_3.g8a b/src/shaders/post_processing/gen8/PL2_AVS_Buf_3.g8a
index 5b46bf7..4885155 100644
--- a/src/shaders/post_processing/gen8/PL2_AVS_Buf_3.g8a
+++ b/src/shaders/post_processing/gen8/PL2_AVS_Buf_3.g8a
@@ -137,7 +137,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -146,15 +146,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -412,13 +412,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
diff --git a/src/shaders/post_processing/gen8/PL3_AVS_Buf_0.g8a b/src/shaders/post_processing/gen8/PL3_AVS_Buf_0.g8a
index b5b85d5..f9c8688 100644
--- a/src/shaders/post_processing/gen8/PL3_AVS_Buf_0.g8a
+++ b/src/shaders/post_processing/gen8/PL3_AVS_Buf_0.g8a
@@ -137,7 +137,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -146,15 +146,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -412,13 +412,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
diff --git a/src/shaders/post_processing/gen8/PL3_AVS_Buf_1.g8a b/src/shaders/post_processing/gen8/PL3_AVS_Buf_1.g8a
index 8457ae1..2bfaadb 100644
--- a/src/shaders/post_processing/gen8/PL3_AVS_Buf_1.g8a
+++ b/src/shaders/post_processing/gen8/PL3_AVS_Buf_1.g8a
@@ -137,7 +137,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -146,15 +146,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -412,13 +412,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
diff --git a/src/shaders/post_processing/gen8/PL3_AVS_Buf_2.g8a b/src/shaders/post_processing/gen8/PL3_AVS_Buf_2.g8a
index 99b40fe..57c2df2 100644
--- a/src/shaders/post_processing/gen8/PL3_AVS_Buf_2.g8a
+++ b/src/shaders/post_processing/gen8/PL3_AVS_Buf_2.g8a
@@ -137,7 +137,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -146,15 +146,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -412,13 +412,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
diff --git a/src/shaders/post_processing/gen8/PL3_AVS_Buf_3.g8a b/src/shaders/post_processing/gen8/PL3_AVS_Buf_3.g8a
index 8659876..553da39 100644
--- a/src/shaders/post_processing/gen8/PL3_AVS_Buf_3.g8a
+++ b/src/shaders/post_processing/gen8/PL3_AVS_Buf_3.g8a
@@ -137,7 +137,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -146,15 +146,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -412,13 +412,13 @@
     .declare mubCALING_0X_34X_PAYLOAD	Base=r14.0	ElementSize=1		SrcRegion=<32;32,1>		DstRegion=<1>		Type=ub
 
 
-	.declare fSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
-	.declare udSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
-	.declare ub4SCALING_0X_34X_TEMP		Base=r9.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
-	.declare uwSCALING_0X_34X_TEMP		Base=r9.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+	.declare fSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=f
+	.declare udSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=4		SrcRegion=<8;8,1>		DstRegion=<1>		Type=ud
+	.declare ub4SCALING_0X_34X_TEMP		Base=r11.0	ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<1>		Type=ub
+	.declare uwSCALING_0X_34X_TEMP		Base=r11.0	ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
 	// Sampler ramp is used for Scaling 0X_0.34X
-	.declare	fSAMPLER_RAMP  		Base=r9.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
+	.declare	fSAMPLER_RAMP  		Base=r11.0 ElementSize=4 SrcRegion=<8;8,1> Type=f		// 1 GRFs, 8 elements
 
 
 	//#define rMSGDSC_UV    		r23.0
diff --git a/src/shaders/post_processing/gen8/RGB_to_YUV.g8a b/src/shaders/post_processing/gen8/RGB_to_YUV.g8a
index 2cda31e..ebea264 100644
--- a/src/shaders/post_processing/gen8/RGB_to_YUV.g8a
+++ b/src/shaders/post_processing/gen8/RGB_to_YUV.g8a
@@ -137,7 +137,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -146,15 +146,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
diff --git a/src/shaders/post_processing/gen8/Save_AVS_NV12.g8a b/src/shaders/post_processing/gen8/Save_AVS_NV12.g8a
index dcb7ce0..ae4999c 100644
--- a/src/shaders/post_processing/gen8/Save_AVS_NV12.g8a
+++ b/src/shaders/post_processing/gen8/Save_AVS_NV12.g8a
@@ -137,7 +137,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -146,15 +146,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -406,9 +406,9 @@
 	mov  (8) r28<1>:ud      r27<8;8,1>:ud
 	mov  (8) r37<1>:ud      r27<8;8,1>:ud
 
-	mov  (2) r28.0<1>:d     r7.0<2;2,1>:w                   		{ NoDDClr }  		//ORI Y (LUMA) 	= ORI
-	mov  (1) r37.0<1>:d     r7.0<0;1,0>:w                   		{ NoDDClr }  		//H ORI (CHROMA)	= H ORI
-	shr  (1) r37.1<1>:d     r7.1<0;1,0>:w            1:w  		{ NoDDClr, NoDDChk }  	//V ORI (CHROMA)	= V ORI/2
+	mov  (2) r28.0<1>:d     r9.0<2;2,1>:w                   		{ NoDDClr }  		//ORI Y (LUMA) 	= ORI
+	mov  (1) r37.0<1>:d     r9.0<0;1,0>:w                   		{ NoDDClr }  		//H ORI (CHROMA)	= H ORI
+	shr  (1) r37.1<1>:d     r9.1<0;1,0>:w            1:w  		{ NoDDClr, NoDDChk }  	//V ORI (CHROMA)	= V ORI/2
 
   	mov  (1) r28.2<1>:ud    0xF000F:ud	{ NoDDChk }  // Y Block width and height (16x16)
 	mov  (1) r37.2<1>:ud    0x7000F:ud  	{ NoDDChk }  // UV Block width and height(16x8)
diff --git a/src/shaders/post_processing/gen8/Save_AVS_PA.g8a b/src/shaders/post_processing/gen8/Save_AVS_PA.g8a
index 1cedac7..a8ddc09 100644
--- a/src/shaders/post_processing/gen8/Save_AVS_PA.g8a
+++ b/src/shaders/post_processing/gen8/Save_AVS_PA.g8a
@@ -138,7 +138,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -147,15 +147,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -392,8 +392,8 @@
 	add	(4)		a0.4<1>:w			r2.28<4;4,1>:ub    928:uw
 
 	/* X block origin. YUY2 or UYUV */
-    shl (1) r27.0<1>:d      r7.0<0;1,0>:w            1:w  			 { NoDDClr }            // H. block origin need to be 2 times
-    mov (1) r27.1<1>:d      r7.1<0;1,0>:w                 			 { NoDDClr, NoDDChk }   // Block origin (1st quadrant)
+    shl (1) r27.0<1>:d      r9.0<0;1,0>:w            1:w  			 { NoDDClr }            // H. block origin need to be 2 times
+    mov (1) r27.1<1>:d      r9.1<0;1,0>:w                 			 { NoDDClr, NoDDChk }   // Block origin (1st quadrant)
     mov (1) r27.2<1>:ud     0x1001F:ud  	 { NoDDChk }            // Block width and height (32x2)
 
 // Rounding
diff --git a/src/shaders/post_processing/gen8/Save_AVS_PL3.g8a b/src/shaders/post_processing/gen8/Save_AVS_PL3.g8a
index 417fd4f..572d2aa 100644
--- a/src/shaders/post_processing/gen8/Save_AVS_PL3.g8a
+++ b/src/shaders/post_processing/gen8/Save_AVS_PL3.g8a
@@ -138,7 +138,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -147,15 +147,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -412,9 +412,9 @@
 	mov  (8) r37<1>:ud      r27<8;8,1>:ud
 	mov  (8) r46<1>:ud      r27<8;8,1>:ud
 
-	mov  (2) r28.0<1>:d     r7.0<2;2,1>:w                   		{ NoDDClr }  //ORI Y (LUMA) = ORI
-	shr  (2) r37.0<1>:d     r7.0<2;2,1>:w            1:w  		{ NoDDClr }  //H/V ORI U 	= H/V ORI/2
-	shr  (2) r46.0<1>:d     r7.0<2;2,1>:w            1:w  		{ NoDDClr }  //H/V ORI V 	= H/V ORI/2
+	mov  (2) r28.0<1>:d     r9.0<2;2,1>:w                   		{ NoDDClr }  //ORI Y (LUMA) = ORI
+	shr  (2) r37.0<1>:d     r9.0<2;2,1>:w            1:w  		{ NoDDClr }  //H/V ORI U 	= H/V ORI/2
+	shr  (2) r46.0<1>:d     r9.0<2;2,1>:w            1:w  		{ NoDDClr }  //H/V ORI V 	= H/V ORI/2
 
   	mov  (1) r28.2<1>:ud    0xF000F:ud	{ NoDDChk }  // Y Block width and height (16x16)
 	mov  (1) r37.2<1>:ud     0x70007:ud  	{ NoDDChk }  // U Block width and height (8x8)
diff --git a/src/shaders/post_processing/gen8/Save_AVS_RGBX.g8a b/src/shaders/post_processing/gen8/Save_AVS_RGBX.g8a
index d2df8e4..fbf3543 100644
--- a/src/shaders/post_processing/gen8/Save_AVS_RGBX.g8a
+++ b/src/shaders/post_processing/gen8/Save_AVS_RGBX.g8a
@@ -137,7 +137,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -146,15 +146,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -411,8 +411,8 @@
 	(f0.0)	mov (1)	a0.0<1>:uw a0.2<0;1,0>:uw
 	(f0.0)	mov (1)	a0.2<1>:uw uwTemp0<0;1,0>
 
-    shl (1) r27.0<1>:d      r7.0<0;1,0>:w            2:w  			{ NoDDClr }       // H. block origin need to be quadrupled
-    mov (1) r27.1<1>:d      r7.1<0;1,0>:w                 			{ NoDDClr, NoDDChk }    // Block origin (1st quadrant)
+    shl (1) r27.0<1>:d      r9.0<0;1,0>:w            2:w  			{ NoDDClr }       // H. block origin need to be quadrupled
+    mov (1) r27.1<1>:d      r9.1<0;1,0>:w                 			{ NoDDClr, NoDDChk }    // Block origin (1st quadrant)
     mov (1) r27.2<1>:ud     0x3001F:ud  	{ NoDDChk }       // Block width and height (32x4)
 
     mov (4)   a0.4<1>:uw   a0.0<4;4,1>:uw         
diff --git a/src/shaders/post_processing/gen8/Set_AVS_Buf_0123_BGRA.g8a b/src/shaders/post_processing/gen8/Set_AVS_Buf_0123_BGRA.g8a
index 798564f..b1f7fb7 100644
--- a/src/shaders/post_processing/gen8/Set_AVS_Buf_0123_BGRA.g8a
+++ b/src/shaders/post_processing/gen8/Set_AVS_Buf_0123_BGRA.g8a
@@ -139,7 +139,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -148,15 +148,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
diff --git a/src/shaders/post_processing/gen8/Set_AVS_Buf_0123_PL2.g8a b/src/shaders/post_processing/gen8/Set_AVS_Buf_0123_PL2.g8a
index 1d38ae2..dcbe297 100644
--- a/src/shaders/post_processing/gen8/Set_AVS_Buf_0123_PL2.g8a
+++ b/src/shaders/post_processing/gen8/Set_AVS_Buf_0123_PL2.g8a
@@ -137,7 +137,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -146,15 +146,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
diff --git a/src/shaders/post_processing/gen8/Set_AVS_Buf_0123_PL3.g8a b/src/shaders/post_processing/gen8/Set_AVS_Buf_0123_PL3.g8a
index 0533666..292e687 100644
--- a/src/shaders/post_processing/gen8/Set_AVS_Buf_0123_PL3.g8a
+++ b/src/shaders/post_processing/gen8/Set_AVS_Buf_0123_PL3.g8a
@@ -137,7 +137,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -146,15 +146,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
diff --git a/src/shaders/post_processing/gen8/Set_AVS_Buf_0123_VYUA.g8a b/src/shaders/post_processing/gen8/Set_AVS_Buf_0123_VYUA.g8a
index 3573e2b..84f89f9 100644
--- a/src/shaders/post_processing/gen8/Set_AVS_Buf_0123_VYUA.g8a
+++ b/src/shaders/post_processing/gen8/Set_AVS_Buf_0123_VYUA.g8a
@@ -137,7 +137,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -146,15 +146,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
diff --git a/src/shaders/post_processing/gen8/Set_Layer_0.g8a b/src/shaders/post_processing/gen8/Set_Layer_0.g8a
index b1b574e..8219655 100644
--- a/src/shaders/post_processing/gen8/Set_Layer_0.g8a
+++ b/src/shaders/post_processing/gen8/Set_Layer_0.g8a
@@ -154,7 +154,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -163,15 +163,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -443,8 +443,8 @@
 	//Copy all AVS Payload data
 	// Setup Message Payload Header for 1st block of Media Sampler 8x8 (16x4 for IVB+)
         //currently the dx & dy is passed by Constant buffer (zero)
-        mov (1) r25.0<1>:f	  r7.6<0;1,0>:f			//NLAS dy
-	mov (1) r25.6<1>:f        r7.5<0;1,0>:f			//NLAS dx
+        mov (1) r25.0<1>:f	  r9.6<0;1,0>:f			//NLAS dy
+	mov (1) r25.6<1>:f        r9.5<0;1,0>:f			//NLAS dx
 	mov (1) r25.4<1>:f        r3.0<0;1,0>:f			//Step X
 	mov (1) r25.5<1>:f        r4.0<0;1,0>:f			//Step Y
 
@@ -464,14 +464,14 @@
     // Calculating X(8)
     mov (1)   acc0.2<1>:f           		r6.0<0;1,0>:f
     mac (1)   acc0.2<1>:f           		r3.0<0;1,0>:f          	8.0:f
-    mac (1)   r23.2<1>:f    	r7.5<0;1,0>:f     28.0:f		{ NoDDClr }
+    mac (1)   r23.2<1>:f    	r9.5<0;1,0>:f     28.0:f		{ NoDDClr }
 
     // Calculating Y(4)
     mul (1)   r23.1<1>:f   	r4.0<0;1,0>:f       4.0:f   	{ NoDDClr, NoDDChk }  //dY*4
 
     // Calculating dx(8)
     mov (1)   acc0.4<1>:f           r3.0<0;1,0>:f
-    mac (1)   r23.4<1>:f     r7.5<0;1,0>:f		8.0:f		{ NoDDClr, NoDDChk }
+    mac (1)   r23.4<1>:f     r9.5<0;1,0>:f		8.0:f		{ NoDDClr, NoDDChk }
 
 	// Binding Index
 	mov (1)	r23.5<1>:ud		0:ud							{ NoDDChk }
diff --git a/src/shaders/post_processing/gen8/VP_Setup.g8a b/src/shaders/post_processing/gen8/VP_Setup.g8a
index 95f5fe2..8ef15db 100644
--- a/src/shaders/post_processing/gen8/VP_Setup.g8a
+++ b/src/shaders/post_processing/gen8/VP_Setup.g8a
@@ -154,7 +154,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -163,15 +163,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -368,13 +368,13 @@ mov (8) r25<1>:ud 	r0.0<8;8,1>:ud
 mov (8) r26<1>:ud 	r0.0<8;8,1>:ud
 
 // Calculate StepX for all layers and overwrite it on the ratio
-	mul	(8)		r3.0<1>:f   r3.0<8;8,1>:f 	r7.4<0;1,0>:f				//StepX_ratio = StepX / VideoStepX
+	mul	(8)		r3.0<1>:f   r3.0<8;8,1>:f 	r9.4<0;1,0>:f				//StepX_ratio = StepX / VideoStepX
 
 	//Normalised Ratio of Horizontal step size with main video for all layers now becomes
 	//Normalised Horizontal step size for all layers
 
 // Calculate block origin for all layers and overwrite it on the frame origin
-	mov (2)	r8.5<1>:f						r7.0<2;2,1>:w		//Convert origin from word to float
+	mov (2)	r10.5<1>:f						r9.0<2;2,1>:w		//Convert origin from word to float
 
 	cmp.e.f0.0 	(1)	null<1>:d				r2.26<0;1,0>:ub 		1:uw
 
@@ -391,19 +391,19 @@ mov (8) r26<1>:ud 	r0.0<8;8,1>:ud
   // rotate 0 degree
 ROTATE_0_L0:  
     (-f0.0)mov	(1)	acc0.0<1>:f					   r6.0<0;1,0>:f
-    (-f0.0)mac	(1)	r6.0<1>:f    r3.0<0;1,0>:f		r8.5<0;1,0>:f
+    (-f0.0)mac	(1)	r6.0<1>:f    r3.0<0;1,0>:f		r10.5<0;1,0>:f
 
     mov	(1)	acc0.0<1>:f            r5.0<0;1,0>:f
-    mac	(1)	r5.0<1>:f    r4.0<0;1,0>:f		    r8.6<0;1,0>:f
+    mac	(1)	r5.0<1>:f    r4.0<0;1,0>:f		    r10.6<0;1,0>:f
     jmpi (1) END_SRC_BLOCK_ORIG_COMP_L0
 
   // rotate 90 degree
 ROTATE_90_L0:  
     (-f0.0)mov	(1)	acc0.0<1>:f            r6.0<0;1,0>:f
-    (-f0.0)mac	(1)	r6.0<1>:f    r3.0<0;1,0>:f		r8.6<0;1,0>:f
+    (-f0.0)mac	(1)	r6.0<1>:f    r3.0<0;1,0>:f		r10.6<0;1,0>:f
 
     mov (1) r16.0<1>:f    r2.0<0;1,0>:uw
-    add (1) r17.0<1>:f    -r8.5<0;1,0>:f               r16.0<0;1,0>:f
+    add (1) r17.0<1>:f    -r10.5<0;1,0>:f               r16.0<0;1,0>:f
     add (1) r17.0<1>:f    r17.0<0;1,0>:f        -16.0:f  	
 
     mov	(1)	acc0.0<1>:f							r5.0<0;1,0>:f
@@ -413,13 +413,13 @@ ROTATE_90_L0:
   // rotate 180 degree
 ROTATE_180_L0:  
     (-f0.0)mov (1) r16.0<1>:f    r2.0<0;1,0>:uw
-    (-f0.0)add (1) r17.0<1>:f    -r8.5<0;1,0>:f              r16.0<0;1,0>:f
+    (-f0.0)add (1) r17.0<1>:f    -r10.5<0;1,0>:f              r16.0<0;1,0>:f
     (-f0.0)add (1) r17.0<1>:f    r17.0<0;1,0>:f       -16.0:f  	
     (-f0.0)mov (1) acc0.0<1>:f             r6.0<0;1,0>:f
     (-f0.0)mac (1) r6.0<1>:f     r3.0<0;1,0>:f          r17.0<0;1,0>:f
 
     mov (1) r16.0<1>:f    r2.1<0;1,0>:uw	
-    add (1) r17.0<1>:f    -r8.6<0;1,0>:f                     r16.0<0;1,0>:f
+    add (1) r17.0<1>:f    -r10.6<0;1,0>:f                     r16.0<0;1,0>:f
     add (1) r17.0<1>:f    r17.0<0;1,0>:f              -16.0:f  	
     mov	(1)	acc0.0<1>:f             r5.0<0;1,0>:f
     mac	(1)	r5.0<1>:f     r4.0<0;1,0>:f                 r17.0<0;1,0>:f
@@ -428,13 +428,13 @@ ROTATE_180_L0:
   // rotate 270 degree
 ROTATE_270_L0:    
     (-f0.0)mov (1) r16.0<1>:f    r2.1<0;1,0>:uw	
-    (-f0.0)add (1) r17.0<1>:f    -r8.6<0;1,0>:f              r16.0<0;1,0>:f
+    (-f0.0)add (1) r17.0<1>:f    -r10.6<0;1,0>:f              r16.0<0;1,0>:f
     (-f0.0)add (1) r17.0<1>:f    r17.0<0;1,0>:f       -16.0:f  	
     (-f0.0)mov (1) acc0.0<1>:f             r6.0<0;1,0>:f
     (-f0.0)mac (1) r6.0<1>:f     r3.0<0;1,0>:f          r17.0<0;1,0>:f
 
     mov	(1)	acc0.0<1>:f                    r5.0<0;1,0>:f
-    mac	(1)	r5.0<1>:f            r4.0<0;1,0>:f          r8.5<0;1,0>:f
+    mac	(1)	r5.0<1>:f            r4.0<0;1,0>:f          r10.5<0;1,0>:f
 
 END_SRC_BLOCK_ORIG_COMP_L0:		
     nop	
diff --git a/src/shaders/post_processing/gen8/YUV_to_RGB.g8a b/src/shaders/post_processing/gen8/YUV_to_RGB.g8a
index 2b968d8..e1994f2 100644
--- a/src/shaders/post_processing/gen8/YUV_to_RGB.g8a
+++ b/src/shaders/post_processing/gen8/YUV_to_RGB.g8a
@@ -137,7 +137,7 @@
 //=======================================================================
 
 
-//r9-r17
+//r11-r17
 // Define temp space for any usages
 
 
@@ -146,15 +146,15 @@
 
 // temp space for rotation
 
-.declare fROBUF		  Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
+.declare fROBUF		  Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=f
 
-.declare udROBUF		Base=r9.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
+.declare udROBUF		Base=r11.0		ElementSize=4		SrcRegion=<8;8,1>		  DstRegion=<1>		Type=ud
 
-.declare uwROBUF		Base=r9.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
+.declare uwROBUF		Base=r11.0		ElementSize=2		SrcRegion=<16;16,1>		DstRegion=<1>		Type=uw
 
-.declare ubROBUF		Base=r9.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
+.declare ubROBUF		Base=r11.0		ElementSize=1		SrcRegion=<16;16,1>		DstRegion=<1>		Type=ub
 
-.declare ub4ROBUF 	Base=r9.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
+.declare ub4ROBUF 	Base=r11.0		ElementSize=1		SrcRegion=<32;8,4>		DstRegion=<4>		Type=ub
 
 
 // End of common.inc
@@ -364,27 +364,29 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 1]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 17]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (8) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac   (8) acc1.0<1>:f		  fBUFFER_U(1, 0)<8;8,1>	-0.344f
-	mac   (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
-	
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+	mac.sat (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	r7.2<0;1,0>:f
 	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
@@ -403,28 +405,29 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 33]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 49]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac	(16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (8) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac   (8) acc1.0<1>:f		  fBUFFER_U(1, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+	mac.sat (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	r7.2<0;1,0>:f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
-	
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
@@ -441,27 +444,29 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 65]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 81]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac	(16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (8) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac   (8) acc1.0<1>:f		  fBUFFER_U(1, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+	mac.sat (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	r7.2<0;1,0>:f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 	
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
@@ -478,27 +483,29 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 97]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 113]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac	(16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (8) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac   (8) acc1.0<1>:f		  fBUFFER_U(1, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+	mac.sat (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	r7.2<0;1,0>:f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
@@ -518,32 +525,33 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 1]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 17]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (8) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac   (8) acc1.0<1>:f		  fBUFFER_U(1, 0)<8;8,1>	-0.344f
-	mac   (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
-	
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+	mac.sat (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	r7.2<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
 	mov   (16) wTempB(0, 0)<2>	  fBUFFER_B(0, 0)<8;8,1>
-	 	
 	mov   (16) r[a0.1,1]<2>:ub	  ubTempR(0, 0)<32;8,4>
 	mov   (16) r[a0.2,1]<2>:ub	  ubTempG(0, 0)<32;8,4>	
 	mov   (16) r[a0.0,1]<2>:ub	  ubTempB(0, 0)<32;8,4>	
@@ -557,28 +565,29 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 33]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 49]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac	(16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (8) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac   (8) acc1.0<1>:f		  fBUFFER_U(1, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+	mac.sat (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	r7.2<0;1,0>:f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
-	
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
@@ -595,28 +604,30 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 65]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 81]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac	(16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (8) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac   (8) acc1.0<1>:f		  fBUFFER_U(1, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+	mac.sat (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	r7.2<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
-	
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
 	mov   (16) wTempB(0, 0)<2>	  fBUFFER_B(0, 0)<8;8,1>
@@ -632,27 +643,29 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 97]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 113]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac	(16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (8) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac   (8) acc1.0<1>:f		  fBUFFER_U(1, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+	mac.sat (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	r7.2<0;1,0>:f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
@@ -672,32 +685,33 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 1]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 17]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (8) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac   (8) acc1.0<1>:f		  fBUFFER_U(1, 0)<8;8,1>	-0.344f
-	mac   (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
-	
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+	mac.sat (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	r7.2<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
 	mov   (16) wTempB(0, 0)<2>	  fBUFFER_B(0, 0)<8;8,1>
-	 	
 	mov   (16) r[a0.1,1]<2>:ub	  ubTempR(0, 0)<32;8,4>
 	mov   (16) r[a0.2,1]<2>:ub	  ubTempG(0, 0)<32;8,4>	
 	mov   (16) r[a0.0,1]<2>:ub	  ubTempB(0, 0)<32;8,4>	
@@ -711,28 +725,29 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 33]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 49]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac	(16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (8) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac   (8) acc1.0<1>:f		  fBUFFER_U(1, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+	mac.sat (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	r7.2<0;1,0>:f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
-	
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
@@ -749,27 +764,29 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 65]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 81]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac	(16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (8) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac   (8) acc1.0<1>:f		  fBUFFER_U(1, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+	mac.sat (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	r7.2<0;1,0>:f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 	
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
@@ -786,27 +803,29 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 97]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 113]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac	(16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (8) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac   (8) acc1.0<1>:f		  fBUFFER_U(1, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+	mac.sat (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	r7.2<0;1,0>:f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
@@ -826,32 +845,33 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 1]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 17]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (8) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac   (8) acc1.0<1>:f		  fBUFFER_U(1, 0)<8;8,1>	-0.344f
-	mac   (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
-	
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+	mac.sat (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	r7.2<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
 	mov   (16) wTempB(0, 0)<2>	  fBUFFER_B(0, 0)<8;8,1>
-	 	
 	mov   (16) r[a0.1,1]<2>:ub	  ubTempR(0, 0)<32;8,4>
 	mov   (16) r[a0.2,1]<2>:ub	  ubTempG(0, 0)<32;8,4>	
 	mov   (16) r[a0.0,1]<2>:ub	  ubTempB(0, 0)<32;8,4>	
@@ -865,28 +885,29 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 33]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 49]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac	(16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (8) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac   (8) acc1.0<1>:f		  fBUFFER_U(1, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+	mac.sat (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	r7.2<0;1,0>:f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
-	
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
@@ -903,28 +924,30 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 65]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 81]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (8) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac   (8) acc1.0<1>:f		  fBUFFER_U(1, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+	mac.sat (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	r7.2<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
-	
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
 	mov   (16) wTempB(0, 0)<2>	  fBUFFER_B(0, 0)<8;8,1>
@@ -940,27 +963,29 @@
         mov   (8) fBUFFER_V(0, 0)<1>	  r[a0.0, 97]<16;8,2>:ub           
         mov   (8) fBUFFER_V(1, 0)<1>	  r[a0.0, 113]<16;8,2>:ub           
 
-	add   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	-128.0f 
-	add   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-128.0f
+        mul   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            0.0039216f
+        mul   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            0.0039216f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac	(16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	1.402f
-	
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac   (8) acc0.0<1>:f		  fBUFFER_U(0, 0)<8;8,1>	-0.344f
-	mac   (8) acc1.0<1>:f		  fBUFFER_U(1, 0)<8;8,1>	-0.344f
-	mac (16) fBUFFER_G(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	-0.714f
+        add   (16) fBUFFER_Y(0, 0)<1>     fBUFFER_Y(0, 0)<1>            r7.3<0;1,0>:f
+        add   (16) fBUFFER_U(0, 0)<1>     fBUFFER_U(0, 0)<1>            r7.7<0;1,0>:f
+        add   (16) fBUFFER_V(0, 0)<1>     fBUFFER_V(0, 0)<1>            r8.3<0;1,0>:f
 
-	mov   (16) acc0.0<1>:f		  fBUFFER_Y(0, 0)<8;8,1>
-	mac (16) fBUFFER_B(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	1.772f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.1<0;1,0>:f
+	mac.sat (16) fBUFFER_R(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	r7.2<0;1,0>:f
 
-	mul.sat   (16) fBUFFER_Y(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_U(0, 0)<1>	  fBUFFER_G(0, 0)<8;8,1>	0.0039216f
-	mul.sat   (16) fBUFFER_V(0, 0)<1>	  fBUFFER_B(0, 0)<8;8,1>	0.0039216f
-	
-	mul	  (16) fBUFFER_R(0, 0)<1>	  fBUFFER_Y(0, 0)<8;8,1>	255.0f
-	mul   	  (16) fBUFFER_G(0, 0)<1>	  fBUFFER_U(0, 0)<8;8,1>	255.0f
-	mul	  (16) fBUFFER_B(0, 0)<1>	  fBUFFER_V(0, 0)<8;8,1>	255.0f
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r7.4<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r7.5<0;1,0>:f
+        mac.sat (16) fBUFFER_G(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r7.6<0;1,0>:f
+
+        mul   (16) acc0.0<1>:f            fBUFFER_Y(0, 0)<8;8,1>        r8.0<0;1,0>:f
+        mac   (16) acc0.0<1>:f            fBUFFER_U(0, 0)<8;8,1>        r8.1<0;1,0>:f
+        mac.sat (16) fBUFFER_B(0, 0)<1>   fBUFFER_V(0, 0)<8;8,1>        r8.2<0;1,0>:f
+
+        mul   (16) fBUFFER_R(0, 0)<1>	  fBUFFER_R(0, 0)<8;8,1>	255.0f
+        mul   (16) fBUFFER_G(0, 0)<1>     fBUFFER_G(0, 0)<8;8,1>        255.0f
+        mul   (16) fBUFFER_B(0, 0)<1>     fBUFFER_B(0, 0)<8;8,1>        255.0f
 
 	mov   (16) wTempR(0, 0)<2>	  fBUFFER_R(0, 0)<8;8,1> 	
 	mov   (16) wTempG(0, 0)<2>	  fBUFFER_G(0, 0)<8;8,1> 	
diff --git a/src/shaders/post_processing/gen8/pa_to_pa.g8b b/src/shaders/post_processing/gen8/pa_to_pa.g8b
index 76fe27a..5a92f0a 100644
--- a/src/shaders/post_processing/gen8/pa_to_pa.g8b
+++ b/src/shaders/post_processing/gen8/pa_to_pa.g8b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400208, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x000000f0 },
-   { 0x00200001, 0x21141ae8, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x00000130 },
+   { 0x00200001, 0x21541ae8, 0x00450120, 0x00000000 },
    { 0x01000010, 0x20002220, 0x1600005a, 0x00010001 },
    { 0x00000008, 0x22201248, 0x16000044, 0x00000000 },
    { 0x00000005, 0x22201248, 0x16000220, 0x00030003 },
@@ -13,41 +13,41 @@
    { 0x01000010, 0x20001261, 0x16000220, 0x00030003 },
    { 0x00010020, 0x34000005, 0x0e001400, 0x00000180 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000114 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000154 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000118 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000158 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x000001a0 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000118 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000158 },
    { 0x00000001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000120 },
    { 0x00110001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000070 },
    { 0x00110001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000114 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000154 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a01648, 0x10000000, 0xffffffff },
    { 0x00000005, 0x23021288, 0x16000044, 0x00030003 },
-   { 0x00000001, 0x23203ae8, 0x000000f8, 0x00000000 },
-   { 0x00000001, 0x23383ae8, 0x000000f4, 0x00000000 },
+   { 0x00000001, 0x23203ae8, 0x00000138, 0x00000000 },
+   { 0x00000001, 0x23383ae8, 0x00000134, 0x00000000 },
    { 0x00000001, 0x23303ae8, 0x00000060, 0x00000000 },
    { 0x00000001, 0x23343ae8, 0x00000080, 0x00000000 },
    { 0x00000001, 0x23283ae8, 0x000000c0, 0x00000000 },
@@ -56,10 +56,10 @@
    { 0x00000040, 0x233c0208, 0x0600033c, 0x08000000 },
    { 0x00000001, 0x24083ae0, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24083ae0, 0x3e000060, 0x41000000 },
-   { 0x00000248, 0x22e83ae8, 0x3e0000f4, 0x41e00000 },
+   { 0x00000248, 0x22e83ae8, 0x3e000134, 0x41e00000 },
    { 0x00000641, 0x22e43ae8, 0x3e000080, 0x40800000 },
    { 0x00000001, 0x24103ae0, 0x00000060, 0x00000000 },
-   { 0x00000648, 0x22f03ae8, 0x3e0000f4, 0x41000000 },
+   { 0x00000648, 0x22f03ae8, 0x3e000134, 0x41000000 },
    { 0x00000401, 0x22f40608, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x24003660, 0x30000000, 0x000062ea },
@@ -103,8 +103,8 @@
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400040, 0x22001a40, 0x166902c0, 0x00000000 },
    { 0x00400040, 0x22082260, 0x1669005c, 0x03a003a0 },
-   { 0x00000209, 0x23601a28, 0x1e0000e0, 0x00010001 },
-   { 0x00000601, 0x23641a28, 0x000000e2, 0x00000000 },
+   { 0x00000209, 0x23601a28, 0x1e000120, 0x00010001 },
+   { 0x00000601, 0x23641a28, 0x00000122, 0x00000000 },
    { 0x00000401, 0x23680608, 0x00000000, 0x0001001f },
    { 0x80400040, 0xc0001248, 0x168a8000, 0x00800080 },
    { 0x80400040, 0xc0201248, 0x168a8020, 0x00800080 },
diff --git a/src/shaders/post_processing/gen8/pa_to_pl2.g8b b/src/shaders/post_processing/gen8/pa_to_pl2.g8b
index 3282c51..19d4ff0 100644
--- a/src/shaders/post_processing/gen8/pa_to_pl2.g8b
+++ b/src/shaders/post_processing/gen8/pa_to_pl2.g8b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400208, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x000000f0 },
-   { 0x00200001, 0x21141ae8, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x00000130 },
+   { 0x00200001, 0x21541ae8, 0x00450120, 0x00000000 },
    { 0x01000010, 0x20002220, 0x1600005a, 0x00010001 },
    { 0x00000008, 0x22201248, 0x16000044, 0x00000000 },
    { 0x00000005, 0x22201248, 0x16000220, 0x00030003 },
@@ -13,41 +13,41 @@
    { 0x01000010, 0x20001261, 0x16000220, 0x00030003 },
    { 0x00010020, 0x34000005, 0x0e001400, 0x00000180 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000114 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000154 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000118 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000158 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x000001a0 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000118 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000158 },
    { 0x00000001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000120 },
    { 0x00110001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000070 },
    { 0x00110001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000114 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000154 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a01648, 0x10000000, 0xffffffff },
    { 0x00000005, 0x23021288, 0x16000044, 0x00030003 },
-   { 0x00000001, 0x23203ae8, 0x000000f8, 0x00000000 },
-   { 0x00000001, 0x23383ae8, 0x000000f4, 0x00000000 },
+   { 0x00000001, 0x23203ae8, 0x00000138, 0x00000000 },
+   { 0x00000001, 0x23383ae8, 0x00000134, 0x00000000 },
    { 0x00000001, 0x23303ae8, 0x00000060, 0x00000000 },
    { 0x00000001, 0x23343ae8, 0x00000080, 0x00000000 },
    { 0x00000001, 0x23283ae8, 0x000000c0, 0x00000000 },
@@ -56,10 +56,10 @@
    { 0x00000040, 0x233c0208, 0x0600033c, 0x08000000 },
    { 0x00000001, 0x24083ae0, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24083ae0, 0x3e000060, 0x41000000 },
-   { 0x00000248, 0x22e83ae8, 0x3e0000f4, 0x41e00000 },
+   { 0x00000248, 0x22e83ae8, 0x3e000134, 0x41e00000 },
    { 0x00000641, 0x22e43ae8, 0x3e000080, 0x40800000 },
    { 0x00000001, 0x24103ae0, 0x00000060, 0x00000000 },
-   { 0x00000648, 0x22f03ae8, 0x3e0000f4, 0x41000000 },
+   { 0x00000648, 0x22f03ae8, 0x3e000134, 0x41000000 },
    { 0x00000401, 0x22f40608, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x24003660, 0x30000000, 0x000062ea },
@@ -105,9 +105,9 @@
    { 0x00400040, 0x22081a40, 0x166902c0, 0x02000200 },
    { 0x00600001, 0x23800208, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00208, 0x008d0360, 0x00000000 },
-   { 0x00200201, 0x23801a28, 0x004500e0, 0x00000000 },
-   { 0x00000201, 0x24a01a28, 0x000000e0, 0x00000000 },
-   { 0x00000608, 0x24a41a28, 0x1e0000e2, 0x00010001 },
+   { 0x00200201, 0x23801a28, 0x00450120, 0x00000000 },
+   { 0x00000201, 0x24a01a28, 0x00000120, 0x00000000 },
+   { 0x00000608, 0x24a41a28, 0x1e000122, 0x00010001 },
    { 0x00000401, 0x23880608, 0x00000000, 0x000f000f },
    { 0x00000401, 0x24a80608, 0x00000000, 0x0007000f },
    { 0x80800040, 0xa2001248, 0x16b18200, 0x00800080 },
diff --git a/src/shaders/post_processing/gen8/pa_to_pl3.g8b b/src/shaders/post_processing/gen8/pa_to_pl3.g8b
index 3d1d087..255ea81 100644
--- a/src/shaders/post_processing/gen8/pa_to_pl3.g8b
+++ b/src/shaders/post_processing/gen8/pa_to_pl3.g8b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400208, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x000000f0 },
-   { 0x00200001, 0x21141ae8, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x00000130 },
+   { 0x00200001, 0x21541ae8, 0x00450120, 0x00000000 },
    { 0x01000010, 0x20002220, 0x1600005a, 0x00010001 },
    { 0x00000008, 0x22201248, 0x16000044, 0x00000000 },
    { 0x00000005, 0x22201248, 0x16000220, 0x00030003 },
@@ -13,41 +13,41 @@
    { 0x01000010, 0x20001261, 0x16000220, 0x00030003 },
    { 0x00010020, 0x34000005, 0x0e001400, 0x00000180 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000114 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000154 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000118 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000158 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x000001a0 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000118 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000158 },
    { 0x00000001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000120 },
    { 0x00110001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000070 },
    { 0x00110001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000114 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000154 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a01648, 0x10000000, 0xffffffff },
    { 0x00000005, 0x23021288, 0x16000044, 0x00030003 },
-   { 0x00000001, 0x23203ae8, 0x000000f8, 0x00000000 },
-   { 0x00000001, 0x23383ae8, 0x000000f4, 0x00000000 },
+   { 0x00000001, 0x23203ae8, 0x00000138, 0x00000000 },
+   { 0x00000001, 0x23383ae8, 0x00000134, 0x00000000 },
    { 0x00000001, 0x23303ae8, 0x00000060, 0x00000000 },
    { 0x00000001, 0x23343ae8, 0x00000080, 0x00000000 },
    { 0x00000001, 0x23283ae8, 0x000000c0, 0x00000000 },
@@ -56,10 +56,10 @@
    { 0x00000040, 0x233c0208, 0x0600033c, 0x08000000 },
    { 0x00000001, 0x24083ae0, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24083ae0, 0x3e000060, 0x41000000 },
-   { 0x00000248, 0x22e83ae8, 0x3e0000f4, 0x41e00000 },
+   { 0x00000248, 0x22e83ae8, 0x3e000134, 0x41e00000 },
    { 0x00000641, 0x22e43ae8, 0x3e000080, 0x40800000 },
    { 0x00000001, 0x24103ae0, 0x00000060, 0x00000000 },
-   { 0x00000648, 0x22f03ae8, 0x3e0000f4, 0x41000000 },
+   { 0x00000648, 0x22f03ae8, 0x3e000134, 0x41000000 },
    { 0x00000401, 0x22f40608, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x24003660, 0x30000000, 0x000062ea },
@@ -106,9 +106,9 @@
    { 0x00600001, 0x23800208, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00208, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x25c00208, 0x008d0360, 0x00000000 },
-   { 0x00200201, 0x23801a28, 0x004500e0, 0x00000000 },
-   { 0x00200208, 0x24a01a28, 0x1e4500e0, 0x00010001 },
-   { 0x00200208, 0x25c01a28, 0x1e4500e0, 0x00010001 },
+   { 0x00200201, 0x23801a28, 0x00450120, 0x00000000 },
+   { 0x00200208, 0x24a01a28, 0x1e450120, 0x00010001 },
+   { 0x00200208, 0x25c01a28, 0x1e450120, 0x00010001 },
    { 0x00000401, 0x23880608, 0x00000000, 0x000f000f },
    { 0x00000401, 0x24a80608, 0x00000000, 0x00070007 },
    { 0x00000401, 0x25c80608, 0x00000000, 0x00070007 },
diff --git a/src/shaders/post_processing/gen8/pl2_to_pa.g8b b/src/shaders/post_processing/gen8/pl2_to_pa.g8b
index 0c0cda1..5a3dde5 100644
--- a/src/shaders/post_processing/gen8/pl2_to_pa.g8b
+++ b/src/shaders/post_processing/gen8/pl2_to_pa.g8b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400208, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x000000f0 },
-   { 0x00200001, 0x21141ae8, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x00000130 },
+   { 0x00200001, 0x21541ae8, 0x00450120, 0x00000000 },
    { 0x01000010, 0x20002220, 0x1600005a, 0x00010001 },
    { 0x00000008, 0x22201248, 0x16000044, 0x00000000 },
    { 0x00000005, 0x22201248, 0x16000220, 0x00030003 },
@@ -13,41 +13,41 @@
    { 0x01000010, 0x20001261, 0x16000220, 0x00030003 },
    { 0x00010020, 0x34000005, 0x0e001400, 0x00000180 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000114 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000154 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000118 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000158 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x000001a0 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000118 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000158 },
    { 0x00000001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000120 },
    { 0x00110001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000070 },
    { 0x00110001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000114 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000154 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a01648, 0x10000000, 0xffffffff },
    { 0x00000005, 0x23021288, 0x16000044, 0x00030003 },
-   { 0x00000001, 0x23203ae8, 0x000000f8, 0x00000000 },
-   { 0x00000001, 0x23383ae8, 0x000000f4, 0x00000000 },
+   { 0x00000001, 0x23203ae8, 0x00000138, 0x00000000 },
+   { 0x00000001, 0x23383ae8, 0x00000134, 0x00000000 },
    { 0x00000001, 0x23303ae8, 0x00000060, 0x00000000 },
    { 0x00000001, 0x23343ae8, 0x00000080, 0x00000000 },
    { 0x00000001, 0x23283ae8, 0x000000c0, 0x00000000 },
@@ -56,10 +56,10 @@
    { 0x00000040, 0x233c0208, 0x0600033c, 0x08000000 },
    { 0x00000001, 0x24083ae0, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24083ae0, 0x3e000060, 0x41000000 },
-   { 0x00000248, 0x22e83ae8, 0x3e0000f4, 0x41e00000 },
+   { 0x00000248, 0x22e83ae8, 0x3e000134, 0x41e00000 },
    { 0x00000641, 0x22e43ae8, 0x3e000080, 0x40800000 },
    { 0x00000001, 0x24103ae0, 0x00000060, 0x00000000 },
-   { 0x00000648, 0x22f03ae8, 0x3e0000f4, 0x41000000 },
+   { 0x00000648, 0x22f03ae8, 0x3e000134, 0x41000000 },
    { 0x00000401, 0x22f40608, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x24003660, 0x30000000, 0x00006ea2 },
@@ -111,8 +111,8 @@
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400040, 0x22001a40, 0x166902c0, 0x00000000 },
    { 0x00400040, 0x22082260, 0x1669005c, 0x03a003a0 },
-   { 0x00000209, 0x23601a28, 0x1e0000e0, 0x00010001 },
-   { 0x00000601, 0x23641a28, 0x000000e2, 0x00000000 },
+   { 0x00000209, 0x23601a28, 0x1e000120, 0x00010001 },
+   { 0x00000601, 0x23641a28, 0x00000122, 0x00000000 },
    { 0x00000401, 0x23680608, 0x00000000, 0x0001001f },
    { 0x80400040, 0xc0001248, 0x168a8000, 0x00800080 },
    { 0x80400040, 0xc0201248, 0x168a8020, 0x00800080 },
diff --git a/src/shaders/post_processing/gen8/pl2_to_pl2.g8b b/src/shaders/post_processing/gen8/pl2_to_pl2.g8b
index fa72882..c34fdea 100644
--- a/src/shaders/post_processing/gen8/pl2_to_pl2.g8b
+++ b/src/shaders/post_processing/gen8/pl2_to_pl2.g8b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400208, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x000000f0 },
-   { 0x00200001, 0x21141ae8, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x00000130 },
+   { 0x00200001, 0x21541ae8, 0x00450120, 0x00000000 },
    { 0x01000010, 0x20002220, 0x1600005a, 0x00010001 },
    { 0x00000008, 0x22201248, 0x16000044, 0x00000000 },
    { 0x00000005, 0x22201248, 0x16000220, 0x00030003 },
@@ -13,41 +13,41 @@
    { 0x01000010, 0x20001261, 0x16000220, 0x00030003 },
    { 0x00010020, 0x34000005, 0x0e001400, 0x00000180 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000114 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000154 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000118 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000158 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x000001a0 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000118 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000158 },
    { 0x00000001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000120 },
    { 0x00110001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000070 },
    { 0x00110001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000114 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000154 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a01648, 0x10000000, 0xffffffff },
    { 0x00000005, 0x23021288, 0x16000044, 0x00030003 },
-   { 0x00000001, 0x23203ae8, 0x000000f8, 0x00000000 },
-   { 0x00000001, 0x23383ae8, 0x000000f4, 0x00000000 },
+   { 0x00000001, 0x23203ae8, 0x00000138, 0x00000000 },
+   { 0x00000001, 0x23383ae8, 0x00000134, 0x00000000 },
    { 0x00000001, 0x23303ae8, 0x00000060, 0x00000000 },
    { 0x00000001, 0x23343ae8, 0x00000080, 0x00000000 },
    { 0x00000001, 0x23283ae8, 0x000000c0, 0x00000000 },
@@ -56,10 +56,10 @@
    { 0x00000040, 0x233c0208, 0x0600033c, 0x08000000 },
    { 0x00000001, 0x24083ae0, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24083ae0, 0x3e000060, 0x41000000 },
-   { 0x00000248, 0x22e83ae8, 0x3e0000f4, 0x41e00000 },
+   { 0x00000248, 0x22e83ae8, 0x3e000134, 0x41e00000 },
    { 0x00000641, 0x22e43ae8, 0x3e000080, 0x40800000 },
    { 0x00000001, 0x24103ae0, 0x00000060, 0x00000000 },
-   { 0x00000648, 0x22f03ae8, 0x3e0000f4, 0x41000000 },
+   { 0x00000648, 0x22f03ae8, 0x3e000134, 0x41000000 },
    { 0x00000401, 0x22f40608, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x24003660, 0x30000000, 0x00006ea2 },
@@ -113,9 +113,9 @@
    { 0x00400040, 0x22081a40, 0x166902c0, 0x02000200 },
    { 0x00600001, 0x23800208, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00208, 0x008d0360, 0x00000000 },
-   { 0x00200201, 0x23801a28, 0x004500e0, 0x00000000 },
-   { 0x00000201, 0x24a01a28, 0x000000e0, 0x00000000 },
-   { 0x00000608, 0x24a41a28, 0x1e0000e2, 0x00010001 },
+   { 0x00200201, 0x23801a28, 0x00450120, 0x00000000 },
+   { 0x00000201, 0x24a01a28, 0x00000120, 0x00000000 },
+   { 0x00000608, 0x24a41a28, 0x1e000122, 0x00010001 },
    { 0x00000401, 0x23880608, 0x00000000, 0x000f000f },
    { 0x00000401, 0x24a80608, 0x00000000, 0x0007000f },
    { 0x80800040, 0xa2001248, 0x16b18200, 0x00800080 },
diff --git a/src/shaders/post_processing/gen8/pl2_to_pl3.g8b b/src/shaders/post_processing/gen8/pl2_to_pl3.g8b
index 28a951c..ebfcb71 100644
--- a/src/shaders/post_processing/gen8/pl2_to_pl3.g8b
+++ b/src/shaders/post_processing/gen8/pl2_to_pl3.g8b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400208, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x000000f0 },
-   { 0x00200001, 0x21141ae8, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x00000130 },
+   { 0x00200001, 0x21541ae8, 0x00450120, 0x00000000 },
    { 0x01000010, 0x20002220, 0x1600005a, 0x00010001 },
    { 0x00000008, 0x22201248, 0x16000044, 0x00000000 },
    { 0x00000005, 0x22201248, 0x16000220, 0x00030003 },
@@ -13,41 +13,41 @@
    { 0x01000010, 0x20001261, 0x16000220, 0x00030003 },
    { 0x00010020, 0x34000005, 0x0e001400, 0x00000180 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000114 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000154 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000118 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000158 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x000001a0 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000118 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000158 },
    { 0x00000001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000120 },
    { 0x00110001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000070 },
    { 0x00110001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000114 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000154 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a01648, 0x10000000, 0xffffffff },
    { 0x00000005, 0x23021288, 0x16000044, 0x00030003 },
-   { 0x00000001, 0x23203ae8, 0x000000f8, 0x00000000 },
-   { 0x00000001, 0x23383ae8, 0x000000f4, 0x00000000 },
+   { 0x00000001, 0x23203ae8, 0x00000138, 0x00000000 },
+   { 0x00000001, 0x23383ae8, 0x00000134, 0x00000000 },
    { 0x00000001, 0x23303ae8, 0x00000060, 0x00000000 },
    { 0x00000001, 0x23343ae8, 0x00000080, 0x00000000 },
    { 0x00000001, 0x23283ae8, 0x000000c0, 0x00000000 },
@@ -56,10 +56,10 @@
    { 0x00000040, 0x233c0208, 0x0600033c, 0x08000000 },
    { 0x00000001, 0x24083ae0, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24083ae0, 0x3e000060, 0x41000000 },
-   { 0x00000248, 0x22e83ae8, 0x3e0000f4, 0x41e00000 },
+   { 0x00000248, 0x22e83ae8, 0x3e000134, 0x41e00000 },
    { 0x00000641, 0x22e43ae8, 0x3e000080, 0x40800000 },
    { 0x00000001, 0x24103ae0, 0x00000060, 0x00000000 },
-   { 0x00000648, 0x22f03ae8, 0x3e0000f4, 0x41000000 },
+   { 0x00000648, 0x22f03ae8, 0x3e000134, 0x41000000 },
    { 0x00000401, 0x22f40608, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x24003660, 0x30000000, 0x00006ea2 },
@@ -114,9 +114,9 @@
    { 0x00600001, 0x23800208, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00208, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x25c00208, 0x008d0360, 0x00000000 },
-   { 0x00200201, 0x23801a28, 0x004500e0, 0x00000000 },
-   { 0x00200208, 0x24a01a28, 0x1e4500e0, 0x00010001 },
-   { 0x00200208, 0x25c01a28, 0x1e4500e0, 0x00010001 },
+   { 0x00200201, 0x23801a28, 0x00450120, 0x00000000 },
+   { 0x00200208, 0x24a01a28, 0x1e450120, 0x00010001 },
+   { 0x00200208, 0x25c01a28, 0x1e450120, 0x00010001 },
    { 0x00000401, 0x23880608, 0x00000000, 0x000f000f },
    { 0x00000401, 0x24a80608, 0x00000000, 0x00070007 },
    { 0x00000401, 0x25c80608, 0x00000000, 0x00070007 },
diff --git a/src/shaders/post_processing/gen8/pl2_to_rgbx.g8b b/src/shaders/post_processing/gen8/pl2_to_rgbx.g8b
index 9ee29c2..ba6c270 100644
--- a/src/shaders/post_processing/gen8/pl2_to_rgbx.g8b
+++ b/src/shaders/post_processing/gen8/pl2_to_rgbx.g8b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400208, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x000000f0 },
-   { 0x00200001, 0x21141ae8, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x00000130 },
+   { 0x00200001, 0x21541ae8, 0x00450120, 0x00000000 },
    { 0x01000010, 0x20002220, 0x1600005a, 0x00010001 },
    { 0x00000008, 0x22201248, 0x16000044, 0x00000000 },
    { 0x00000005, 0x22201248, 0x16000220, 0x00030003 },
@@ -13,41 +13,41 @@
    { 0x01000010, 0x20001261, 0x16000220, 0x00030003 },
    { 0x00010020, 0x34000005, 0x0e001400, 0x00000180 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000114 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000154 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000118 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000158 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x000001a0 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000118 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000158 },
    { 0x00000001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000120 },
    { 0x00110001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000070 },
    { 0x00110001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000114 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000154 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a01648, 0x10000000, 0xffffffff },
    { 0x00000005, 0x23021288, 0x16000044, 0x00030003 },
-   { 0x00000001, 0x23203ae8, 0x000000f8, 0x00000000 },
-   { 0x00000001, 0x23383ae8, 0x000000f4, 0x00000000 },
+   { 0x00000001, 0x23203ae8, 0x00000138, 0x00000000 },
+   { 0x00000001, 0x23383ae8, 0x00000134, 0x00000000 },
    { 0x00000001, 0x23303ae8, 0x00000060, 0x00000000 },
    { 0x00000001, 0x23343ae8, 0x00000080, 0x00000000 },
    { 0x00000001, 0x23283ae8, 0x000000c0, 0x00000000 },
@@ -56,10 +56,10 @@
    { 0x00000040, 0x233c0208, 0x0600033c, 0x08000000 },
    { 0x00000001, 0x24083ae0, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24083ae0, 0x3e000060, 0x41000000 },
-   { 0x00000248, 0x22e83ae8, 0x3e0000f4, 0x41e00000 },
+   { 0x00000248, 0x22e83ae8, 0x3e000134, 0x41e00000 },
    { 0x00000641, 0x22e43ae8, 0x3e000080, 0x40800000 },
    { 0x00000001, 0x24103ae0, 0x00000060, 0x00000000 },
-   { 0x00000648, 0x22f03ae8, 0x3e0000f4, 0x41000000 },
+   { 0x00000648, 0x22f03ae8, 0x3e000134, 0x41000000 },
    { 0x00000401, 0x22f40608, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x24003660, 0x30000000, 0x00006ea2 },
@@ -116,22 +116,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8411, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8001, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8011, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -144,22 +146,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8431, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8021, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8031, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -172,22 +176,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8451, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8041, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8051, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -200,22 +206,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8471, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8061, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8071, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -229,22 +237,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8411, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8001, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8011, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -257,22 +267,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8431, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8021, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8031, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -285,22 +297,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8451, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8041, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8051, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -313,22 +327,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8471, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8061, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8071, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -342,22 +358,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8411, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8001, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8011, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -370,22 +388,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8431, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8021, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8031, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -398,22 +418,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8451, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8041, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8051, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -426,22 +448,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8471, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8061, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8071, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -455,22 +479,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8411, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8001, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8011, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -483,22 +509,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8431, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8021, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8031, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -511,22 +539,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8451, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8041, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8051, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -539,22 +569,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8471, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8061, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8071, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -569,8 +601,8 @@
    { 0x00010001, 0x22201048, 0x00000200, 0x00000000 },
    { 0x00010001, 0x22001040, 0x00000204, 0x00000000 },
    { 0x00010001, 0x22041240, 0x00000220, 0x00000000 },
-   { 0x00000209, 0x23601a28, 0x1e0000e0, 0x00020002 },
-   { 0x00000601, 0x23641a28, 0x000000e2, 0x00000000 },
+   { 0x00000209, 0x23601a28, 0x1e000120, 0x00020002 },
+   { 0x00000601, 0x23641a28, 0x00000122, 0x00000000 },
    { 0x00000401, 0x23680608, 0x00000000, 0x0003001f },
    { 0x00400001, 0x22081040, 0x00690200, 0x00000000 },
    { 0x00600001, 0x23800208, 0x008d0360, 0x00000000 },
diff --git a/src/shaders/post_processing/gen8/pl3_to_pa.g8b b/src/shaders/post_processing/gen8/pl3_to_pa.g8b
index d6798c2..4bf6294 100644
--- a/src/shaders/post_processing/gen8/pl3_to_pa.g8b
+++ b/src/shaders/post_processing/gen8/pl3_to_pa.g8b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400208, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x000000f0 },
-   { 0x00200001, 0x21141ae8, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x00000130 },
+   { 0x00200001, 0x21541ae8, 0x00450120, 0x00000000 },
    { 0x01000010, 0x20002220, 0x1600005a, 0x00010001 },
    { 0x00000008, 0x22201248, 0x16000044, 0x00000000 },
    { 0x00000005, 0x22201248, 0x16000220, 0x00030003 },
@@ -13,41 +13,41 @@
    { 0x01000010, 0x20001261, 0x16000220, 0x00030003 },
    { 0x00010020, 0x34000005, 0x0e001400, 0x00000180 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000114 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000154 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000118 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000158 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x000001a0 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000118 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000158 },
    { 0x00000001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000120 },
    { 0x00110001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000070 },
    { 0x00110001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000114 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000154 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a01648, 0x10000000, 0xffffffff },
    { 0x00000005, 0x23021288, 0x16000044, 0x00030003 },
-   { 0x00000001, 0x23203ae8, 0x000000f8, 0x00000000 },
-   { 0x00000001, 0x23383ae8, 0x000000f4, 0x00000000 },
+   { 0x00000001, 0x23203ae8, 0x00000138, 0x00000000 },
+   { 0x00000001, 0x23383ae8, 0x00000134, 0x00000000 },
    { 0x00000001, 0x23303ae8, 0x00000060, 0x00000000 },
    { 0x00000001, 0x23343ae8, 0x00000080, 0x00000000 },
    { 0x00000001, 0x23283ae8, 0x000000c0, 0x00000000 },
@@ -56,10 +56,10 @@
    { 0x00000040, 0x233c0208, 0x0600033c, 0x08000000 },
    { 0x00000001, 0x24083ae0, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24083ae0, 0x3e000060, 0x41000000 },
-   { 0x00000248, 0x22e83ae8, 0x3e0000f4, 0x41e00000 },
+   { 0x00000248, 0x22e83ae8, 0x3e000134, 0x41e00000 },
    { 0x00000641, 0x22e43ae8, 0x3e000080, 0x40800000 },
    { 0x00000001, 0x24103ae0, 0x00000060, 0x00000000 },
-   { 0x00000648, 0x22f03ae8, 0x3e0000f4, 0x41000000 },
+   { 0x00000648, 0x22f03ae8, 0x3e000134, 0x41000000 },
    { 0x00000401, 0x22f40608, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x24003660, 0x30000000, 0x00006ea2 },
@@ -127,8 +127,8 @@
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400040, 0x22001a40, 0x166902c0, 0x00000000 },
    { 0x00400040, 0x22082260, 0x1669005c, 0x03a003a0 },
-   { 0x00000209, 0x23601a28, 0x1e0000e0, 0x00010001 },
-   { 0x00000601, 0x23641a28, 0x000000e2, 0x00000000 },
+   { 0x00000209, 0x23601a28, 0x1e000120, 0x00010001 },
+   { 0x00000601, 0x23641a28, 0x00000122, 0x00000000 },
    { 0x00000401, 0x23680608, 0x00000000, 0x0001001f },
    { 0x80400040, 0xc0001248, 0x168a8000, 0x00800080 },
    { 0x80400040, 0xc0201248, 0x168a8020, 0x00800080 },
diff --git a/src/shaders/post_processing/gen8/pl3_to_pl2.g8b b/src/shaders/post_processing/gen8/pl3_to_pl2.g8b
index 9a141e7..70fafd8 100644
--- a/src/shaders/post_processing/gen8/pl3_to_pl2.g8b
+++ b/src/shaders/post_processing/gen8/pl3_to_pl2.g8b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400208, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x000000f0 },
-   { 0x00200001, 0x21141ae8, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x00000130 },
+   { 0x00200001, 0x21541ae8, 0x00450120, 0x00000000 },
    { 0x01000010, 0x20002220, 0x1600005a, 0x00010001 },
    { 0x00000008, 0x22201248, 0x16000044, 0x00000000 },
    { 0x00000005, 0x22201248, 0x16000220, 0x00030003 },
@@ -13,41 +13,41 @@
    { 0x01000010, 0x20001261, 0x16000220, 0x00030003 },
    { 0x00010020, 0x34000005, 0x0e001400, 0x00000180 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000114 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000154 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000118 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000158 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x000001a0 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000118 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000158 },
    { 0x00000001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000120 },
    { 0x00110001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000070 },
    { 0x00110001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000114 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000154 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a01648, 0x10000000, 0xffffffff },
    { 0x00000005, 0x23021288, 0x16000044, 0x00030003 },
-   { 0x00000001, 0x23203ae8, 0x000000f8, 0x00000000 },
-   { 0x00000001, 0x23383ae8, 0x000000f4, 0x00000000 },
+   { 0x00000001, 0x23203ae8, 0x00000138, 0x00000000 },
+   { 0x00000001, 0x23383ae8, 0x00000134, 0x00000000 },
    { 0x00000001, 0x23303ae8, 0x00000060, 0x00000000 },
    { 0x00000001, 0x23343ae8, 0x00000080, 0x00000000 },
    { 0x00000001, 0x23283ae8, 0x000000c0, 0x00000000 },
@@ -56,10 +56,10 @@
    { 0x00000040, 0x233c0208, 0x0600033c, 0x08000000 },
    { 0x00000001, 0x24083ae0, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24083ae0, 0x3e000060, 0x41000000 },
-   { 0x00000248, 0x22e83ae8, 0x3e0000f4, 0x41e00000 },
+   { 0x00000248, 0x22e83ae8, 0x3e000134, 0x41e00000 },
    { 0x00000641, 0x22e43ae8, 0x3e000080, 0x40800000 },
    { 0x00000001, 0x24103ae0, 0x00000060, 0x00000000 },
-   { 0x00000648, 0x22f03ae8, 0x3e0000f4, 0x41000000 },
+   { 0x00000648, 0x22f03ae8, 0x3e000134, 0x41000000 },
    { 0x00000401, 0x22f40608, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x24003660, 0x30000000, 0x00006ea2 },
@@ -129,9 +129,9 @@
    { 0x00400040, 0x22081a40, 0x166902c0, 0x02000200 },
    { 0x00600001, 0x23800208, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00208, 0x008d0360, 0x00000000 },
-   { 0x00200201, 0x23801a28, 0x004500e0, 0x00000000 },
-   { 0x00000201, 0x24a01a28, 0x000000e0, 0x00000000 },
-   { 0x00000608, 0x24a41a28, 0x1e0000e2, 0x00010001 },
+   { 0x00200201, 0x23801a28, 0x00450120, 0x00000000 },
+   { 0x00000201, 0x24a01a28, 0x00000120, 0x00000000 },
+   { 0x00000608, 0x24a41a28, 0x1e000122, 0x00010001 },
    { 0x00000401, 0x23880608, 0x00000000, 0x000f000f },
    { 0x00000401, 0x24a80608, 0x00000000, 0x0007000f },
    { 0x80800040, 0xa2001248, 0x16b18200, 0x00800080 },
diff --git a/src/shaders/post_processing/gen8/pl3_to_pl3.g8b b/src/shaders/post_processing/gen8/pl3_to_pl3.g8b
index 67ac99c..800fe68 100644
--- a/src/shaders/post_processing/gen8/pl3_to_pl3.g8b
+++ b/src/shaders/post_processing/gen8/pl3_to_pl3.g8b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400208, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x000000f0 },
-   { 0x00200001, 0x21141ae8, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x00000130 },
+   { 0x00200001, 0x21541ae8, 0x00450120, 0x00000000 },
    { 0x01000010, 0x20002220, 0x1600005a, 0x00010001 },
    { 0x00000008, 0x22201248, 0x16000044, 0x00000000 },
    { 0x00000005, 0x22201248, 0x16000220, 0x00030003 },
@@ -13,41 +13,41 @@
    { 0x01000010, 0x20001261, 0x16000220, 0x00030003 },
    { 0x00010020, 0x34000005, 0x0e001400, 0x00000180 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000114 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000154 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000118 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000158 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x000001a0 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000118 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000158 },
    { 0x00000001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000120 },
    { 0x00110001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000070 },
    { 0x00110001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000114 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000154 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a01648, 0x10000000, 0xffffffff },
    { 0x00000005, 0x23021288, 0x16000044, 0x00030003 },
-   { 0x00000001, 0x23203ae8, 0x000000f8, 0x00000000 },
-   { 0x00000001, 0x23383ae8, 0x000000f4, 0x00000000 },
+   { 0x00000001, 0x23203ae8, 0x00000138, 0x00000000 },
+   { 0x00000001, 0x23383ae8, 0x00000134, 0x00000000 },
    { 0x00000001, 0x23303ae8, 0x00000060, 0x00000000 },
    { 0x00000001, 0x23343ae8, 0x00000080, 0x00000000 },
    { 0x00000001, 0x23283ae8, 0x000000c0, 0x00000000 },
@@ -56,10 +56,10 @@
    { 0x00000040, 0x233c0208, 0x0600033c, 0x08000000 },
    { 0x00000001, 0x24083ae0, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24083ae0, 0x3e000060, 0x41000000 },
-   { 0x00000248, 0x22e83ae8, 0x3e0000f4, 0x41e00000 },
+   { 0x00000248, 0x22e83ae8, 0x3e000134, 0x41e00000 },
    { 0x00000641, 0x22e43ae8, 0x3e000080, 0x40800000 },
    { 0x00000001, 0x24103ae0, 0x00000060, 0x00000000 },
-   { 0x00000648, 0x22f03ae8, 0x3e0000f4, 0x41000000 },
+   { 0x00000648, 0x22f03ae8, 0x3e000134, 0x41000000 },
    { 0x00000401, 0x22f40608, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x24003660, 0x30000000, 0x00006ea2 },
@@ -130,9 +130,9 @@
    { 0x00600001, 0x23800208, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00208, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x25c00208, 0x008d0360, 0x00000000 },
-   { 0x00200201, 0x23801a28, 0x004500e0, 0x00000000 },
-   { 0x00200208, 0x24a01a28, 0x1e4500e0, 0x00010001 },
-   { 0x00200208, 0x25c01a28, 0x1e4500e0, 0x00010001 },
+   { 0x00200201, 0x23801a28, 0x00450120, 0x00000000 },
+   { 0x00200208, 0x24a01a28, 0x1e450120, 0x00010001 },
+   { 0x00200208, 0x25c01a28, 0x1e450120, 0x00010001 },
    { 0x00000401, 0x23880608, 0x00000000, 0x000f000f },
    { 0x00000401, 0x24a80608, 0x00000000, 0x00070007 },
    { 0x00000401, 0x25c80608, 0x00000000, 0x00070007 },
diff --git a/src/shaders/post_processing/gen8/rgbx_to_nv12.g8b b/src/shaders/post_processing/gen8/rgbx_to_nv12.g8b
index 4cc113b..20e1053 100644
--- a/src/shaders/post_processing/gen8/rgbx_to_nv12.g8b
+++ b/src/shaders/post_processing/gen8/rgbx_to_nv12.g8b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400208, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x000000f0 },
-   { 0x00200001, 0x21141ae8, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x00000130 },
+   { 0x00200001, 0x21541ae8, 0x00450120, 0x00000000 },
    { 0x01000010, 0x20002220, 0x1600005a, 0x00010001 },
    { 0x00000008, 0x22201248, 0x16000044, 0x00000000 },
    { 0x00000005, 0x22201248, 0x16000220, 0x00030003 },
@@ -13,41 +13,41 @@
    { 0x01000010, 0x20001261, 0x16000220, 0x00030003 },
    { 0x00010020, 0x34000005, 0x0e001400, 0x00000180 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000114 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000154 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000118 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000158 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x000001a0 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000118 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000158 },
    { 0x00000001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000120 },
    { 0x00110001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000070 },
    { 0x00110001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000114 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000154 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a01648, 0x10000000, 0xffffffff },
    { 0x00000005, 0x23021288, 0x16000044, 0x00030003 },
-   { 0x00000001, 0x23203ae8, 0x000000f8, 0x00000000 },
-   { 0x00000001, 0x23383ae8, 0x000000f4, 0x00000000 },
+   { 0x00000001, 0x23203ae8, 0x00000138, 0x00000000 },
+   { 0x00000001, 0x23383ae8, 0x00000134, 0x00000000 },
    { 0x00000001, 0x23303ae8, 0x00000060, 0x00000000 },
    { 0x00000001, 0x23343ae8, 0x00000080, 0x00000000 },
    { 0x00000001, 0x23283ae8, 0x000000c0, 0x00000000 },
@@ -56,10 +56,10 @@
    { 0x00000040, 0x233c0208, 0x0600033c, 0x08000000 },
    { 0x00000001, 0x24083ae0, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24083ae0, 0x3e000060, 0x41000000 },
-   { 0x00000248, 0x22e83ae8, 0x3e0000f4, 0x41e00000 },
+   { 0x00000248, 0x22e83ae8, 0x3e000134, 0x41e00000 },
    { 0x00000641, 0x22e43ae8, 0x3e000080, 0x40800000 },
    { 0x00000001, 0x24103ae0, 0x00000060, 0x00000000 },
-   { 0x00000648, 0x22f03ae8, 0x3e0000f4, 0x41000000 },
+   { 0x00000648, 0x22f03ae8, 0x3e000134, 0x41000000 },
    { 0x00000401, 0x22f40608, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x24003660, 0x30000000, 0x00006ea2 },
@@ -530,9 +530,9 @@
    { 0x00400040, 0x22081a40, 0x166902c0, 0x02000200 },
    { 0x00600001, 0x23800208, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00208, 0x008d0360, 0x00000000 },
-   { 0x00200201, 0x23801a28, 0x004500e0, 0x00000000 },
-   { 0x00000201, 0x24a01a28, 0x000000e0, 0x00000000 },
-   { 0x00000608, 0x24a41a28, 0x1e0000e2, 0x00010001 },
+   { 0x00200201, 0x23801a28, 0x00450120, 0x00000000 },
+   { 0x00000201, 0x24a01a28, 0x00000120, 0x00000000 },
+   { 0x00000608, 0x24a41a28, 0x1e000122, 0x00010001 },
    { 0x00000401, 0x23880608, 0x00000000, 0x000f000f },
    { 0x00000401, 0x24a80608, 0x00000000, 0x0007000f },
    { 0x80800040, 0xa2001248, 0x16b18200, 0x00800080 },
diff --git a/src/shaders/post_processing/gen9/pa_to_pa.g9b b/src/shaders/post_processing/gen9/pa_to_pa.g9b
index fe18a9e..c06ff03 100644
--- a/src/shaders/post_processing/gen9/pa_to_pa.g9b
+++ b/src/shaders/post_processing/gen9/pa_to_pa.g9b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400208, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x000000f0 },
-   { 0x00200001, 0x21141ae8, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x00000130 },
+   { 0x00200001, 0x21541ae8, 0x00450120, 0x00000000 },
    { 0x01000010, 0x20002220, 0x1600005a, 0x00010001 },
    { 0x00000008, 0x22201248, 0x16000044, 0x00000000 },
    { 0x00000005, 0x22201248, 0x16000220, 0x00030003 },
@@ -13,41 +13,41 @@
    { 0x01000010, 0x20001261, 0x16000220, 0x00030003 },
    { 0x00010020, 0x34000005, 0x0e001400, 0x00000180 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000114 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000154 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000118 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000158 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x000001a0 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000118 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000158 },
    { 0x00000001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000120 },
    { 0x00110001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000070 },
    { 0x00110001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000114 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000154 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a01648, 0x10000000, 0xffffffff },
    { 0x00000005, 0x23021288, 0x16000044, 0x00030003 },
-   { 0x00000001, 0x23203ae8, 0x000000f8, 0x00000000 },
-   { 0x00000001, 0x23383ae8, 0x000000f4, 0x00000000 },
+   { 0x00000001, 0x23203ae8, 0x00000138, 0x00000000 },
+   { 0x00000001, 0x23383ae8, 0x00000134, 0x00000000 },
    { 0x00000001, 0x23303ae8, 0x00000060, 0x00000000 },
    { 0x00000001, 0x23343ae8, 0x00000080, 0x00000000 },
    { 0x00000001, 0x23283ae8, 0x000000c0, 0x00000000 },
@@ -56,10 +56,10 @@
    { 0x00000040, 0x233c0208, 0x0600033c, 0x08000000 },
    { 0x00000001, 0x24083ae0, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24083ae0, 0x3e000060, 0x41000000 },
-   { 0x00000248, 0x22e83ae8, 0x3e0000f4, 0x41e00000 },
+   { 0x00000248, 0x22e83ae8, 0x3e000134, 0x41e00000 },
    { 0x00000641, 0x22e43ae8, 0x3e000080, 0x40800000 },
    { 0x00000001, 0x24103ae0, 0x00000060, 0x00000000 },
-   { 0x00000648, 0x22f03ae8, 0x3e0000f4, 0x41000000 },
+   { 0x00000648, 0x22f03ae8, 0x3e000134, 0x41000000 },
    { 0x00000401, 0x22f40608, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x24003660, 0x30000000, 0x000062ea },
@@ -103,8 +103,8 @@
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400040, 0x22001a40, 0x166902c0, 0x00000000 },
    { 0x00400040, 0x22082260, 0x1669005c, 0x03a003a0 },
-   { 0x00000209, 0x23601a28, 0x1e0000e0, 0x00010001 },
-   { 0x00000601, 0x23641a28, 0x000000e2, 0x00000000 },
+   { 0x00000209, 0x23601a28, 0x1e000120, 0x00010001 },
+   { 0x00000601, 0x23641a28, 0x00000122, 0x00000000 },
    { 0x00000401, 0x23680608, 0x00000000, 0x0001001f },
    { 0x80400040, 0xc0001248, 0x168a8000, 0x00800080 },
    { 0x80400040, 0xc0201248, 0x168a8020, 0x00800080 },
diff --git a/src/shaders/post_processing/gen9/pa_to_pl2.g9b b/src/shaders/post_processing/gen9/pa_to_pl2.g9b
index 15235d7..f98bf02 100644
--- a/src/shaders/post_processing/gen9/pa_to_pl2.g9b
+++ b/src/shaders/post_processing/gen9/pa_to_pl2.g9b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400208, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x000000f0 },
-   { 0x00200001, 0x21141ae8, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x00000130 },
+   { 0x00200001, 0x21541ae8, 0x00450120, 0x00000000 },
    { 0x01000010, 0x20002220, 0x1600005a, 0x00010001 },
    { 0x00000008, 0x22201248, 0x16000044, 0x00000000 },
    { 0x00000005, 0x22201248, 0x16000220, 0x00030003 },
@@ -13,41 +13,41 @@
    { 0x01000010, 0x20001261, 0x16000220, 0x00030003 },
    { 0x00010020, 0x34000005, 0x0e001400, 0x00000180 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000114 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000154 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000118 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000158 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x000001a0 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000118 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000158 },
    { 0x00000001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000120 },
    { 0x00110001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000070 },
    { 0x00110001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000114 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000154 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a01648, 0x10000000, 0xffffffff },
    { 0x00000005, 0x23021288, 0x16000044, 0x00030003 },
-   { 0x00000001, 0x23203ae8, 0x000000f8, 0x00000000 },
-   { 0x00000001, 0x23383ae8, 0x000000f4, 0x00000000 },
+   { 0x00000001, 0x23203ae8, 0x00000138, 0x00000000 },
+   { 0x00000001, 0x23383ae8, 0x00000134, 0x00000000 },
    { 0x00000001, 0x23303ae8, 0x00000060, 0x00000000 },
    { 0x00000001, 0x23343ae8, 0x00000080, 0x00000000 },
    { 0x00000001, 0x23283ae8, 0x000000c0, 0x00000000 },
@@ -56,10 +56,10 @@
    { 0x00000040, 0x233c0208, 0x0600033c, 0x08000000 },
    { 0x00000001, 0x24083ae0, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24083ae0, 0x3e000060, 0x41000000 },
-   { 0x00000248, 0x22e83ae8, 0x3e0000f4, 0x41e00000 },
+   { 0x00000248, 0x22e83ae8, 0x3e000134, 0x41e00000 },
    { 0x00000641, 0x22e43ae8, 0x3e000080, 0x40800000 },
    { 0x00000001, 0x24103ae0, 0x00000060, 0x00000000 },
-   { 0x00000648, 0x22f03ae8, 0x3e0000f4, 0x41000000 },
+   { 0x00000648, 0x22f03ae8, 0x3e000134, 0x41000000 },
    { 0x00000401, 0x22f40608, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x24003660, 0x30000000, 0x000062ea },
@@ -105,9 +105,9 @@
    { 0x00400040, 0x22081a40, 0x166902c0, 0x02000200 },
    { 0x00600001, 0x23800208, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00208, 0x008d0360, 0x00000000 },
-   { 0x00200201, 0x23801a28, 0x004500e0, 0x00000000 },
-   { 0x00000201, 0x24a01a28, 0x000000e0, 0x00000000 },
-   { 0x00000608, 0x24a41a28, 0x1e0000e2, 0x00010001 },
+   { 0x00200201, 0x23801a28, 0x00450120, 0x00000000 },
+   { 0x00000201, 0x24a01a28, 0x00000120, 0x00000000 },
+   { 0x00000608, 0x24a41a28, 0x1e000122, 0x00010001 },
    { 0x00000401, 0x23880608, 0x00000000, 0x000f000f },
    { 0x00000401, 0x24a80608, 0x00000000, 0x0007000f },
    { 0x80800040, 0xa2001248, 0x16b18200, 0x00800080 },
diff --git a/src/shaders/post_processing/gen9/pa_to_pl3.g9b b/src/shaders/post_processing/gen9/pa_to_pl3.g9b
index 3577887..c37964d 100644
--- a/src/shaders/post_processing/gen9/pa_to_pl3.g9b
+++ b/src/shaders/post_processing/gen9/pa_to_pl3.g9b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400208, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x000000f0 },
-   { 0x00200001, 0x21141ae8, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x00000130 },
+   { 0x00200001, 0x21541ae8, 0x00450120, 0x00000000 },
    { 0x01000010, 0x20002220, 0x1600005a, 0x00010001 },
    { 0x00000008, 0x22201248, 0x16000044, 0x00000000 },
    { 0x00000005, 0x22201248, 0x16000220, 0x00030003 },
@@ -13,41 +13,41 @@
    { 0x01000010, 0x20001261, 0x16000220, 0x00030003 },
    { 0x00010020, 0x34000005, 0x0e001400, 0x00000180 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000114 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000154 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000118 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000158 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x000001a0 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000118 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000158 },
    { 0x00000001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000120 },
    { 0x00110001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000070 },
    { 0x00110001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000114 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000154 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a01648, 0x10000000, 0xffffffff },
    { 0x00000005, 0x23021288, 0x16000044, 0x00030003 },
-   { 0x00000001, 0x23203ae8, 0x000000f8, 0x00000000 },
-   { 0x00000001, 0x23383ae8, 0x000000f4, 0x00000000 },
+   { 0x00000001, 0x23203ae8, 0x00000138, 0x00000000 },
+   { 0x00000001, 0x23383ae8, 0x00000134, 0x00000000 },
    { 0x00000001, 0x23303ae8, 0x00000060, 0x00000000 },
    { 0x00000001, 0x23343ae8, 0x00000080, 0x00000000 },
    { 0x00000001, 0x23283ae8, 0x000000c0, 0x00000000 },
@@ -56,10 +56,10 @@
    { 0x00000040, 0x233c0208, 0x0600033c, 0x08000000 },
    { 0x00000001, 0x24083ae0, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24083ae0, 0x3e000060, 0x41000000 },
-   { 0x00000248, 0x22e83ae8, 0x3e0000f4, 0x41e00000 },
+   { 0x00000248, 0x22e83ae8, 0x3e000134, 0x41e00000 },
    { 0x00000641, 0x22e43ae8, 0x3e000080, 0x40800000 },
    { 0x00000001, 0x24103ae0, 0x00000060, 0x00000000 },
-   { 0x00000648, 0x22f03ae8, 0x3e0000f4, 0x41000000 },
+   { 0x00000648, 0x22f03ae8, 0x3e000134, 0x41000000 },
    { 0x00000401, 0x22f40608, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x24003660, 0x30000000, 0x000062ea },
@@ -106,9 +106,9 @@
    { 0x00600001, 0x23800208, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00208, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x25c00208, 0x008d0360, 0x00000000 },
-   { 0x00200201, 0x23801a28, 0x004500e0, 0x00000000 },
-   { 0x00200208, 0x24a01a28, 0x1e4500e0, 0x00010001 },
-   { 0x00200208, 0x25c01a28, 0x1e4500e0, 0x00010001 },
+   { 0x00200201, 0x23801a28, 0x00450120, 0x00000000 },
+   { 0x00200208, 0x24a01a28, 0x1e450120, 0x00010001 },
+   { 0x00200208, 0x25c01a28, 0x1e450120, 0x00010001 },
    { 0x00000401, 0x23880608, 0x00000000, 0x000f000f },
    { 0x00000401, 0x24a80608, 0x00000000, 0x00070007 },
    { 0x00000401, 0x25c80608, 0x00000000, 0x00070007 },
diff --git a/src/shaders/post_processing/gen9/pl2_to_pa.g9b b/src/shaders/post_processing/gen9/pl2_to_pa.g9b
index 9a41961..75bbd2f 100644
--- a/src/shaders/post_processing/gen9/pl2_to_pa.g9b
+++ b/src/shaders/post_processing/gen9/pl2_to_pa.g9b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400208, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x000000f0 },
-   { 0x00200001, 0x21141ae8, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x00000130 },
+   { 0x00200001, 0x21541ae8, 0x00450120, 0x00000000 },
    { 0x01000010, 0x20002220, 0x1600005a, 0x00010001 },
    { 0x00000008, 0x22201248, 0x16000044, 0x00000000 },
    { 0x00000005, 0x22201248, 0x16000220, 0x00030003 },
@@ -13,41 +13,41 @@
    { 0x01000010, 0x20001261, 0x16000220, 0x00030003 },
    { 0x00010020, 0x34000005, 0x0e001400, 0x00000180 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000114 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000154 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000118 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000158 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x000001a0 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000118 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000158 },
    { 0x00000001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000120 },
    { 0x00110001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000070 },
    { 0x00110001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000114 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000154 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a01648, 0x10000000, 0xffffffff },
    { 0x00000005, 0x23021288, 0x16000044, 0x00030003 },
-   { 0x00000001, 0x23203ae8, 0x000000f8, 0x00000000 },
-   { 0x00000001, 0x23383ae8, 0x000000f4, 0x00000000 },
+   { 0x00000001, 0x23203ae8, 0x00000138, 0x00000000 },
+   { 0x00000001, 0x23383ae8, 0x00000134, 0x00000000 },
    { 0x00000001, 0x23303ae8, 0x00000060, 0x00000000 },
    { 0x00000001, 0x23343ae8, 0x00000080, 0x00000000 },
    { 0x00000001, 0x23283ae8, 0x000000c0, 0x00000000 },
@@ -56,10 +56,10 @@
    { 0x00000040, 0x233c0208, 0x0600033c, 0x08000000 },
    { 0x00000001, 0x24083ae0, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24083ae0, 0x3e000060, 0x41000000 },
-   { 0x00000248, 0x22e83ae8, 0x3e0000f4, 0x41e00000 },
+   { 0x00000248, 0x22e83ae8, 0x3e000134, 0x41e00000 },
    { 0x00000641, 0x22e43ae8, 0x3e000080, 0x40800000 },
    { 0x00000001, 0x24103ae0, 0x00000060, 0x00000000 },
-   { 0x00000648, 0x22f03ae8, 0x3e0000f4, 0x41000000 },
+   { 0x00000648, 0x22f03ae8, 0x3e000134, 0x41000000 },
    { 0x00000401, 0x22f40608, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x24003660, 0x30000000, 0x00006ea2 },
@@ -111,8 +111,8 @@
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400040, 0x22001a40, 0x166902c0, 0x00000000 },
    { 0x00400040, 0x22082260, 0x1669005c, 0x03a003a0 },
-   { 0x00000209, 0x23601a28, 0x1e0000e0, 0x00010001 },
-   { 0x00000601, 0x23641a28, 0x000000e2, 0x00000000 },
+   { 0x00000209, 0x23601a28, 0x1e000120, 0x00010001 },
+   { 0x00000601, 0x23641a28, 0x00000122, 0x00000000 },
    { 0x00000401, 0x23680608, 0x00000000, 0x0001001f },
    { 0x80400040, 0xc0001248, 0x168a8000, 0x00800080 },
    { 0x80400040, 0xc0201248, 0x168a8020, 0x00800080 },
diff --git a/src/shaders/post_processing/gen9/pl2_to_pl2.g9b b/src/shaders/post_processing/gen9/pl2_to_pl2.g9b
index de6637c..71f1525 100644
--- a/src/shaders/post_processing/gen9/pl2_to_pl2.g9b
+++ b/src/shaders/post_processing/gen9/pl2_to_pl2.g9b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400208, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x000000f0 },
-   { 0x00200001, 0x21141ae8, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x00000130 },
+   { 0x00200001, 0x21541ae8, 0x00450120, 0x00000000 },
    { 0x01000010, 0x20002220, 0x1600005a, 0x00010001 },
    { 0x00000008, 0x22201248, 0x16000044, 0x00000000 },
    { 0x00000005, 0x22201248, 0x16000220, 0x00030003 },
@@ -13,41 +13,41 @@
    { 0x01000010, 0x20001261, 0x16000220, 0x00030003 },
    { 0x00010020, 0x34000005, 0x0e001400, 0x00000180 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000114 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000154 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000118 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000158 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x000001a0 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000118 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000158 },
    { 0x00000001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000120 },
    { 0x00110001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000070 },
    { 0x00110001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000114 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000154 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a01648, 0x10000000, 0xffffffff },
    { 0x00000005, 0x23021288, 0x16000044, 0x00030003 },
-   { 0x00000001, 0x23203ae8, 0x000000f8, 0x00000000 },
-   { 0x00000001, 0x23383ae8, 0x000000f4, 0x00000000 },
+   { 0x00000001, 0x23203ae8, 0x00000138, 0x00000000 },
+   { 0x00000001, 0x23383ae8, 0x00000134, 0x00000000 },
    { 0x00000001, 0x23303ae8, 0x00000060, 0x00000000 },
    { 0x00000001, 0x23343ae8, 0x00000080, 0x00000000 },
    { 0x00000001, 0x23283ae8, 0x000000c0, 0x00000000 },
@@ -56,10 +56,10 @@
    { 0x00000040, 0x233c0208, 0x0600033c, 0x08000000 },
    { 0x00000001, 0x24083ae0, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24083ae0, 0x3e000060, 0x41000000 },
-   { 0x00000248, 0x22e83ae8, 0x3e0000f4, 0x41e00000 },
+   { 0x00000248, 0x22e83ae8, 0x3e000134, 0x41e00000 },
    { 0x00000641, 0x22e43ae8, 0x3e000080, 0x40800000 },
    { 0x00000001, 0x24103ae0, 0x00000060, 0x00000000 },
-   { 0x00000648, 0x22f03ae8, 0x3e0000f4, 0x41000000 },
+   { 0x00000648, 0x22f03ae8, 0x3e000134, 0x41000000 },
    { 0x00000401, 0x22f40608, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x24003660, 0x30000000, 0x00006ea2 },
@@ -113,9 +113,9 @@
    { 0x00400040, 0x22081a40, 0x166902c0, 0x02000200 },
    { 0x00600001, 0x23800208, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00208, 0x008d0360, 0x00000000 },
-   { 0x00200201, 0x23801a28, 0x004500e0, 0x00000000 },
-   { 0x00000201, 0x24a01a28, 0x000000e0, 0x00000000 },
-   { 0x00000608, 0x24a41a28, 0x1e0000e2, 0x00010001 },
+   { 0x00200201, 0x23801a28, 0x00450120, 0x00000000 },
+   { 0x00000201, 0x24a01a28, 0x00000120, 0x00000000 },
+   { 0x00000608, 0x24a41a28, 0x1e000122, 0x00010001 },
    { 0x00000401, 0x23880608, 0x00000000, 0x000f000f },
    { 0x00000401, 0x24a80608, 0x00000000, 0x0007000f },
    { 0x80800040, 0xa2001248, 0x16b18200, 0x00800080 },
diff --git a/src/shaders/post_processing/gen9/pl2_to_pl3.g9b b/src/shaders/post_processing/gen9/pl2_to_pl3.g9b
index 106d615..c4ba9aa 100644
--- a/src/shaders/post_processing/gen9/pl2_to_pl3.g9b
+++ b/src/shaders/post_processing/gen9/pl2_to_pl3.g9b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400208, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x000000f0 },
-   { 0x00200001, 0x21141ae8, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x00000130 },
+   { 0x00200001, 0x21541ae8, 0x00450120, 0x00000000 },
    { 0x01000010, 0x20002220, 0x1600005a, 0x00010001 },
    { 0x00000008, 0x22201248, 0x16000044, 0x00000000 },
    { 0x00000005, 0x22201248, 0x16000220, 0x00030003 },
@@ -13,41 +13,41 @@
    { 0x01000010, 0x20001261, 0x16000220, 0x00030003 },
    { 0x00010020, 0x34000005, 0x0e001400, 0x00000180 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000114 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000154 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000118 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000158 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x000001a0 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000118 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000158 },
    { 0x00000001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000120 },
    { 0x00110001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000070 },
    { 0x00110001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000114 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000154 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a01648, 0x10000000, 0xffffffff },
    { 0x00000005, 0x23021288, 0x16000044, 0x00030003 },
-   { 0x00000001, 0x23203ae8, 0x000000f8, 0x00000000 },
-   { 0x00000001, 0x23383ae8, 0x000000f4, 0x00000000 },
+   { 0x00000001, 0x23203ae8, 0x00000138, 0x00000000 },
+   { 0x00000001, 0x23383ae8, 0x00000134, 0x00000000 },
    { 0x00000001, 0x23303ae8, 0x00000060, 0x00000000 },
    { 0x00000001, 0x23343ae8, 0x00000080, 0x00000000 },
    { 0x00000001, 0x23283ae8, 0x000000c0, 0x00000000 },
@@ -56,10 +56,10 @@
    { 0x00000040, 0x233c0208, 0x0600033c, 0x08000000 },
    { 0x00000001, 0x24083ae0, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24083ae0, 0x3e000060, 0x41000000 },
-   { 0x00000248, 0x22e83ae8, 0x3e0000f4, 0x41e00000 },
+   { 0x00000248, 0x22e83ae8, 0x3e000134, 0x41e00000 },
    { 0x00000641, 0x22e43ae8, 0x3e000080, 0x40800000 },
    { 0x00000001, 0x24103ae0, 0x00000060, 0x00000000 },
-   { 0x00000648, 0x22f03ae8, 0x3e0000f4, 0x41000000 },
+   { 0x00000648, 0x22f03ae8, 0x3e000134, 0x41000000 },
    { 0x00000401, 0x22f40608, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x24003660, 0x30000000, 0x00006ea2 },
@@ -114,9 +114,9 @@
    { 0x00600001, 0x23800208, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00208, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x25c00208, 0x008d0360, 0x00000000 },
-   { 0x00200201, 0x23801a28, 0x004500e0, 0x00000000 },
-   { 0x00200208, 0x24a01a28, 0x1e4500e0, 0x00010001 },
-   { 0x00200208, 0x25c01a28, 0x1e4500e0, 0x00010001 },
+   { 0x00200201, 0x23801a28, 0x00450120, 0x00000000 },
+   { 0x00200208, 0x24a01a28, 0x1e450120, 0x00010001 },
+   { 0x00200208, 0x25c01a28, 0x1e450120, 0x00010001 },
    { 0x00000401, 0x23880608, 0x00000000, 0x000f000f },
    { 0x00000401, 0x24a80608, 0x00000000, 0x00070007 },
    { 0x00000401, 0x25c80608, 0x00000000, 0x00070007 },
diff --git a/src/shaders/post_processing/gen9/pl2_to_rgbx.g9b b/src/shaders/post_processing/gen9/pl2_to_rgbx.g9b
index f37211f..95a0e6a 100644
--- a/src/shaders/post_processing/gen9/pl2_to_rgbx.g9b
+++ b/src/shaders/post_processing/gen9/pl2_to_rgbx.g9b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400208, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x000000f0 },
-   { 0x00200001, 0x21141ae8, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x00000130 },
+   { 0x00200001, 0x21541ae8, 0x00450120, 0x00000000 },
    { 0x01000010, 0x20002220, 0x1600005a, 0x00010001 },
    { 0x00000008, 0x22201248, 0x16000044, 0x00000000 },
    { 0x00000005, 0x22201248, 0x16000220, 0x00030003 },
@@ -13,41 +13,41 @@
    { 0x01000010, 0x20001261, 0x16000220, 0x00030003 },
    { 0x00010020, 0x34000005, 0x0e001400, 0x00000180 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000114 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000154 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000118 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000158 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x000001a0 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000118 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000158 },
    { 0x00000001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000120 },
    { 0x00110001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000070 },
    { 0x00110001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000114 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000154 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a01648, 0x10000000, 0xffffffff },
    { 0x00000005, 0x23021288, 0x16000044, 0x00030003 },
-   { 0x00000001, 0x23203ae8, 0x000000f8, 0x00000000 },
-   { 0x00000001, 0x23383ae8, 0x000000f4, 0x00000000 },
+   { 0x00000001, 0x23203ae8, 0x00000138, 0x00000000 },
+   { 0x00000001, 0x23383ae8, 0x00000134, 0x00000000 },
    { 0x00000001, 0x23303ae8, 0x00000060, 0x00000000 },
    { 0x00000001, 0x23343ae8, 0x00000080, 0x00000000 },
    { 0x00000001, 0x23283ae8, 0x000000c0, 0x00000000 },
@@ -56,10 +56,10 @@
    { 0x00000040, 0x233c0208, 0x0600033c, 0x08000000 },
    { 0x00000001, 0x24083ae0, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24083ae0, 0x3e000060, 0x41000000 },
-   { 0x00000248, 0x22e83ae8, 0x3e0000f4, 0x41e00000 },
+   { 0x00000248, 0x22e83ae8, 0x3e000134, 0x41e00000 },
    { 0x00000641, 0x22e43ae8, 0x3e000080, 0x40800000 },
    { 0x00000001, 0x24103ae0, 0x00000060, 0x00000000 },
-   { 0x00000648, 0x22f03ae8, 0x3e0000f4, 0x41000000 },
+   { 0x00000648, 0x22f03ae8, 0x3e000134, 0x41000000 },
    { 0x00000401, 0x22f40608, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x24003660, 0x30000000, 0x00006ea2 },
@@ -116,22 +116,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8411, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8001, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8011, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -144,22 +146,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8431, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8021, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8031, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -172,22 +176,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8451, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8041, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8051, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -200,22 +206,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8471, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8061, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8071, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -229,22 +237,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8411, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8001, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8011, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -257,22 +267,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8431, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8021, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8031, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -285,22 +297,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8451, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8041, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8051, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -313,22 +327,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8471, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8061, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8071, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -342,22 +358,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8411, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8001, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8011, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -370,22 +388,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8431, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8021, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8031, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -398,22 +418,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8451, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8041, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8051, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -426,22 +448,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8471, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8061, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8071, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -455,22 +479,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8411, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8001, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8011, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -483,22 +509,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8431, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8021, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8031, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -511,22 +539,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8451, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8041, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8051, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -539,22 +569,24 @@
    { 0x00600001, 0x24e022e8, 0x00ae8471, 0x00000000 },
    { 0x00600001, 0x250022e8, 0x00ae8061, 0x00000000 },
    { 0x00600001, 0x252022e8, 0x00ae8071, 0x00000000 },
-   { 0x00800040, 0x24c03ae8, 0x3e8d04c0, 0xc3000000 },
-   { 0x00800040, 0x25003ae8, 0x3e8d0500, 0xc3000000 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x23803ae8, 0x3e8d0500, 0x3fb374bc },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00600048, 0x24003ae0, 0x3e8d04c0, 0xbeb020c5 },
-   { 0x00600048, 0x24203ae0, 0x3e8d04e0, 0xbeb020c5 },
-   { 0x00800048, 0x23c03ae8, 0x3e8d0500, 0xbf36c8b4 },
-   { 0x00800001, 0x24003ae0, 0x008d0480, 0x00000000 },
-   { 0x00800048, 0x24003ae8, 0x3e8d04c0, 0x3fe2d0e5 },
-   { 0x80800041, 0x24803ae8, 0x3e8d0380, 0x3b8080c4 },
-   { 0x80800041, 0x24c03ae8, 0x3e8d03c0, 0x3b8080c4 },
-   { 0x80800041, 0x25003ae8, 0x3e8d0400, 0x3b8080c4 },
-   { 0x00800041, 0x23803ae8, 0x3e8d0480, 0x437f0000 },
-   { 0x00800041, 0x23c03ae8, 0x3e8d04c0, 0x437f0000 },
-   { 0x00800041, 0x24003ae8, 0x3e8d0500, 0x437f0000 },
+   { 0x00800041, 0x24803ae8, 0x3e200480, 0x3b8080c4 },
+   { 0x00800041, 0x24c03ae8, 0x3e2004c0, 0x3b8080c4 },
+   { 0x00800041, 0x25003ae8, 0x3e200500, 0x3b8080c4 },
+   { 0x00800040, 0x24803ae8, 0x3a200480, 0x000000ec },
+   { 0x00800040, 0x24c03ae8, 0x3a2004c0, 0x000000fc },
+   { 0x00800040, 0x25003ae8, 0x3a200500, 0x0000010c },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000e0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000e4 },
+   { 0x80800048, 0x23803ae8, 0x3a8d0500, 0x000000e8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x000000f0 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x000000f4 },
+   { 0x80800048, 0x23c03ae8, 0x3a8d0500, 0x000000f8 },
+   { 0x00800041, 0x24003ae0, 0x3a8d0480, 0x00000100 },
+   { 0x00800048, 0x24003ae0, 0x3a8d04c0, 0x00000104 },
+   { 0x80800048, 0x24003ae8, 0x3a8d0500, 0x00000108 },
+   { 0x00800041, 0x23803ae8, 0x3e8d0380, 0x437f0000 },
+   { 0x00800041, 0x23c03ae8, 0x3e8d03c0, 0x437f0000 },
+   { 0x00800041, 0x24003ae8, 0x3e8d0400, 0x437f0000 },
    { 0x00800001, 0x45403a68, 0x008d0380, 0x00000000 },
    { 0x00800001, 0x45803a68, 0x008d03c0, 0x00000000 },
    { 0x00800001, 0x45c03a68, 0x008d0400, 0x00000000 },
@@ -569,8 +601,8 @@
    { 0x00010001, 0x22201048, 0x00000200, 0x00000000 },
    { 0x00010001, 0x22001040, 0x00000204, 0x00000000 },
    { 0x00010001, 0x22041240, 0x00000220, 0x00000000 },
-   { 0x00000209, 0x23601a28, 0x1e0000e0, 0x00020002 },
-   { 0x00000601, 0x23641a28, 0x000000e2, 0x00000000 },
+   { 0x00000209, 0x23601a28, 0x1e000120, 0x00020002 },
+   { 0x00000601, 0x23641a28, 0x00000122, 0x00000000 },
    { 0x00000401, 0x23680608, 0x00000000, 0x0003001f },
    { 0x00400001, 0x22081040, 0x00690200, 0x00000000 },
    { 0x00600001, 0x23800208, 0x008d0360, 0x00000000 },
diff --git a/src/shaders/post_processing/gen9/pl3_to_pa.g9b b/src/shaders/post_processing/gen9/pl3_to_pa.g9b
index af542ec..91309ee 100644
--- a/src/shaders/post_processing/gen9/pl3_to_pa.g9b
+++ b/src/shaders/post_processing/gen9/pl3_to_pa.g9b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400208, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x000000f0 },
-   { 0x00200001, 0x21141ae8, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x00000130 },
+   { 0x00200001, 0x21541ae8, 0x00450120, 0x00000000 },
    { 0x01000010, 0x20002220, 0x1600005a, 0x00010001 },
    { 0x00000008, 0x22201248, 0x16000044, 0x00000000 },
    { 0x00000005, 0x22201248, 0x16000220, 0x00030003 },
@@ -13,41 +13,41 @@
    { 0x01000010, 0x20001261, 0x16000220, 0x00030003 },
    { 0x00010020, 0x34000005, 0x0e001400, 0x00000180 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000114 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000154 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000118 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000158 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x000001a0 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000118 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000158 },
    { 0x00000001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000120 },
    { 0x00110001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000070 },
    { 0x00110001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000114 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000154 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a01648, 0x10000000, 0xffffffff },
    { 0x00000005, 0x23021288, 0x16000044, 0x00030003 },
-   { 0x00000001, 0x23203ae8, 0x000000f8, 0x00000000 },
-   { 0x00000001, 0x23383ae8, 0x000000f4, 0x00000000 },
+   { 0x00000001, 0x23203ae8, 0x00000138, 0x00000000 },
+   { 0x00000001, 0x23383ae8, 0x00000134, 0x00000000 },
    { 0x00000001, 0x23303ae8, 0x00000060, 0x00000000 },
    { 0x00000001, 0x23343ae8, 0x00000080, 0x00000000 },
    { 0x00000001, 0x23283ae8, 0x000000c0, 0x00000000 },
@@ -56,10 +56,10 @@
    { 0x00000040, 0x233c0208, 0x0600033c, 0x08000000 },
    { 0x00000001, 0x24083ae0, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24083ae0, 0x3e000060, 0x41000000 },
-   { 0x00000248, 0x22e83ae8, 0x3e0000f4, 0x41e00000 },
+   { 0x00000248, 0x22e83ae8, 0x3e000134, 0x41e00000 },
    { 0x00000641, 0x22e43ae8, 0x3e000080, 0x40800000 },
    { 0x00000001, 0x24103ae0, 0x00000060, 0x00000000 },
-   { 0x00000648, 0x22f03ae8, 0x3e0000f4, 0x41000000 },
+   { 0x00000648, 0x22f03ae8, 0x3e000134, 0x41000000 },
    { 0x00000401, 0x22f40608, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x24003660, 0x30000000, 0x00006ea2 },
@@ -127,8 +127,8 @@
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400040, 0x22001a40, 0x166902c0, 0x00000000 },
    { 0x00400040, 0x22082260, 0x1669005c, 0x03a003a0 },
-   { 0x00000209, 0x23601a28, 0x1e0000e0, 0x00010001 },
-   { 0x00000601, 0x23641a28, 0x000000e2, 0x00000000 },
+   { 0x00000209, 0x23601a28, 0x1e000120, 0x00010001 },
+   { 0x00000601, 0x23641a28, 0x00000122, 0x00000000 },
    { 0x00000401, 0x23680608, 0x00000000, 0x0001001f },
    { 0x80400040, 0xc0001248, 0x168a8000, 0x00800080 },
    { 0x80400040, 0xc0201248, 0x168a8020, 0x00800080 },
diff --git a/src/shaders/post_processing/gen9/pl3_to_pl2.g9b b/src/shaders/post_processing/gen9/pl3_to_pl2.g9b
index cea24c7..addd4ba 100644
--- a/src/shaders/post_processing/gen9/pl3_to_pl2.g9b
+++ b/src/shaders/post_processing/gen9/pl3_to_pl2.g9b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400208, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x000000f0 },
-   { 0x00200001, 0x21141ae8, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x00000130 },
+   { 0x00200001, 0x21541ae8, 0x00450120, 0x00000000 },
    { 0x01000010, 0x20002220, 0x1600005a, 0x00010001 },
    { 0x00000008, 0x22201248, 0x16000044, 0x00000000 },
    { 0x00000005, 0x22201248, 0x16000220, 0x00030003 },
@@ -13,41 +13,41 @@
    { 0x01000010, 0x20001261, 0x16000220, 0x00030003 },
    { 0x00010020, 0x34000005, 0x0e001400, 0x00000180 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000114 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000154 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000118 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000158 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x000001a0 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000118 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000158 },
    { 0x00000001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000120 },
    { 0x00110001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000070 },
    { 0x00110001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000114 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000154 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a01648, 0x10000000, 0xffffffff },
    { 0x00000005, 0x23021288, 0x16000044, 0x00030003 },
-   { 0x00000001, 0x23203ae8, 0x000000f8, 0x00000000 },
-   { 0x00000001, 0x23383ae8, 0x000000f4, 0x00000000 },
+   { 0x00000001, 0x23203ae8, 0x00000138, 0x00000000 },
+   { 0x00000001, 0x23383ae8, 0x00000134, 0x00000000 },
    { 0x00000001, 0x23303ae8, 0x00000060, 0x00000000 },
    { 0x00000001, 0x23343ae8, 0x00000080, 0x00000000 },
    { 0x00000001, 0x23283ae8, 0x000000c0, 0x00000000 },
@@ -56,10 +56,10 @@
    { 0x00000040, 0x233c0208, 0x0600033c, 0x08000000 },
    { 0x00000001, 0x24083ae0, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24083ae0, 0x3e000060, 0x41000000 },
-   { 0x00000248, 0x22e83ae8, 0x3e0000f4, 0x41e00000 },
+   { 0x00000248, 0x22e83ae8, 0x3e000134, 0x41e00000 },
    { 0x00000641, 0x22e43ae8, 0x3e000080, 0x40800000 },
    { 0x00000001, 0x24103ae0, 0x00000060, 0x00000000 },
-   { 0x00000648, 0x22f03ae8, 0x3e0000f4, 0x41000000 },
+   { 0x00000648, 0x22f03ae8, 0x3e000134, 0x41000000 },
    { 0x00000401, 0x22f40608, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x24003660, 0x30000000, 0x00006ea2 },
@@ -129,9 +129,9 @@
    { 0x00400040, 0x22081a40, 0x166902c0, 0x02000200 },
    { 0x00600001, 0x23800208, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00208, 0x008d0360, 0x00000000 },
-   { 0x00200201, 0x23801a28, 0x004500e0, 0x00000000 },
-   { 0x00000201, 0x24a01a28, 0x000000e0, 0x00000000 },
-   { 0x00000608, 0x24a41a28, 0x1e0000e2, 0x00010001 },
+   { 0x00200201, 0x23801a28, 0x00450120, 0x00000000 },
+   { 0x00000201, 0x24a01a28, 0x00000120, 0x00000000 },
+   { 0x00000608, 0x24a41a28, 0x1e000122, 0x00010001 },
    { 0x00000401, 0x23880608, 0x00000000, 0x000f000f },
    { 0x00000401, 0x24a80608, 0x00000000, 0x0007000f },
    { 0x80800040, 0xa2001248, 0x16b18200, 0x00800080 },
diff --git a/src/shaders/post_processing/gen9/pl3_to_pl3.g9b b/src/shaders/post_processing/gen9/pl3_to_pl3.g9b
index bb21c62..471d2d7 100644
--- a/src/shaders/post_processing/gen9/pl3_to_pl3.g9b
+++ b/src/shaders/post_processing/gen9/pl3_to_pl3.g9b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400208, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x000000f0 },
-   { 0x00200001, 0x21141ae8, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x00000130 },
+   { 0x00200001, 0x21541ae8, 0x00450120, 0x00000000 },
    { 0x01000010, 0x20002220, 0x1600005a, 0x00010001 },
    { 0x00000008, 0x22201248, 0x16000044, 0x00000000 },
    { 0x00000005, 0x22201248, 0x16000220, 0x00030003 },
@@ -13,41 +13,41 @@
    { 0x01000010, 0x20001261, 0x16000220, 0x00030003 },
    { 0x00010020, 0x34000005, 0x0e001400, 0x00000180 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000114 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000154 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000118 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000158 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x000001a0 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000118 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000158 },
    { 0x00000001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000120 },
    { 0x00110001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000070 },
    { 0x00110001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000114 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000154 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a01648, 0x10000000, 0xffffffff },
    { 0x00000005, 0x23021288, 0x16000044, 0x00030003 },
-   { 0x00000001, 0x23203ae8, 0x000000f8, 0x00000000 },
-   { 0x00000001, 0x23383ae8, 0x000000f4, 0x00000000 },
+   { 0x00000001, 0x23203ae8, 0x00000138, 0x00000000 },
+   { 0x00000001, 0x23383ae8, 0x00000134, 0x00000000 },
    { 0x00000001, 0x23303ae8, 0x00000060, 0x00000000 },
    { 0x00000001, 0x23343ae8, 0x00000080, 0x00000000 },
    { 0x00000001, 0x23283ae8, 0x000000c0, 0x00000000 },
@@ -56,10 +56,10 @@
    { 0x00000040, 0x233c0208, 0x0600033c, 0x08000000 },
    { 0x00000001, 0x24083ae0, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24083ae0, 0x3e000060, 0x41000000 },
-   { 0x00000248, 0x22e83ae8, 0x3e0000f4, 0x41e00000 },
+   { 0x00000248, 0x22e83ae8, 0x3e000134, 0x41e00000 },
    { 0x00000641, 0x22e43ae8, 0x3e000080, 0x40800000 },
    { 0x00000001, 0x24103ae0, 0x00000060, 0x00000000 },
-   { 0x00000648, 0x22f03ae8, 0x3e0000f4, 0x41000000 },
+   { 0x00000648, 0x22f03ae8, 0x3e000134, 0x41000000 },
    { 0x00000401, 0x22f40608, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x24003660, 0x30000000, 0x00006ea2 },
@@ -130,9 +130,9 @@
    { 0x00600001, 0x23800208, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00208, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x25c00208, 0x008d0360, 0x00000000 },
-   { 0x00200201, 0x23801a28, 0x004500e0, 0x00000000 },
-   { 0x00200208, 0x24a01a28, 0x1e4500e0, 0x00010001 },
-   { 0x00200208, 0x25c01a28, 0x1e4500e0, 0x00010001 },
+   { 0x00200201, 0x23801a28, 0x00450120, 0x00000000 },
+   { 0x00200208, 0x24a01a28, 0x1e450120, 0x00010001 },
+   { 0x00200208, 0x25c01a28, 0x1e450120, 0x00010001 },
    { 0x00000401, 0x23880608, 0x00000000, 0x000f000f },
    { 0x00000401, 0x24a80608, 0x00000000, 0x00070007 },
    { 0x00000401, 0x25c80608, 0x00000000, 0x00070007 },
diff --git a/src/shaders/post_processing/gen9/rgbx_to_nv12.g9b b/src/shaders/post_processing/gen9/rgbx_to_nv12.g9b
index 0a602d9..a241c1a 100644
--- a/src/shaders/post_processing/gen9/rgbx_to_nv12.g9b
+++ b/src/shaders/post_processing/gen9/rgbx_to_nv12.g9b
@@ -1,8 +1,8 @@
    { 0x00600001, 0x23600208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23200208, 0x008d0000, 0x00000000 },
    { 0x00600001, 0x23400208, 0x008d0000, 0x00000000 },
-   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x000000f0 },
-   { 0x00200001, 0x21141ae8, 0x004500e0, 0x00000000 },
+   { 0x00600041, 0x20603ae8, 0x3a8d0060, 0x00000130 },
+   { 0x00200001, 0x21541ae8, 0x00450120, 0x00000000 },
    { 0x01000010, 0x20002220, 0x1600005a, 0x00010001 },
    { 0x00000008, 0x22201248, 0x16000044, 0x00000000 },
    { 0x00000005, 0x22201248, 0x16000220, 0x00030003 },
@@ -13,41 +13,41 @@
    { 0x01000010, 0x20001261, 0x16000220, 0x00030003 },
    { 0x00010020, 0x34000005, 0x0e001400, 0x00000180 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000114 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000154 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000118 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000158 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x000001a0 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
-   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000118 },
+   { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000158 },
    { 0x00000001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000120 },
    { 0x00110001, 0x220012e8, 0x00000040, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004114, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004154, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00000040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00000040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00000040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
    { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000220 },
    { 0x00000020, 0x34000004, 0x0e001400, 0x00000070 },
    { 0x00110001, 0x220012e8, 0x00000042, 0x00000000 },
-   { 0x00110040, 0x22203ae8, 0x3a004118, 0x00000200 },
+   { 0x00110040, 0x22203ae8, 0x3a004158, 0x00000200 },
    { 0x00110040, 0x22203ae8, 0x3e000220, 0xc1800000 },
    { 0x00110001, 0x24003ae0, 0x000000c0, 0x00000000 },
    { 0x00110048, 0x20c03ae8, 0x3a000060, 0x00000220 },
    { 0x00000001, 0x24003ae0, 0x000000a0, 0x00000000 },
-   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000114 },
+   { 0x00000048, 0x20a03ae8, 0x3a000080, 0x00000154 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00800001, 0x22a01648, 0x10000000, 0xffffffff },
    { 0x00000005, 0x23021288, 0x16000044, 0x00030003 },
-   { 0x00000001, 0x23203ae8, 0x000000f8, 0x00000000 },
-   { 0x00000001, 0x23383ae8, 0x000000f4, 0x00000000 },
+   { 0x00000001, 0x23203ae8, 0x00000138, 0x00000000 },
+   { 0x00000001, 0x23383ae8, 0x00000134, 0x00000000 },
    { 0x00000001, 0x23303ae8, 0x00000060, 0x00000000 },
    { 0x00000001, 0x23343ae8, 0x00000080, 0x00000000 },
    { 0x00000001, 0x23283ae8, 0x000000c0, 0x00000000 },
@@ -56,10 +56,10 @@
    { 0x00000040, 0x233c0208, 0x0600033c, 0x08000000 },
    { 0x00000001, 0x24083ae0, 0x000000c0, 0x00000000 },
    { 0x00000048, 0x24083ae0, 0x3e000060, 0x41000000 },
-   { 0x00000248, 0x22e83ae8, 0x3e0000f4, 0x41e00000 },
+   { 0x00000248, 0x22e83ae8, 0x3e000134, 0x41e00000 },
    { 0x00000641, 0x22e43ae8, 0x3e000080, 0x40800000 },
    { 0x00000001, 0x24103ae0, 0x00000060, 0x00000000 },
-   { 0x00000648, 0x22f03ae8, 0x3e0000f4, 0x41000000 },
+   { 0x00000648, 0x22f03ae8, 0x3e000134, 0x41000000 },
    { 0x00000401, 0x22f40608, 0x00000000, 0x00000000 },
    { 0x0000007e, 0x00000000, 0x00000000, 0x00000000 },
    { 0x00400001, 0x24003660, 0x30000000, 0x00006ea2 },
@@ -530,9 +530,9 @@
    { 0x00400040, 0x22081a40, 0x166902c0, 0x02000200 },
    { 0x00600001, 0x23800208, 0x008d0360, 0x00000000 },
    { 0x00600001, 0x24a00208, 0x008d0360, 0x00000000 },
-   { 0x00200201, 0x23801a28, 0x004500e0, 0x00000000 },
-   { 0x00000201, 0x24a01a28, 0x000000e0, 0x00000000 },
-   { 0x00000608, 0x24a41a28, 0x1e0000e2, 0x00010001 },
+   { 0x00200201, 0x23801a28, 0x00450120, 0x00000000 },
+   { 0x00000201, 0x24a01a28, 0x00000120, 0x00000000 },
+   { 0x00000608, 0x24a41a28, 0x1e000122, 0x00010001 },
    { 0x00000401, 0x23880608, 0x00000000, 0x000f000f },
    { 0x00000401, 0x24a80608, 0x00000000, 0x0007000f },
    { 0x80800040, 0xa2001248, 0x16b18200, 0x00800080 },
-- 
2.6.2

