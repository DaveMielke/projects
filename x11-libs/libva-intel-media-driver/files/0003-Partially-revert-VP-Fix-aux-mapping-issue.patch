From 77f3ef9bc32b4aca626a5c711ff94aba28852edf Mon Sep 17 00:00:00 2001
From: Yu Kang Ku <yu.kang.ku@intel.com>
Date: Mon, 20 Jan 2020 17:22:48 -0800
Subject: [PATCH 3/3] Partially revert "[VP] Fix aux mapping issue"

This partially reverts commit df5c37ee919a4305f09203bf1bca4bd65a653c94 by
restoring the change associated with the setting of WaAuxTable16KGranular
in media_driver/linux/gen12/ddi/media_sysinfo_g12.cpp.

This is a temporary workaround for addressing a video hardware decoding
regression observed on Chrome OS on Gen12.
---
 media_driver/linux/gen12/ddi/media_sysinfo_g12.cpp | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/media_driver/linux/gen12/ddi/media_sysinfo_g12.cpp b/media_driver/linux/gen12/ddi/media_sysinfo_g12.cpp
index fa2b83c..785100b 100644
--- a/media_driver/linux/gen12/ddi/media_sysinfo_g12.cpp
+++ b/media_driver/linux/gen12/ddi/media_sysinfo_g12.cpp
@@ -146,6 +146,15 @@ static bool InitTglShadowWa(struct GfxDeviceInfo *devInfo,
     waTable->WaDisregardPlatformChecks          = 1;
     waTable->Wa4kAlignUVOffsetNV12LinearSurface = 1;
 
+    // Set it to 0 if GMM support 64K AuxTable
+    MOS_USER_FEATURE_VALUE_DATA userFeatureData;
+    MOS_ZeroMemory(&userFeatureData, sizeof(userFeatureData));
+    MOS_UserFeature_ReadValue_ID(
+        nullptr,
+        __MEDIA_USER_FEATURE_VALUE_AUX_TABLE_16K_GRANULAR_ID,
+        &userFeatureData);
+    waTable->WaAuxTable16KGranular = (userFeatureData.i32Data) ? 1 : 0;
+
     // Set it to 1 if need to support 256B compress mode
     waTable->WaLimit128BMediaCompr = 1;
 
-- 
2.7.4

