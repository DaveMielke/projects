diff -rupN ppp-2.4.5/pppd/ipcp.c ppp-2.4.5.patched/pppd/ipcp.c
--- ppp-2.4.5/pppd/ipcp.c	2012-01-17 15:19:56.530166462 -0800
+++ ppp-2.4.5.patched/pppd/ipcp.c	2012-01-17 15:21:18.371378120 -0800
@@ -90,6 +90,7 @@ struct notifier *ip_down_notifier = NULL
 /* local vars */
 static int default_route_set[NUM_PPP];	/* Have set up a default route */
 static int proxy_arp_set[NUM_PPP];	/* Have created proxy arp entry */
+static bool neg_systemconfig;		/* Skip system configuration */
 static bool usepeerdns;			/* Ask peer for DNS addrs */
 static bool usepeerwins;		/* Ask peer for WINS addrs */
 static int ipcp_is_up;			/* have called np_up() */
@@ -214,6 +215,9 @@ static option_t ipcp_option_list[] = {
     { "usepeerwins", o_bool, &usepeerwins,
       "Ask peer for WINS address(es)", 1 },
 
+    { "nosystemconfig", o_bool, &neg_systemconfig,
+      "Avoid IP and route configuration of ppp device", 1 },
+
     { "netmask", o_special, (void *)setnetmask,
       "set netmask", OPT_PRIO | OPT_A2STRVAL | OPT_STATIC, netmask_str },
 
@@ -1861,7 +1865,8 @@ ipcp_up(f)
 	script_setenv("DNS2", ip_ntoa(go->dnsaddr[1]), 0);
     if (usepeerdns && (go->dnsaddr[0] || go->dnsaddr[1])) {
 	script_setenv("USEPEERDNS", "1", 0);
-	create_resolv(go->dnsaddr[0], go->dnsaddr[1]);
+	if (!neg_systemconfig)
+	    create_resolv(go->dnsaddr[0], go->dnsaddr[1]);
     }
 
     if (go->winsaddr[0])
@@ -1933,8 +1938,12 @@ ipcp_up(f)
 	 */
 	mask = GetMask(go->ouraddr);
 
+	if (neg_systemconfig && debug)
+		warn("Avoiding system configuration by request");
+
 #if !(defined(SVR4) && (defined(SNI) || defined(__USLC__)))
-	if (!sifaddr(f->unit, go->ouraddr, ho->hisaddr, mask)) {
+	if (!neg_systemconfig &&
+	    !sifaddr(f->unit, go->ouraddr, ho->hisaddr, mask)) {
 	    if (debug)
 		warn("Interface configuration failed");
 	    ipcp_close(f->unit, "Interface configuration failed");
@@ -1946,7 +1955,7 @@ ipcp_up(f)
 	ipcp_script(_PATH_IPPREUP, 1);
 
 	/* bring the interface up for IP */
-	if (!sifup(f->unit)) {
+	if (!neg_systemconfig && !sifup(f->unit)) {
 	    if (debug)
 		warn("Interface failed to come up");
 	    ipcp_close(f->unit, "Interface configuration failed");
@@ -1954,7 +1963,8 @@ ipcp_up(f)
 	}
 
 #if (defined(SVR4) && (defined(SNI) || defined(__USLC__)))
-	if (!sifaddr(f->unit, go->ouraddr, ho->hisaddr, mask)) {
+	if (!neg_systemconfig &&
+	    !sifaddr(f->unit, go->ouraddr, ho->hisaddr, mask)) {
 	    if (debug)
 		warn("Interface configuration failed");
 	    ipcp_close(f->unit, "Interface configuration failed");
@@ -1964,12 +1974,13 @@ ipcp_up(f)
 	sifnpmode(f->unit, PPP_IP, NPMODE_PASS);
 
 	/* assign a default route through the interface if required */
-	if (ipcp_wantoptions[f->unit].default_route) 
+	if (!neg_systemconfig && ipcp_wantoptions[f->unit].default_route)
 	    if (sifdefaultroute(f->unit, go->ouraddr, ho->hisaddr))
 		default_route_set[f->unit] = 1;
 
 	/* Make a proxy ARP entry if requested. */
-	if (ho->hisaddr != 0 && ipcp_wantoptions[f->unit].proxy_arp)
+	if (!neg_systemconfig &&
+	    ho->hisaddr != 0 && ipcp_wantoptions[f->unit].proxy_arp)
 	    if (sifproxyarp(f->unit, ho->hisaddr))
 		proxy_arp_set[f->unit] = 1;
 
@@ -2041,7 +2052,8 @@ ipcp_down(f)
 	sifnpmode(f->unit, PPP_IP, NPMODE_QUEUE);
     } else {
 	sifnpmode(f->unit, PPP_IP, NPMODE_DROP);
-	sifdown(f->unit);
+	if (!neg_systemconfig)
+	    sifdown(f->unit);
 	ipcp_clear_addrs(f->unit, ipcp_gotoptions[f->unit].ouraddr,
 			 ipcp_hisoptions[f->unit].hisaddr);
     }
@@ -2072,7 +2084,8 @@ ipcp_clear_addrs(unit, ouraddr, hisaddr)
 	cifdefaultroute(unit, ouraddr, hisaddr);
 	default_route_set[unit] = 0;
     }
-    cifaddr(unit, ouraddr, hisaddr);
+    if (!neg_systemconfig)
+	cifaddr(unit, ouraddr, hisaddr);
 }
 
 
