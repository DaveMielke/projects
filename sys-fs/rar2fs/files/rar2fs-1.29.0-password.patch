From c92a3bfe0a58d72a8ba90ba8812aa36da1719ce0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Fran=C3=A7ois=20Degros?= <fdegros@chromium.org>
Date: Thu, 23 Jul 2020 18:15:29 +1000
Subject: [PATCH] Read password from environment variable PASSWORD

---
 src/rar2fs.c | 90 +++-------------------------------------------------
 1 file changed, 5 insertions(+), 85 deletions(-)

diff --git a/src/rar2fs.c b/src/rar2fs.c
index 08cd9cb..9ff14a2 100644
--- a/src/rar2fs.c
+++ b/src/rar2fs.c
@@ -27,6 +27,7 @@
 */
 #include <platform.h>
 #include <stdio.h>
+#include <stdlib.h>
 #include <sys/stat.h>
 #include <sys/statvfs.h>
 #include <sys/select.h>
@@ -463,95 +464,14 @@ static wchar_t *get_password(const char *file, wchar_t *buf, size_t len)
 static char *get_password(const char *file, char *buf, size_t len)
 #endif
 {
-        char *f[2] = {NULL, NULL};
-        int l[2] = {0, 0};
-        int i;
-        int lx;
-        char *rar;
-        char *tmp;
-        char *s;
-        const prop_alloc_type_ *password;
+        (void)file;
 
-        if (!file)
+        const char *const password = getenv("PASSWORD");
+        if (!password)
                 return NULL;
 
-        rar = strdup(file);
-        tmp = rar;
-        s = OPT_STR(OPT_KEY_SRC, 0);
-
-        if (strstr(rar, s))
-                rar += strlen(s);
-        password = rarconfig_getprop(prop_type_, rar,
-                                RAR_PASSWORD_PROP);
-        if (password) {
-                prop_memcpy_(buf, password, len);
-                free(tmp);
+        if (mbstowcs(buf, password, len) < len)
                 return buf;
-        }
-        password = rarconfig_getprop(prop_type_, basename(rar),
-                                RAR_PASSWORD_PROP);
-        if (password) {
-                prop_memcpy_(buf, password, len);
-                free(tmp);
-                return buf;
-        }
-        free(tmp);
-
-        /* In case this is a new-style volume we must try to figure
-         * out the file format. */
-        (void)get_vformat(file, 1, NULL, &l[0]);
-        lx = l[0];
-
-        while (lx && file[lx] != '.') --lx;
-        if (lx) {
-                l[0] = lx;
-                f[0] = strdup(file);
-        }
-        /* In case this is an old-style volume, or even not a volume at
-         * all, simply placing the index behind .rar or .rNN should be
-         * enough to locate the password file. */
-        lx = strlen(file);
-        if (lx > 4) {
-                l[1] = lx - 4;
-                f[1] = strdup(file);
-        }
-        for (i = 0; i < 2; i++) {
-                if (f[i]) {
-                        char *F = f[i];
-                        strcpy(F + l[i], ".pwd");
-                        FILE *fp = fopen(F, "r");
-                        if (!fp) {
-                                char *tmp1 = strdup(F);
-                                char *tmp2 = strdup(F);
-                                F = malloc(strlen(file) + 8);
-                                sprintf(F, "%s%s%s", __gnu_dirname(tmp1),
-                                                "/.", basename(tmp2));
-                                free(tmp1);
-                                free(tmp2);
-                                fp = fopen(F, "r");
-                                free(F);
-                        }
-                        if (fp) {
-#if RARVER_MAJOR > 4 || ( RARVER_MAJOR == 4 && RARVER_MINOR >= 20 )
-                                buf = fgetws(buf, len, fp);
-                                if (buf) {
-                                        wchar_t *eol = wcspbrk(buf, L"\r\n");
-                                        if (eol != NULL)
-                                                *eol = 0;
-                                }
-#else
-                                buf = fgets(buf, len, fp);
-#endif
-                                fclose(fp);
-                                free(f[0]);
-                                free(f[1]);
-                                return buf;
-                        }
-                }
-        }
-
-        free(f[0]);
-        free(f[1]);
 
         return NULL;
 }
-- 
2.28.0.rc0.105.gf9edc3c819-goog

