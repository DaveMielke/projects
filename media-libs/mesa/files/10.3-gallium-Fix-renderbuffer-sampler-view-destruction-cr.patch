From b2702bef6e83f06d4394ada7252f49985712cc7b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?St=C3=A9phane=20Marchesin?= <marcheu@chromium.org>
Date: Tue, 30 Jan 2018 15:56:43 -0800
Subject: [PATCH] Subject: [PATCH 2/3] gallium: Fix renderbuffer sampler view
 destruction crash

Avoid crash on sampler view destruction when context is gone.

When we delete the context, sometimes there are pending surfaces left.
Since mesa doesn't properly refcount them, the context can go away before
its resources. Until mesa is fixed to properly refcount all these resources,
let's just carry the destroy function on the resource itself, which
gives us a way to free it.

Context:
  https://lists.freedesktop.org/archives/mesa-dev/2011-September/011578.html

BUG=none
TEST=compile
---
 src/gallium/auxiliary/util/u_inlines.h          |  2 +-
 src/gallium/drivers/llvmpipe/lp_state_sampler.c |  4 ++++
 src/gallium/drivers/r300/r300_state.c           |  5 +++++
 src/gallium/drivers/r600/r600_pipe.h            |  2 ++
 src/gallium/drivers/r600/r600_state.c           |  1 +
 src/gallium/drivers/r600/r600_state_common.c    |  4 ++--
 src/gallium/drivers/radeonsi/si_state.c         | 19 ++++++++++---------
 src/gallium/drivers/softpipe/sp_tex_sample.c    |  1 +
 src/gallium/drivers/virgl/virgl_context.c       |  1 +
 src/gallium/include/pipe/p_state.h              |  3 +++
 10 files changed, 30 insertions(+), 12 deletions(-)

diff --git a/src/gallium/auxiliary/util/u_inlines.h b/src/gallium/auxiliary/util/u_inlines.h
index 790352d780..5ccbe0c467 100644
--- a/src/gallium/auxiliary/util/u_inlines.h
+++ b/src/gallium/auxiliary/util/u_inlines.h
@@ -162,7 +162,7 @@ pipe_sampler_view_reference(struct pipe_sampler_view **ptr, struct pipe_sampler_
 
    if (pipe_reference_described(&(*ptr)->reference, &view->reference,
                                 (debug_reference_descriptor)debug_describe_sampler_view))
-      old_view->context->sampler_view_destroy(old_view->context, old_view);
+      old_view->sampler_view_destroy(old_view->context, old_view);
    *ptr = view;
 }
 
diff --git a/src/gallium/drivers/llvmpipe/lp_state_sampler.c b/src/gallium/drivers/llvmpipe/lp_state_sampler.c
index c9aba1a859..1e7c99673f 100644
--- a/src/gallium/drivers/llvmpipe/lp_state_sampler.c
+++ b/src/gallium/drivers/llvmpipe/lp_state_sampler.c
@@ -40,6 +40,9 @@
 #include "lp_debug.h"
 #include "state_tracker/sw_winsys.h"
 
+static void
+llvmpipe_sampler_view_destroy(struct pipe_context *pipe,
+                              struct pipe_sampler_view *view);
 
 static void *
 llvmpipe_create_sampler_state(struct pipe_context *pipe,
@@ -183,6 +186,7 @@ llvmpipe_create_sampler_view(struct pipe_context *pipe,
       view->texture = NULL;
       pipe_resource_reference(&view->texture, texture);
       view->context = pipe;
+      view->sampler_view_destroy = llvmpipe_sampler_view_destroy;
 
 #ifdef DEBUG
      /*
diff --git a/src/gallium/drivers/r300/r300_state.c b/src/gallium/drivers/r300/r300_state.c
index 437df48826..192318361c 100644
--- a/src/gallium/drivers/r300/r300_state.c
+++ b/src/gallium/drivers/r300/r300_state.c
@@ -46,6 +46,10 @@
 #include "r300_texture.h"
 #include "r300_vs.h"
 
+static void
+r300_sampler_view_destroy(struct pipe_context *pipe,
+                          struct pipe_sampler_view *view);
+
 /* r300_state: Functions used to intialize state context by translating
  * Gallium state objects into semi-native r300 state objects. */
 
@@ -1609,6 +1613,7 @@ r300_create_sampler_view_custom(struct pipe_context *pipe,
         view->base.reference.count = 1;
         view->base.context = pipe;
         view->base.texture = NULL;
+        view->base.sampler_view_destroy = r300_sampler_view_destroy;
         pipe_resource_reference(&view->base.texture, texture);
 
 	view->width0_override = width0_override;
diff --git a/src/gallium/drivers/r600/r600_pipe.h b/src/gallium/drivers/r600/r600_pipe.h
index ad7e499be2..fe3c9b8567 100644
--- a/src/gallium/drivers/r600/r600_pipe.h
+++ b/src/gallium/drivers/r600/r600_pipe.h
@@ -794,6 +794,8 @@ void r600_sampler_views_dirty(struct r600_context *rctx,
 			      struct r600_samplerview_state *state);
 void r600_sampler_states_dirty(struct r600_context *rctx,
 			       struct r600_sampler_states *state);
+void r600_sampler_view_destroy(struct pipe_context *ctx,
+                               struct pipe_sampler_view *state);
 void r600_constant_buffers_dirty(struct r600_context *rctx, struct r600_constbuf_state *state);
 void r600_set_sample_locations_constant_buffer(struct r600_context *rctx);
 uint32_t r600_translate_stencil_op(int s_op);
diff --git a/src/gallium/drivers/r600/r600_state.c b/src/gallium/drivers/r600/r600_state.c
index 3102905537..b46e70e5fd 100644
--- a/src/gallium/drivers/r600/r600_state.c
+++ b/src/gallium/drivers/r600/r600_state.c
@@ -682,6 +682,7 @@ r600_create_sampler_view_custom(struct pipe_context *ctx,
 	view->base.texture = texture;
 	view->base.reference.count = 1;
 	view->base.context = ctx;
+	view->base.sampler_view_destroy = r600_sampler_view_destroy;
 
 	if (texture->target == PIPE_BUFFER)
 		return texture_buffer_sampler_view(view, texture->width0, 1);
diff --git a/src/gallium/drivers/r600/r600_state_common.c b/src/gallium/drivers/r600/r600_state_common.c
index b8d4b8f70f..314ed453cd 100644
--- a/src/gallium/drivers/r600/r600_state_common.c
+++ b/src/gallium/drivers/r600/r600_state_common.c
@@ -408,8 +408,8 @@ static void r600_delete_rs_state(struct pipe_context *ctx, void *state)
 	FREE(rs);
 }
 
-static void r600_sampler_view_destroy(struct pipe_context *ctx,
-				      struct pipe_sampler_view *state)
+void r600_sampler_view_destroy(struct pipe_context *ctx,
+			       struct pipe_sampler_view *state)
 {
 	struct r600_pipe_sampler_view *view = (struct r600_pipe_sampler_view *)state;
 
diff --git a/src/gallium/drivers/radeonsi/si_state.c b/src/gallium/drivers/radeonsi/si_state.c
index fcf4928e65..0f4c12c002 100644
--- a/src/gallium/drivers/radeonsi/si_state.c
+++ b/src/gallium/drivers/radeonsi/si_state.c
@@ -3783,6 +3783,15 @@ si_make_texture_descriptor(struct si_screen *screen,
 	}
 }
 
+static void si_sampler_view_destroy(struct pipe_context *ctx,
+                                    struct pipe_sampler_view *state)
+{
+        struct si_sampler_view *view = (struct si_sampler_view *)state;
+
+        pipe_resource_reference(&state->texture, NULL);
+        FREE(view);
+}
+
 /**
  * Create a sampler view.
  *
@@ -3818,6 +3827,7 @@ si_create_sampler_view_custom(struct pipe_context *ctx,
 	view->base.texture = NULL;
 	view->base.reference.count = 1;
 	view->base.context = ctx;
+	view->base.sampler_view_destroy = si_sampler_view_destroy;
 
 	assert(texture);
 	pipe_resource_reference(&view->base.texture, texture);
@@ -3953,15 +3963,6 @@ si_create_sampler_view(struct pipe_context *ctx,
 					     texture ? texture->height0 : 0, 0);
 }
 
-static void si_sampler_view_destroy(struct pipe_context *ctx,
-				    struct pipe_sampler_view *state)
-{
-	struct si_sampler_view *view = (struct si_sampler_view *)state;
-
-	pipe_resource_reference(&state->texture, NULL);
-	FREE(view);
-}
-
 static bool wrap_mode_uses_border_color(unsigned wrap, bool linear_filter)
 {
 	return wrap == PIPE_TEX_WRAP_CLAMP_TO_BORDER ||
diff --git a/src/gallium/drivers/softpipe/sp_tex_sample.c b/src/gallium/drivers/softpipe/sp_tex_sample.c
index 92c78da86f..de2b074b45 100644
--- a/src/gallium/drivers/softpipe/sp_tex_sample.c
+++ b/src/gallium/drivers/softpipe/sp_tex_sample.c
@@ -3467,6 +3467,7 @@ softpipe_create_sampler_view(struct pipe_context *pipe,
       view->texture = NULL;
       pipe_resource_reference(&view->texture, resource);
       view->context = pipe;
+      view->sampler_view_destroy = pipe->sampler_view_destroy;
 
 #ifdef DEBUG
      /*
diff --git a/src/gallium/drivers/virgl/virgl_context.c b/src/gallium/drivers/virgl/virgl_context.c
index 232d2951c0..56ce506949 100644
--- a/src/gallium/drivers/virgl/virgl_context.c
+++ b/src/gallium/drivers/virgl/virgl_context.c
@@ -678,6 +678,7 @@ static struct pipe_sampler_view *virgl_create_sampler_view(struct pipe_context *
    grview->base.context = ctx;
    pipe_resource_reference(&grview->base.texture, texture);
    grview->handle = handle;
+   grview->base.sampler_view_destroy = ctx->sampler_view_destroy;
    return &grview->base;
 }
 
diff --git a/src/gallium/include/pipe/p_state.h b/src/gallium/include/pipe/p_state.h
index 10d21db28c..ce2fd132e9 100644
--- a/src/gallium/include/pipe/p_state.h
+++ b/src/gallium/include/pipe/p_state.h
@@ -461,6 +461,9 @@ struct pipe_sampler_view
          unsigned size;     /**< size of the readable sub-range in bytes */
       } buf;
    } u;
+
+   void (*sampler_view_destroy)(struct pipe_context *ctx,
+                                struct pipe_sampler_view *view);
 };
 
 
-- 
2.16.0.rc1.238.g530d649a79-goog

