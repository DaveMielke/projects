The original patch disabled MSAA because it caused a corruption issue:
http://code.google.com/p/chromium-os/issues/detail?id=32528

MSAA now seems to work, but it causes GPU lockups, so is still disabled:
http://code.google.com/p/chromium-os/issues/detail?id=36508

diff --git a/src/mesa/drivers/dri/intel/intel_fbo.c b/src/mesa/drivers/dri/intel/intel_fbo.c
index 10a8c7f..4d7c4d6 100644
--- a/src/mesa/drivers/dri/intel/intel_fbo.c
+++ b/src/mesa/drivers/dri/intel/intel_fbo.c
@@ -185,34 +185,7 @@ intel_unmap_renderbuffer(struct gl_context *ctx,
 unsigned
 intel_quantize_num_samples(struct intel_screen *intel, unsigned num_samples)
 {
-   switch (intel->gen) {
-   case 6:
-      /* Gen6 supports only 4x multisampling. */
-      if (num_samples > 0)
-         return 4;
-      else
-         return 0;
-   case 7:
-      /* Gen7 supports 4x and 8x multisampling. */
-      if (num_samples > 4)
-         return 8;
-      else if (num_samples > 0)
-         return 4;
-      else
-         return 0;
-      return 0;
-   default:
-      /* MSAA unsupported.  However, a careful reading of
-       * EXT_framebuffer_multisample reveals that we need to permit
-       * num_samples to be 1 (since num_samples is permitted to be as high as
-       * GL_MAX_SAMPLES, and GL_MAX_SAMPLES must be at least 1).  Since
-       * platforms before Gen6 don't support MSAA, this is safe, because
-       * multisampling won't happen anyhow.
-       */
-      if (num_samples > 0)
-         return 1;
-      return 0;
-   }
+   return 0;
 }
 
 
