From fcfdab759089d5f6e56dc5422c31cd30c38ebfd1 Mon Sep 17 00:00:00 2001
From: Rufus Hamade <rufus.hamade@imgtec.com>
Date: Fri, 6 May 2016 12:57:54 +0100
Subject: [PATCH 100/102] HACK: dri/pvr: Assume drawable is always a PBUFFER

The PVR DRI driver needs to know the nature of the drawable being
allocated, as it uses different allocation and synchronisation
strategies depending on whether the buffer is a pbuffer or window.
Unfortunately, the DRI interface doesn't tell us what the drawable
actually represents.

For surfaceless, we can hard-code the type to pbuffer as there are
no other supported drawables.  But this change would break other
windowing systems.

Change-Id: I7af49e04bfca6496d571260d3a78f5d7707f61e0
---
 src/mesa/drivers/dri/pvr/pvrdri.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/mesa/drivers/dri/pvr/pvrdri.c b/src/mesa/drivers/dri/pvr/pvrdri.c
index 43f1f67..f179871 100644
--- a/src/mesa/drivers/dri/pvr/pvrdri.c
+++ b/src/mesa/drivers/dri/pvr/pvrdri.c
@@ -1246,7 +1246,7 @@ static GLboolean PVRDRIMakeCurrent(__DRIcontext *psDRIContext,
 
 	if (psPVRWrite != NULL)
 	{
-		if (!PVRDRIDrawableInit(psPVRWrite, PVRDRI_SURFACE_WINDOW))
+		if (!PVRDRIDrawableInit(psPVRWrite, PVRDRI_SURFACE_PBUFFER))
 		{
 			__driUtilMessage("%s: Couldn't initialise write drawable",
 					 __func__);
@@ -1256,7 +1256,7 @@ static GLboolean PVRDRIMakeCurrent(__DRIcontext *psDRIContext,
 
 	if (psPVRRead != NULL)
 	{
-		if (!PVRDRIDrawableInit(psPVRRead, PVRDRI_SURFACE_WINDOW))
+		if (!PVRDRIDrawableInit(psPVRRead, PVRDRI_SURFACE_PBUFFER))
 		{
 			__driUtilMessage("%s: Couldn't initialise read drawable",
 					 __func__);
-- 
1.9.1

