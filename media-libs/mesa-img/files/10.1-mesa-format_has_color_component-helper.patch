From 2370a3a3700ad4e204f4ff77c7cce3d61e3dbd6e Mon Sep 17 00:00:00 2001
From: Kenneth Graunke <kenneth@whitecape.org>
Date: Mon, 24 Mar 2014 01:16:57 -0700
Subject: [PATCH 1/4] mesa: Introduce a _mesa_format_has_color_component()
 helper.

When considering color write masks, we often want to know whether an
RGBA component actually contains any meaningful data.  This function
provides an easy way to answer that question, and handles luminance,
intensity, and alpha formats correctly.

Signed-off-by: Kenneth Graunke <kenneth@whitecape.org>
Reviewed-by: Brian Paul <brianp@vmware.com>
Reviewed-by: Eric Anholt <eric@anholt.net>
Reviewed-by: Ian Romanick <ian.d.romanick@intel.com>
Tested-by: Dylan Baker <baker.dylan.c@gmail.com>
(cherry picked from commit 92234b1b2aaf6ba68e786498806cefd4bd99dabc)
(minor modifications from upstream patch to s/mesa_format/gl_format)
Signed-off-by: James Ausmus <james.ausmus@intel.com>
---
 src/mesa/main/formats.c | 29 +++++++++++++++++++++++++++++
 src/mesa/main/formats.h |  4 ++++
 2 files changed, 33 insertions(+)

diff --git a/src/mesa/main/formats.c b/src/mesa/main/formats.c
index 07d2a72..d5fe427 100644
--- a/src/mesa/main/formats.c
+++ b/src/mesa/main/formats.c
@@ -2117,6 +2117,35 @@ _mesa_format_num_components(gl_format format)
 
 
 /**
+ * Returns true if a color format has data stored in the R/G/B/A channels,
+ * given an index from 0 to 3.
+ */
+bool
+_mesa_format_has_color_component(gl_format format, int component)
+{
+   const struct gl_format_info *info = _mesa_get_format_info(format);
+
+   assert(info->BaseFormat != GL_DEPTH_COMPONENT &&
+          info->BaseFormat != GL_DEPTH_STENCIL &&
+          info->BaseFormat != GL_STENCIL_INDEX);
+
+   switch (component) {
+   case 0:
+      return (info->RedBits + info->IntensityBits + info->LuminanceBits) > 0;
+   case 1:
+      return (info->GreenBits + info->IntensityBits + info->LuminanceBits) > 0;
+   case 2:
+      return (info->BlueBits + info->IntensityBits + info->LuminanceBits) > 0;
+   case 3:
+      return (info->AlphaBits + info->IntensityBits) > 0;
+   default:
+      assert(!"Invalid color component: must be 0..3");
+      return false;
+   }
+}
+
+
+/**
  * Return number of bytes needed to store an image of the given size
  * in the given format.
  */
diff --git a/src/mesa/main/formats.h b/src/mesa/main/formats.h
index 64b4b9a..22f16b5 100644
--- a/src/mesa/main/formats.h
+++ b/src/mesa/main/formats.h
@@ -34,6 +34,7 @@
 
 
 #include <GL/gl.h>
+#include <stdbool.h>
 
 
 #ifdef __cplusplus
@@ -371,6 +372,9 @@ _mesa_get_uncompressed_format(gl_format format);
 extern GLuint
 _mesa_format_num_components(gl_format format);
 
+extern bool
+_mesa_format_has_color_component(gl_format format, int component);
+
 GLboolean
 _mesa_format_matches_format_and_type(gl_format gl_format,
 				     GLenum format, GLenum type,
-- 
1.8.4

