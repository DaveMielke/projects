From 4493bc809f13d7c067ac0da360e40231a450b321 Mon Sep 17 00:00:00 2001
From: Brendan King <Brendan.King@imgtec.com>
Date: Mon, 10 Mar 2014 13:43:45 +0000
Subject: [PATCH 07/40] Separate EXT_framebuffer_object from ARB version

This patch separates the EXT_framebuffer_object entry points from the ARB
equivalents.

Probably not all this separation is necessary; it looks like only
	BindRenderbuffer
	BindFramebuffer
	GetFramebufferAttachmentParameteriv
take advantage of the split.

Next time this patch is implemented, see if it can be trimmed down to
just the above functions, as it may be more upstreamable.

We may need to implement the EXT restrictions if we want to upstream.
---
 src/mapi/glapi/gen/EXT_framebuffer_object.xml | 30 +++++-----
 src/mesa/main/fbobject.c                      | 81 +++++++++++++++++++++++++++
 src/mesa/main/fbobject.h                      | 51 +++++++++++++++++
 src/mesa/main/genmipmap.c                     |  6 ++
 src/mesa/main/genmipmap.h                     |  3 +
 5 files changed, 156 insertions(+), 15 deletions(-)

diff --git a/src/mapi/glapi/gen/EXT_framebuffer_object.xml b/src/mapi/glapi/gen/EXT_framebuffer_object.xml
index 9ae0291..40b1717 100644
--- a/src/mapi/glapi/gen/EXT_framebuffer_object.xml
+++ b/src/mapi/glapi/gen/EXT_framebuffer_object.xml
@@ -73,7 +73,7 @@
     </enum>
     <enum name="INVALID_FRAMEBUFFER_OPERATION_EXT"        value="0x0506"/>
 
-    <function name="IsRenderbufferEXT" alias="IsRenderbuffer">
+    <function name="IsRenderbufferEXT">
         <param name="renderbuffer" type="GLuint"/>
 	<return type="GLboolean"/>
     </function>
@@ -84,30 +84,30 @@
         <glx rop="4316"/>
     </function>
 
-    <function name="DeleteRenderbuffersEXT" alias="DeleteRenderbuffers">
+    <function name="DeleteRenderbuffersEXT">
         <param name="n" type="GLsizei"/>
         <param name="renderbuffers" type="const GLuint *"/>
     </function>
 
-    <function name="GenRenderbuffersEXT" alias="GenRenderbuffers">
+    <function name="GenRenderbuffersEXT">
         <param name="n" type="GLsizei"/>
         <param name="renderbuffers" type="GLuint *"/>
     </function>
 
-    <function name="RenderbufferStorageEXT" alias="RenderbufferStorage">
+    <function name="RenderbufferStorageEXT">
         <param name="target" type="GLenum"/>
         <param name="internalformat" type="GLenum"/>
         <param name="width" type="GLsizei"/>
         <param name="height" type="GLsizei"/>
     </function>
 
-    <function name="GetRenderbufferParameterivEXT" alias="GetRenderbufferParameteriv">
+    <function name="GetRenderbufferParameterivEXT">
         <param name="target" type="GLenum"/>
         <param name="pname" type="GLenum"/>
         <param name="params" type="GLint *"/>
     </function>
 
-    <function name="IsFramebufferEXT" alias="IsFramebuffer">
+    <function name="IsFramebufferEXT">
         <param name="framebuffer" type="GLuint"/>
 	<return type="GLboolean"/>
     </function>
@@ -118,22 +118,22 @@
         <glx rop="4319"/>
     </function>
 
-    <function name="DeleteFramebuffersEXT" alias="DeleteFramebuffers">
+    <function name="DeleteFramebuffersEXT">
         <param name="n" type="GLsizei"/>
         <param name="framebuffers" type="const GLuint *"/>
     </function>
 
-    <function name="GenFramebuffersEXT" alias="GenFramebuffers">
+    <function name="GenFramebuffersEXT">
         <param name="n" type="GLsizei"/>
         <param name="framebuffers" type="GLuint *"/>
     </function>
 
-    <function name="CheckFramebufferStatusEXT" alias="CheckFramebufferStatus">
+    <function name="CheckFramebufferStatusEXT">
         <param name="target" type="GLenum"/>
 	<return type="GLenum"/>
     </function>
 
-    <function name="FramebufferTexture1DEXT" alias="FramebufferTexture1D">
+    <function name="FramebufferTexture1DEXT">
         <param name="target" type="GLenum"/>
         <param name="attachment" type="GLenum"/>
         <param name="textarget" type="GLenum"/>
@@ -141,7 +141,7 @@
         <param name="level" type="GLint"/>
     </function>
 
-    <function name="FramebufferTexture2DEXT" alias="FramebufferTexture2D">
+    <function name="FramebufferTexture2DEXT">
         <param name="target" type="GLenum"/>
         <param name="attachment" type="GLenum"/>
         <param name="textarget" type="GLenum"/>
@@ -149,7 +149,7 @@
         <param name="level" type="GLint"/>
     </function>
 
-    <function name="FramebufferTexture3DEXT" alias="FramebufferTexture3D">
+    <function name="FramebufferTexture3DEXT">
         <param name="target" type="GLenum"/>
         <param name="attachment" type="GLenum"/>
         <param name="textarget" type="GLenum"/>
@@ -158,21 +158,21 @@
         <param name="zoffset" type="GLint"/>
     </function>
 
-    <function name="FramebufferRenderbufferEXT" alias="FramebufferRenderbuffer">
+    <function name="FramebufferRenderbufferEXT">
         <param name="target" type="GLenum"/>
         <param name="attachment" type="GLenum"/>
         <param name="renderbuffertarget" type="GLenum"/>
         <param name="renderbuffer" type="GLuint"/>
     </function>
 
-    <function name="GetFramebufferAttachmentParameterivEXT" alias="GetFramebufferAttachmentParameteriv">
+    <function name="GetFramebufferAttachmentParameterivEXT">
         <param name="target" type="GLenum"/>
         <param name="attachment" type="GLenum"/>
         <param name="pname" type="GLenum"/>
         <param name="params" type="GLint *"/>
     </function>
 
-    <function name="GenerateMipmapEXT" alias="GenerateMipmap">
+    <function name="GenerateMipmapEXT">
         <param name="target" type="GLenum"/>
     </function>
 </category>
diff --git a/src/mesa/main/fbobject.c b/src/mesa/main/fbobject.c
index f601f84..1c3a35e 100644
--- a/src/mesa/main/fbobject.c
+++ b/src/mesa/main/fbobject.c
@@ -1539,6 +1539,11 @@ _mesa_detach_renderbuffer(struct gl_context *ctx,
    return progress;
 }
 
+GLboolean GLAPIENTRY
+_mesa_IsRenderbufferEXT(GLuint renderbuffer)
+{
+   return _mesa_IsRenderbuffer(renderbuffer);
+}
 
 void GLAPIENTRY
 _mesa_DeleteRenderbuffers(GLsizei n, const GLuint *renderbuffers)
@@ -2169,6 +2174,12 @@ renderbuffer_storage_target(GLenum target, GLenum internalFormat,
 
 
 void GLAPIENTRY
+_mesa_DeleteRenderbuffersEXT(GLsizei n, const GLuint *renderbuffers)
+{
+   _mesa_DeleteRenderbuffers(n, renderbuffers);
+}
+
+void GLAPIENTRY
 _mesa_EGLImageTargetRenderbufferStorageOES(GLenum target, GLeglImageOES image)
 {
    struct gl_renderbuffer *rb;
@@ -2198,6 +2209,11 @@ _mesa_EGLImageTargetRenderbufferStorageOES(GLenum target, GLeglImageOES image)
    ctx->Driver.EGLImageTargetRenderbufferStorage(ctx, rb, image);
 }
 
+void GLAPIENTRY
+_mesa_GenRenderbuffersEXT(GLsizei n, GLuint *renderbuffers)
+{
+   _mesa_GenRenderbuffers(n, renderbuffers);
+}
 
 /**
  * Helper function for _mesa_GetRenderbufferParameteriv() and
@@ -2230,6 +2246,12 @@ _mesa_RenderbufferStorage(GLenum target, GLenum internalFormat,
                                NO_SAMPLES, "glRenderbufferStorage");
 }
 
+void GLAPIENTRY
+_mesa_RenderbufferStorageEXT(GLenum target, GLenum internalFormat,
+                             GLsizei width, GLsizei height)
+{
+   _mesa_RenderbufferStorage(target, internalFormat, width, height);
+}
 
 void GLAPIENTRY
 _mesa_RenderbufferStorageMultisample(GLenum target, GLsizei samples,
@@ -2367,6 +2389,11 @@ _mesa_GetNamedRenderbufferParameteriv(GLuint renderbuffer, GLenum pname,
                                  "glGetNamedRenderbufferParameteriv");
 }
 
+void GLAPIENTRY
+_mesa_GetRenderbufferParameterivEXT(GLenum target, GLenum pname, GLint *params)
+{
+   _mesa_GetRenderbufferParameteriv(target, pname, params);
+}
 
 GLboolean GLAPIENTRY
 _mesa_IsFramebuffer(GLuint framebuffer)
@@ -2381,6 +2408,11 @@ _mesa_IsFramebuffer(GLuint framebuffer)
    return GL_FALSE;
 }
 
+GLboolean GLAPIENTRY
+_mesa_IsFramebufferEXT(GLuint framebuffer)
+{
+  return _mesa_IsFramebuffer(framebuffer);
+}
 
 /**
  * Check if any of the attachments of the given framebuffer are textures
@@ -2610,6 +2642,11 @@ _mesa_DeleteFramebuffers(GLsizei n, const GLuint *framebuffers)
    }
 }
 
+void GLAPIENTRY
+_mesa_DeleteFramebuffersEXT(GLsizei n, const GLuint *framebuffers)
+{
+   _mesa_DeleteFramebuffers(n, framebuffers);
+}
 
 /**
  * This is the implementation for glGenFramebuffers and glCreateFramebuffers.
@@ -2656,6 +2693,11 @@ create_framebuffers(GLsizei n, GLuint *framebuffers, bool dsa)
    }
 }
 
+void GLAPIENTRY
+_mesa_GenFramebuffersEXT(GLsizei n, GLuint *framebuffers)
+{
+   _mesa_GenFramebuffers(n, framebuffers);
+}
 
 void GLAPIENTRY
 _mesa_GenFramebuffers(GLsizei n, GLuint *framebuffers)
@@ -2695,6 +2737,11 @@ _mesa_check_framebuffer_status(struct gl_context *ctx,
    return buffer->_Status;
 }
 
+GLenum GLAPIENTRY
+_mesa_CheckFramebufferStatusEXT(GLenum target)
+{
+   return _mesa_CheckFramebufferStatus(target);
+}
 
 GLenum GLAPIENTRY
 _mesa_CheckFramebufferStatus(GLenum target)
@@ -3191,6 +3238,12 @@ framebuffer_texture_with_dims(int dims, GLenum target,
                              layer, GL_FALSE, caller);
 }
 
+void GLAPIENTRY
+_mesa_FramebufferTexture1DEXT(GLenum target, GLenum attachment,
+                              GLenum textarget, GLuint texture, GLint level)
+{
+   _mesa_FramebufferTexture1D(target, attachment, textarget, texture, level);
+}
 
 void GLAPIENTRY
 _mesa_FramebufferTexture1D(GLenum target, GLenum attachment,
@@ -3209,6 +3262,12 @@ _mesa_FramebufferTexture2D(GLenum target, GLenum attachment,
                                  level, 0, "glFramebufferTexture2D");
 }
 
+void GLAPIENTRY
+_mesa_FramebufferTexture2DEXT(GLenum target, GLenum attachment,
+                              GLenum textarget, GLuint texture, GLint level)
+{
+   _mesa_FramebufferTexture2D(target, attachment, textarget, texture, level);
+}
 
 void GLAPIENTRY
 _mesa_FramebufferTexture3D(GLenum target, GLenum attachment,
@@ -3265,6 +3324,14 @@ _mesa_FramebufferTextureLayer(GLenum target, GLenum attachment,
                              layer, GL_FALSE, func);
 }
 
+void GLAPIENTRY
+_mesa_FramebufferTexture3DEXT(GLenum target, GLenum attachment,
+                              GLenum textarget, GLuint texture,
+                              GLint level, GLint zoffset)
+{
+   _mesa_FramebufferTexture3D(target, attachment, textarget, texture,
+                              level, zoffset);
+}
 
 void GLAPIENTRY
 _mesa_NamedFramebufferTextureLayer(GLuint framebuffer, GLenum attachment,
@@ -3437,6 +3504,14 @@ _mesa_framebuffer_renderbuffer(struct gl_context *ctx,
    _mesa_update_framebuffer_visual(ctx, fb);
 }
 
+void GLAPIENTRY
+_mesa_FramebufferRenderbufferEXT(GLenum target, GLenum attachment,
+                                 GLenum renderbufferTarget,
+                                 GLuint renderbuffer)
+{
+   _mesa_FramebufferRenderbuffer(target, attachment, renderbufferTarget,
+                                 renderbuffer);
+}
 
 void GLAPIENTRY
 _mesa_FramebufferRenderbuffer(GLenum target, GLenum attachment,
@@ -3800,6 +3875,12 @@ invalid_pname_enum:
    return;
 }
 
+void GLAPIENTRY
+_mesa_GetFramebufferAttachmentParameterivEXT(GLenum target, GLenum attachment,
+                                             GLenum pname, GLint *params)
+{
+   _mesa_GetFramebufferAttachmentParameteriv(target, attachment, pname, params);
+}
 
 void GLAPIENTRY
 _mesa_GetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment,
diff --git a/src/mesa/main/fbobject.h b/src/mesa/main/fbobject.h
index 8dad0ff..e283b0c 100644
--- a/src/mesa/main/fbobject.h
+++ b/src/mesa/main/fbobject.h
@@ -136,6 +136,9 @@ _mesa_get_framebuffer_attachment_parameter(struct gl_context *ctx,
 extern GLboolean GLAPIENTRY
 _mesa_IsRenderbuffer(GLuint renderbuffer);
 
+extern GLboolean GLAPIENTRY
+_mesa_IsRenderbufferEXT(GLuint renderbuffer);
+
 extern void GLAPIENTRY
 _mesa_BindRenderbuffer(GLenum target, GLuint renderbuffer);
 
@@ -146,9 +149,15 @@ extern void GLAPIENTRY
 _mesa_DeleteRenderbuffers(GLsizei n, const GLuint *renderbuffers);
 
 extern void GLAPIENTRY
+_mesa_DeleteRenderbuffersEXT(GLsizei n, const GLuint *renderbuffers);
+
+extern void GLAPIENTRY
 _mesa_GenRenderbuffers(GLsizei n, GLuint *renderbuffers);
 
 extern void GLAPIENTRY
+_mesa_GenRenderbuffersEXT(GLsizei n, GLuint *renderbuffers);
+
+extern void GLAPIENTRY
 _mesa_CreateRenderbuffers(GLsizei n, GLuint *renderbuffers);
 
 extern void GLAPIENTRY
@@ -156,6 +165,10 @@ _mesa_RenderbufferStorage(GLenum target, GLenum internalformat,
                              GLsizei width, GLsizei height);
 
 extern void GLAPIENTRY
+_mesa_RenderbufferStorageEXT(GLenum target, GLenum internalformat,
+                             GLsizei width, GLsizei height);
+
+extern void GLAPIENTRY
 _mesa_RenderbufferStorageMultisample(GLenum target, GLsizei samples,
                                      GLenum internalformat,
                                      GLsizei width, GLsizei height);
@@ -180,6 +193,10 @@ extern void GLAPIENTRY
 _mesa_GetRenderbufferParameteriv(GLenum target, GLenum pname,
                                     GLint *params);
 
+extern void GLAPIENTRY
+_mesa_GetRenderbufferParameterivEXT(GLenum target, GLenum pname,
+                                    GLint *params);
+
 void GLAPIENTRY
 _mesa_GetNamedRenderbufferParameteriv(GLuint renderbuffer, GLenum pname,
                                       GLint *params);
@@ -187,6 +204,9 @@ _mesa_GetNamedRenderbufferParameteriv(GLuint renderbuffer, GLenum pname,
 extern GLboolean GLAPIENTRY
 _mesa_IsFramebuffer(GLuint framebuffer);
 
+extern GLboolean GLAPIENTRY
+_mesa_IsFramebufferEXT(GLuint framebuffer);
+
 extern void GLAPIENTRY
 _mesa_BindFramebuffer(GLenum target, GLuint framebuffer);
 
@@ -197,15 +217,24 @@ extern void GLAPIENTRY
 _mesa_DeleteFramebuffers(GLsizei n, const GLuint *framebuffers);
 
 extern void GLAPIENTRY
+_mesa_DeleteFramebuffersEXT(GLsizei n, const GLuint *framebuffers);
+
+extern void GLAPIENTRY
 _mesa_GenFramebuffers(GLsizei n, GLuint *framebuffers);
 
 extern void GLAPIENTRY
+_mesa_GenFramebuffersEXT(GLsizei n, GLuint *framebuffers);
+
+extern void GLAPIENTRY
 _mesa_CreateFramebuffers(GLsizei n, GLuint *framebuffers);
 
 extern GLenum GLAPIENTRY
 _mesa_CheckFramebufferStatus(GLenum target);
 
 extern GLenum GLAPIENTRY
+_mesa_CheckFramebufferStatusEXT(GLenum target);
+
+extern GLenum GLAPIENTRY
 _mesa_CheckNamedFramebufferStatus(GLuint framebuffer, GLenum target);
 
 extern void GLAPIENTRY
@@ -213,15 +242,28 @@ _mesa_FramebufferTexture1D(GLenum target, GLenum attachment,
                               GLenum textarget, GLuint texture, GLint level);
 
 extern void GLAPIENTRY
+_mesa_FramebufferTexture1DEXT(GLenum target, GLenum attachment,
+                              GLenum textarget, GLuint texture, GLint level);
+
+extern void GLAPIENTRY
 _mesa_FramebufferTexture2D(GLenum target, GLenum attachment,
                               GLenum textarget, GLuint texture, GLint level);
 
 extern void GLAPIENTRY
+_mesa_FramebufferTexture2DEXT(GLenum target, GLenum attachment,
+                              GLenum textarget, GLuint texture, GLint level);
+
+extern void GLAPIENTRY
 _mesa_FramebufferTexture3D(GLenum target, GLenum attachment,
                               GLenum textarget, GLuint texture,
                               GLint level, GLint layer);
 
 extern void GLAPIENTRY
+_mesa_FramebufferTexture3DEXT(GLenum target, GLenum attachment,
+                              GLenum textarget, GLuint texture,
+                              GLint level, GLint zoffset);
+
+extern void GLAPIENTRY
 _mesa_FramebufferTextureLayer(GLenum target, GLenum attachment,
                                  GLuint texture, GLint level, GLint layer);
 
@@ -243,6 +285,11 @@ _mesa_FramebufferRenderbuffer(GLenum target, GLenum attachment,
                                  GLuint renderbuffer);
 
 extern void GLAPIENTRY
+_mesa_FramebufferRenderbufferEXT(GLenum target, GLenum attachment,
+                                 GLenum renderbuffertarget,
+                                 GLuint renderbuffer);
+
+extern void GLAPIENTRY
 _mesa_NamedFramebufferRenderbuffer(GLuint framebuffer, GLenum attachment,
                                    GLenum renderbuffertarget,
                                    GLuint renderbuffer);
@@ -264,6 +311,10 @@ _mesa_GetNamedFramebufferParameteriv(GLuint framebuffer, GLenum pname,
                                      GLint *param);
 
 extern void GLAPIENTRY
+_mesa_GetFramebufferAttachmentParameterivEXT(GLenum target, GLenum attachment,
+                                             GLenum pname, GLint *params);
+
+extern void GLAPIENTRY
 _mesa_InvalidateSubFramebuffer(GLenum target, GLsizei numAttachments,
                                const GLenum *attachments, GLint x, GLint y,
                                GLsizei width, GLsizei height);
diff --git a/src/mesa/main/genmipmap.c b/src/mesa/main/genmipmap.c
index c18f9d5..5a3bfc3 100644
--- a/src/mesa/main/genmipmap.c
+++ b/src/mesa/main/genmipmap.c
@@ -164,3 +164,9 @@ _mesa_GenerateTextureMipmap(GLuint texture)
 
    _mesa_generate_texture_mipmap(ctx, texObj, texObj->Target, true);
 }
+
+void GLAPIENTRY
+_mesa_GenerateMipmapEXT(GLenum target)
+{
+   _mesa_GenerateMipmap(target);
+}
diff --git a/src/mesa/main/genmipmap.h b/src/mesa/main/genmipmap.h
index f4ef859..68cecfa 100644
--- a/src/mesa/main/genmipmap.h
+++ b/src/mesa/main/genmipmap.h
@@ -37,6 +37,9 @@ extern void GLAPIENTRY
 _mesa_GenerateMipmap(GLenum target);
 
 extern void GLAPIENTRY
+_mesa_GenerateMipmapEXT(GLenum target);
+
+extern void GLAPIENTRY
 _mesa_GenerateTextureMipmap(GLuint texture);
 
 #endif /* GENMIPMAP_H */
-- 
1.9.1

