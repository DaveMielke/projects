From cad70a5e467a540fe883f3673caab7e2b1518019 Mon Sep 17 00:00:00 2001
From: Tomasz Figa <tfiga@chromium.org>
Date: Fri, 13 May 2016 15:17:23 +0900
Subject: [PATCH 516/521] CHROMIUM: egl/android: Disable
 EGL_ANDROID_framebuffer_target for unsupported formats

Currently our HWC module supports only RGBA8888 format, so advertising
EGL_ANDROID_framebuffer_target for other formats is invalid and will end
up with a HWC assertion failure if a format other than RGBA8888 is
chosen as a framebuffer target.

Let's hardcode the support only for RGBA8888 for the time being to keep
us going and figure out a way to query HWC for supported formats later.

Signed-off-by: Tomasz Figa <tfiga@chromium.org>
(cherry picked from commit 35925c11bca367b1b27169e79e1900665f10c752)

BUG=b:29036398
TEST=No significant regressions in Android dEQP

Change-Id: I535fb90e6a70653ce166bb3dd020ed52b6d1b69e
Reviewed-on: https://chromium-review.googlesource.com/367214
Reviewed-by: Nicolas Boichat <drinkcat@chromium.org>
Commit-Queue: Tomasz Figa <tfiga@chromium.org>
Tested-by: Tomasz Figa <tfiga@chromium.org>
---
 src/egl/drivers/dri2/platform_android.c | 16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)

diff --git a/src/egl/drivers/dri2/platform_android.c b/src/egl/drivers/dri2/platform_android.c
index 12e42c4..e7f46c7 100644
--- a/src/egl/drivers/dri2/platform_android.c
+++ b/src/egl/drivers/dri2/platform_android.c
@@ -759,18 +759,19 @@ droid_add_configs_for_visuals(_EGLDriver *drv, _EGLDisplay *dpy)
    const struct {
       int format;
       unsigned int rgba_masks[4];
+      EGLBoolean fb_target;
    } visuals[] = {
-      { HAL_PIXEL_FORMAT_RGBA_8888, { 0xff, 0xff00, 0xff0000, 0xff000000 } },
-      { HAL_PIXEL_FORMAT_RGBX_8888, { 0xff, 0xff00, 0xff0000, 0x0 } },
-      { HAL_PIXEL_FORMAT_RGB_888,   { 0xff, 0xff00, 0xff0000, 0x0 } },
-      { HAL_PIXEL_FORMAT_RGB_565,   { 0xf800, 0x7e0, 0x1f, 0x0 } },
-      { HAL_PIXEL_FORMAT_BGRA_8888, { 0xff0000, 0xff00, 0xff, 0xff000000 } },
-      { 0, { 0, 0, 0, 0 } }
+      { HAL_PIXEL_FORMAT_RGBA_8888, { 0xff, 0xff00, 0xff0000, 0xff000000 }, EGL_TRUE },
+      { HAL_PIXEL_FORMAT_RGBX_8888, { 0xff, 0xff00, 0xff0000, 0x0 }, EGL_FALSE },
+      { HAL_PIXEL_FORMAT_RGB_888,   { 0xff, 0xff00, 0xff0000, 0x0 }, EGL_FALSE },
+      { HAL_PIXEL_FORMAT_RGB_565,   { 0xf800, 0x7e0, 0x1f, 0x0 }, EGL_FALSE },
+      { HAL_PIXEL_FORMAT_BGRA_8888, { 0xff0000, 0xff00, 0xff, 0xff000000 }, EGL_FALSE },
+      { 0, { 0, 0, 0, 0 }, 0 }
    };
    EGLint config_attrs[] = {
      EGL_NATIVE_VISUAL_ID,   0,
      EGL_NATIVE_VISUAL_TYPE, 0,
-     EGL_FRAMEBUFFER_TARGET_ANDROID, EGL_TRUE,
+     EGL_FRAMEBUFFER_TARGET_ANDROID, 0,
      EGL_RECORDABLE_ANDROID, EGL_TRUE,
      EGL_NONE
    };
@@ -782,6 +783,7 @@ droid_add_configs_for_visuals(_EGLDriver *drv, _EGLDisplay *dpy)
 
       config_attrs[1] = visuals[i].format;
       config_attrs[3] = visuals[i].format;
+      config_attrs[5] = visuals[i].fb_target;
 
       for (j = 0; dri2_dpy->driver_configs[j]; j++) {
          const EGLint surface_type = EGL_WINDOW_BIT | EGL_PBUFFER_BIT;
-- 
2.8.0.rc3.226.g39d4020

