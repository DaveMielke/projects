From 20f3eb863e24baa385e51cdb3e9bcf83cddf90ac Mon Sep 17 00:00:00 2001
From: Tomasz Figa <tfiga@chromium.org>
Date: Fri, 15 Jul 2016 16:53:49 +0900
Subject: [PATCH 504/521] UPSTREAM: egl/android: Add some useful error messages

It is much easier to debug issues when the application gives some
meaningful error messages. This patch adds few to the EGL Android
platform backend.

Signed-off-by: Tomasz Figa <tfiga@chromium.org>
Reviewed-by: Eric Anholt <eric@anholt.net>
Reviewed-by: Emil Velikov <emil.velikov@collabora.com>
(cherry picked from commit 565fa6b748e952098b2e69eff4be6ac15c204043)
Signed-off-by: Tomasz Figa <tfiga@chromium.org>

BUG=b:29036398
TEST=No significant regressions in dEQP inside the container

Change-Id: I92c5015d83d7ad2cd3bd398cabf50812c9dddd06
Reviewed-on: https://chromium-review.googlesource.com/367194
Reviewed-by: Haixia Shi <hshi@chromium.org>
Tested-by: Tomasz Figa <tfiga@chromium.org>
Commit-Queue: Tomasz Figa <tfiga@chromium.org>
---
 src/egl/drivers/dri2/platform_android.c | 13 ++++++++++---
 1 file changed, 10 insertions(+), 3 deletions(-)

diff --git a/src/egl/drivers/dri2/platform_android.c b/src/egl/drivers/dri2/platform_android.c
index 302eb85..37616f9 100644
--- a/src/egl/drivers/dri2/platform_android.c
+++ b/src/egl/drivers/dri2/platform_android.c
@@ -353,8 +353,10 @@ update_buffers(struct dri2_egl_surface *dri2_surf)
       return 0;
 
    /* try to dequeue the next back buffer */
-   if (!dri2_surf->buffer && !droid_window_dequeue_buffer(dri2_surf))
+   if (!dri2_surf->buffer && !droid_window_dequeue_buffer(dri2_surf)) {
+      _eglLog(_EGL_WARNING, "Could not dequeue buffer from native window");
       return -1;
+   }
 
    /* free outdated buffers and update the surface size */
    if (dri2_surf->base.Width != dri2_surf->buffer->width ||
@@ -379,16 +381,21 @@ get_back_bo(struct dri2_egl_surface *dri2_surf)
       return -1;
 
    fd = get_native_buffer_fd(dri2_surf->buffer);
-   if (fd < 0)
+   if (fd < 0) {
+      _eglLog(_EGL_WARNING, "Could not get native buffer FD");
       return -1;
+   }
 
    fourcc = get_fourcc(get_format(dri2_surf->buffer->format));
 
    pitch = dri2_surf->buffer->stride *
       get_format_bpp(dri2_surf->buffer->format);
 
-   if (fourcc == -1 || pitch == 0)
+   if (fourcc == -1 || pitch == 0) {
+      _eglLog(_EGL_WARNING, "Invalid buffer fourcc(%x) or pitch(%d)",
+              fourcc, pitch);
       return -1;
+   }
 
    dri2_surf->dri_image =
       dri2_dpy->image->createImageFromFds(dri2_dpy->dri_screen,
-- 
2.8.0.rc3.226.g39d4020

