From 8d2de2f46665a7ae103c3f4d254ea3c9d0dd518e Mon Sep 17 00:00:00 2001
From: Rufus Hamade <rufus.hamade@imgtec.com>
Date: Fri, 22 Jul 2016 13:24:08 +0100
Subject: [PATCH] dri/pvr: Garbage collect sync objects more often

Sometimes we need to defer the deletion of a sync object.  E.g., if
the client app creates a sync point then immediately deletes it - we
can't actually free the underlying data until the sync has triggered.

To cope with this situation, we add such still-pending sync objects
to a deferred-free queue.

Previous to this change, we were only cleaning up these deferred-free
syncs on termination.  This was obviously not often enough.  Instead
garbage collect them whenever we do a sync delete.

Change-Id: Id7de5099fc4abf5b3da09bda793610f2f6521fd0
Signed-off-by: Rufus Hamade <rufus.hamade@imgtec.com>
---
 src/mesa/drivers/dri/pvr/pvrsyncobj.c | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)

diff --git a/src/mesa/drivers/dri/pvr/pvrsyncobj.c b/src/mesa/drivers/dri/pvr/pvrsyncobj.c
index e964ea0..76f16ed 100644
--- a/src/mesa/drivers/dri/pvr/pvrsyncobj.c
+++ b/src/mesa/drivers/dri/pvr/pvrsyncobj.c
@@ -99,6 +99,24 @@ error:
 	return NULL;
 }
 
+static GarbageCollectFences(void)
+{
+	PVRQElem *psQElem = sDeferredFree.pvForw;
+
+	while (psQElem != &sDeferredFree)
+	{
+		__DRI2fence *psFence =
+			PVRQ_CONTAINER_OF(psQElem, __DRI2fence, sQElem);
+
+		psQElem = psFence->sQElem.pvForw;
+
+		if (PVRDRIIsFenceSyncComplete(psFence->psEGLFenceSyncPrim)) {
+			remque(&psFence->sQElem);
+			DeleteFence(psFence);
+		}
+	}
+}
+
 void
 PVRDRIDestroyFence(__DRIscreen *psDRIScreen, void *psDRIFence)
 {
@@ -106,6 +124,8 @@ PVRDRIDestroyFence(__DRIscreen *psDRIScreen, void *psDRIFence)
 
 	(void)psDRIScreen;
 
+	GarbageCollectFences();
+
 	if (PVRDRIIsFenceSyncComplete(psFence->psEGLFenceSyncPrim))
 	{
 		DeleteFence(psFence);
-- 
1.9.1

