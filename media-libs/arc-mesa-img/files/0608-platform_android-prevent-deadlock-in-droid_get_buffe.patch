From 3dbea88a13d11a57987a7a2facc2ea2cdc51ca85 Mon Sep 17 00:00:00 2001
From: Nicolas Boichat <drinkcat@google.com>
Date: Wed, 6 Jul 2016 18:57:42 +0800
Subject: [PATCH 608/609] platform_android: prevent deadlock in
 droid_get_buffers_with_format

Similarly to 1ea233c6f3 "platform_android: prevent deadlock in droid_swap_buffers",
droid_window_dequeue_buffer can also deadlock, so we must release
and reacquire the display mutex.

This only seem to happen on Imagination's mesa, which introduces
a DRI query buffer extension.

BUG=chrome-os-partner:54931
TEST=Swipe photos in Photos
TEST=android.textureview.cts.TextureViewTest#testTextureViewStress200Hz
     passes

Change-Id: I41e9ce43a0abb33bcd97c1a620d48f3e4039f0a6
---
 src/egl/drivers/dri2/platform_android.c | 19 ++++++++++++++++---
 1 file changed, 16 insertions(+), 3 deletions(-)

diff --git a/src/egl/drivers/dri2/platform_android.c b/src/egl/drivers/dri2/platform_android.c
index 1b22868..f730633 100644
--- a/src/egl/drivers/dri2/platform_android.c
+++ b/src/egl/drivers/dri2/platform_android.c
@@ -110,12 +110,21 @@ get_native_buffer_fd(struct ANativeWindowBuffer *buf)
 static EGLBoolean
 droid_window_dequeue_buffer(struct dri2_egl_surface *dri2_surf)
 {
+   EGLBoolean ret = EGL_FALSE;
+   _EGLDisplay *disp = dri2_surf->base.Resource.Display;
+
+   /* To avoid blocking other EGL calls, release the display mutex before
+    * we enter droid_window_dequeue_buffer() and re-acquire the mutex upon
+    * return.
+    */
+   mtx_unlock(&disp->Mutex);
+
 #if ANDROID_VERSION >= 0x0402
    int fence_fd;
 
    if (dri2_surf->window->dequeueBuffer(dri2_surf->window, &dri2_surf->buffer,
                                         &fence_fd))
-      return EGL_FALSE;
+      goto lock;
 
    /* If access to the buffer is controlled by a sync fence, then block on the
     * fence.
@@ -147,13 +156,17 @@ droid_window_dequeue_buffer(struct dri2_egl_surface *dri2_surf)
    dri2_surf->buffer->common.incRef(&dri2_surf->buffer->common);
 #else
    if (dri2_surf->window->dequeueBuffer(dri2_surf->window, &dri2_surf->buffer))
-      return EGL_FALSE;
+      goto lock;
 
    dri2_surf->buffer->common.incRef(&dri2_surf->buffer->common);
    dri2_surf->window->lockBuffer(dri2_surf->window, dri2_surf->buffer);
 #endif
 
-   return EGL_TRUE;
+   ret = EGL_TRUE;
+
+lock:
+   mtx_lock(&disp->Mutex);
+   return ret;
 }
 
 static EGLBoolean
-- 
2.8.0.rc3.226.g39d4020

