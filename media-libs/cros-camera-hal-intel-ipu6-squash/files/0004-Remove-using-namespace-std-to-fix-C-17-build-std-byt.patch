From d278fe0084601cb9dad4edc6e8ffbe272718949b Mon Sep 17 00:00:00 2001
From: Tom Hughes <tomhughes@chromium.org>
Date: Fri, 2 Oct 2020 20:39:25 +0000
Subject: [PATCH] Remove "using namespace std" to fix C++17 build (std::byte)

The headers that this component use have:

typedef char byte;

These files then have "using namespace std;". C++17 introduces
std::byte, so the name becomes ambiguous.

BUG=b:162949739
TEST=CQ passes
---
 camera/hal/intel/ipu6/aal/Camera3Stream.cpp                 | 2 +-
 camera/hal/intel/ipu6/aal/RequestManager.cpp                | 2 +-
 camera/hal/intel/ipu6/src/3a/Dvs.cpp                        | 4 ++--
 camera/hal/intel/ipu6/src/core/SofSource.cpp                | 2 +-
 .../hal/intel/ipu6/src/core/psysprocessor/GPUExecutor.cpp   | 4 ++--
 camera/hal/intel/ipu6/src/platformdata/AiqInitData.cpp      | 2 +-
 camera/hal/intel/ipu6/src/platformdata/gc/GraphUtils.cpp    | 2 --
 camera/hal/intel/ipu6/src/v4l2/MediaControl.h               | 3 +--
 camera/hal/intel/ipu6/src/v4l2/V4l2DeviceFactory.cpp        | 6 ++----
 9 files changed, 11 insertions(+), 16 deletions(-)

diff --git a/camera/hal/intel/ipu6/aal/Camera3Stream.cpp b/camera/hal/intel/ipu6/aal/Camera3Stream.cpp
index a43ec5c2c6..ff9525318b 100644
--- a/camera/hal/intel/ipu6/aal/Camera3Stream.cpp
+++ b/camera/hal/intel/ipu6/aal/Camera3Stream.cpp
@@ -225,7 +225,7 @@ bool Camera3Stream::threadLoop() {
     }
 
     icamera::camera_buffer_t outCamBuf = {};
-    shared_ptr<Camera3Buffer> outCam3Buf = nullptr;
+    std::shared_ptr<Camera3Buffer> outCam3Buf = nullptr;
 
     // start process buffers, HAL stream and listeners will do the same process
     if (!inputCam3Buf) {
diff --git a/camera/hal/intel/ipu6/aal/RequestManager.cpp b/camera/hal/intel/ipu6/aal/RequestManager.cpp
index 26785775d7..dd25520063 100644
--- a/camera/hal/intel/ipu6/aal/RequestManager.cpp
+++ b/camera/hal/intel/ipu6/aal/RequestManager.cpp
@@ -640,7 +640,7 @@ int RequestManager::chooseHALStreams(const uint32_t requestStreamNum, int* halSt
                                      icamera::stream_t* halStreamList) {
     int activeHALNum = 0;
     int avaVideoSlot = icamera::PlatformData::getVideoStreamNum(mCameraId);
-    vector<icamera::stream_t*> videoHALStream;
+    std::vector<icamera::stream_t*> videoHALStream;
     int videoMaxResStreamIndex = -1;
     int stillHALStreamIndex = -1;
 
diff --git a/camera/hal/intel/ipu6/src/3a/Dvs.cpp b/camera/hal/intel/ipu6/src/3a/Dvs.cpp
index 2b881e5266..46b9543e6f 100644
--- a/camera/hal/intel/ipu6/src/3a/Dvs.cpp
+++ b/camera/hal/intel/ipu6/src/3a/Dvs.cpp
@@ -207,8 +207,8 @@ int Dvs::setDVSConfiguration(uint32_t kernelId, ia_dvs_configuration *config) {
     config->envelope_bq.width_bq = mEnvelopeResolution.width / 2 - config->ispfilter_bq.width_bq;
     config->envelope_bq.height_bq = mEnvelopeResolution.height / 2 - config->ispfilter_bq.height_bq;
     // envelope should be larger than 0
-    config->envelope_bq.width_bq = max(0, config->envelope_bq.width_bq);
-    config->envelope_bq.height_bq = max(0, config->envelope_bq.height_bq);
+    config->envelope_bq.width_bq = std::max(0, config->envelope_bq.width_bq);
+    config->envelope_bq.height_bq = std::max(0, config->envelope_bq.height_bq);
 
     if (config->source_bq.width_bq - config->envelope_bq.width_bq -
         config->ispfilter_bq.width_bq > bq_max_width)
diff --git a/camera/hal/intel/ipu6/src/core/SofSource.cpp b/camera/hal/intel/ipu6/src/core/SofSource.cpp
index 58d1f42c2b..883f1b53bb 100644
--- a/camera/hal/intel/ipu6/src/core/SofSource.cpp
+++ b/camera/hal/intel/ipu6/src/core/SofSource.cpp
@@ -147,7 +147,7 @@ int SofSource::poll()
     pollDevs.push_back(mIsysReceiverSubDev);
     V4L2DevicePoller poller {pollDevs, -1};
 
-    vector<V4L2Device*> readyDevices;
+    std::vector<V4L2Device*> readyDevices;
 
     LOG2("@%s", __func__);
 
diff --git a/camera/hal/intel/ipu6/src/core/psysprocessor/GPUExecutor.cpp b/camera/hal/intel/ipu6/src/core/psysprocessor/GPUExecutor.cpp
index a2ef203451..340e4000ca 100644
--- a/camera/hal/intel/ipu6/src/core/psysprocessor/GPUExecutor.cpp
+++ b/camera/hal/intel/ipu6/src/core/psysprocessor/GPUExecutor.cpp
@@ -437,7 +437,7 @@ int GPUExecutor::runTnrFrame(const std::shared_ptr<CameraBuffer>& inBuf,
 
 int GPUExecutor::dumpTnrParameters(uint32_t sequence) {
     const int DUMP_FILE_SIZE = 0x1000;
-    std::string dumpFileName = std::string("/home/tnr7-") + to_string(sequence) + string(".txt");
+    std::string dumpFileName = std::string("/home/tnr7-") + std::to_string(sequence) + std::string(".txt");
 
     LOG1("%s save tnr7 parameters to file %s", __func__, dumpFileName.c_str());
     tnr7_bc_1_0_t* tnr7_bc = &(mTnr7usParam->bc);
@@ -474,7 +474,7 @@ int GPUExecutor::dumpTnrParameters(uint32_t sequence) {
         fwrite(dumpData, shift, 1, parFile);
         fclose(parFile);
     } else {
-        LOGW("tnr7 failed to open dump file %s", (dumpFileName + to_string(sequence)).c_str());
+        LOGW("tnr7 failed to open dump file %s", (dumpFileName + std::to_string(sequence)).c_str());
     }
     free(dumpData);
     return OK;
diff --git a/camera/hal/intel/ipu6/src/platformdata/AiqInitData.cpp b/camera/hal/intel/ipu6/src/platformdata/AiqInitData.cpp
index 909fd9e591..a369cf1327 100644
--- a/camera/hal/intel/ipu6/src/platformdata/AiqInitData.cpp
+++ b/camera/hal/intel/ipu6/src/platformdata/AiqInitData.cpp
@@ -465,7 +465,7 @@ AiqInitData::AiqInitData(const std::string& sensorName,
     mMakerNote(nullptr)
 {
     CLEAR(mNvmData);
-    mMakerNote = unique_ptr<MakerNote>(new MakerNote);
+    mMakerNote = std::unique_ptr<MakerNote>(new MakerNote);
 }
 
 AiqInitData::~AiqInitData()
diff --git a/camera/hal/intel/ipu6/src/platformdata/gc/GraphUtils.cpp b/camera/hal/intel/ipu6/src/platformdata/gc/GraphUtils.cpp
index 7f822e6b20..db9c2d6d8c 100644
--- a/camera/hal/intel/ipu6/src/platformdata/gc/GraphUtils.cpp
+++ b/camera/hal/intel/ipu6/src/platformdata/gc/GraphUtils.cpp
@@ -23,8 +23,6 @@
 #define psys_2600_pg_id_from_uid(uid) ((uid & 0xFFFF0000) >> 16)
 #define psys_2600_term_idx_from_uid(uid) ((uid & 0x0000FFFF) - 1)
 
-using namespace std;
-
 namespace icamera {
 
 void GraphUtils::dumpConnections(const std::vector<IGraphType::PipelineConnection>& connections)
diff --git a/camera/hal/intel/ipu6/src/v4l2/MediaControl.h b/camera/hal/intel/ipu6/src/v4l2/MediaControl.h
index 0e3d284d0a..f3e2d65b07 100644
--- a/camera/hal/intel/ipu6/src/v4l2/MediaControl.h
+++ b/camera/hal/intel/ipu6/src/v4l2/MediaControl.h
@@ -39,7 +39,6 @@
 
 #include "NodeInfo.h"
 
-using namespace std;
 namespace icamera {
 
 struct MediaEntity;
@@ -236,7 +235,7 @@ public:
 
     int resetAllLinks();
 
-    int getLensName(string *lensName);
+    int getLensName(std::string *lensName);
     bool checkAvailableSensor(const std::string &sensorEntityName,
                               const std::string &sinkEntityName);
     /**
diff --git a/camera/hal/intel/ipu6/src/v4l2/V4l2DeviceFactory.cpp b/camera/hal/intel/ipu6/src/v4l2/V4l2DeviceFactory.cpp
index 90950d2d04..10fb71e082 100644
--- a/camera/hal/intel/ipu6/src/v4l2/V4l2DeviceFactory.cpp
+++ b/camera/hal/intel/ipu6/src/v4l2/V4l2DeviceFactory.cpp
@@ -22,11 +22,9 @@
 
 #include "V4l2DeviceFactory.h"
 
-using namespace std;
-
 namespace icamera {
 
-map<int, V4l2DeviceFactory*> V4l2DeviceFactory::sInstances;
+std::map<int, V4l2DeviceFactory*> V4l2DeviceFactory::sInstances;
 Mutex V4l2DeviceFactory::sLock;
 
 V4l2DeviceFactory::V4l2DeviceFactory(int cameraId) : mCameraId(cameraId)
@@ -72,7 +70,7 @@ void V4l2DeviceFactory::releaseDeviceFactory(int cameraId)
  *
  * Return a not nullptr sub device pointer
  */
-V4L2Subdevice* V4l2DeviceFactory::getSubDev(int cameraId, const string& devName)
+V4L2Subdevice* V4l2DeviceFactory::getSubDev(int cameraId, const std::string& devName)
 {
     AutoMutex lock(sLock);
     V4l2DeviceFactory* factory = getInstance(cameraId);
-- 
2.26.2

