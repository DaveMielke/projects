From 41810035925a2dd419354e8ca918f425603e5cb4 Mon Sep 17 00:00:00 2001
From: Ray Johnston <ray.johnston@artifex.com>
Date: Fri, 11 Jan 2019 19:24:47 -0800
Subject: [PATCH] Bug 700482: Binary Object scanner could write past allocated
 ref array

The object length (osize) was used to compute the max_array_index, but
this exceeded the number of refs allocated based on the overall length
given in the BOS header. We only allocated overall_length/8 but the bad
object length value (in this case for a dict, but could be an array)
was larger so we ended up with a max_array_index that was too large.
---
 psi/iscanbin.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/psi/iscanbin.c b/psi/iscanbin.c
index b073bda3a..8c97aa23e 100644
--- a/psi/iscanbin.c
+++ b/psi/iscanbin.c
@@ -662,6 +662,10 @@ scan_bos_continue(i_ctx_t *i_ctx_p, ref * pref, scanner_state * pstate)
                     scan_bos_error(pstate, "bad array offset");
                     return_error(gs_error_syntaxerror);
                 }
+                if (osize > (size / 8)) {
+                    scan_bos_error(pstate, "bad array length");
+                    return_error(gs_error_syntaxerror);
+                }
                 {
                     uint aindex = value / SIZEOF_BIN_SEQ_OBJ;
 
-- 
2.20.1.97.g81188d93c3-goog

