commit a40ee7ee5fd926f423207fa73ff65b6c6662b63b
Author: Dave Mielke <Dave@Mielke.cc>
Date:   Fri Dec 4 13:42:46 2020 -0500

    Add async logs for satisfied conditions. (dm)

diff --git a/Programs/async_wait.c b/Programs/async_wait.c
index f51ad8b21..4c14457b7 100644
--- a/Programs/async_wait.c
+++ b/Programs/async_wait.c
@@ -159,6 +159,7 @@ asyncAwaitCondition (int timeout, AsyncConditionTester *testCondition, void *dat
     awaitAction(timeout - elapsed);
   }
 
+  logSymbol(LOG_CATEGORY(ASYNC_EVENTS), testCondition, "condition satisfied");
   return 1;
 }
 
diff --git a/Programs/core.c b/Programs/core.c
index 8b08452fd..d2c9d0843 100644
--- a/Programs/core.c
+++ b/Programs/core.c
@@ -1319,12 +1319,18 @@ ASYNC_CONDITION_TESTER(checkUnmonitoredConditions) {
   UnmonitoredConditionDescriptor *ucd = data;
 
   if (interruptPending) {
+    logMessage(LOG_CATEGORY(ASYNC_EVENTS), "interrupt pending");
     ucd->data = &waitResult;
     interruptPending = 0;
     return 1;
   }
 
   if (programTerminationRequestCount) {
+    logMessage(LOG_CATEGORY(ASYNC_EVENTS),
+      "program termination request count: %u",
+      programTerminationRequestCount
+    );
+
     static const WaitResult result = WAIT_STOP;
     ucd->data = &result;
     return 1;
@@ -1334,6 +1340,7 @@ ASYNC_CONDITION_TESTER(checkUnmonitoredConditions) {
     static RoutingStatus status;
 
     if ((status = getRoutingStatus(0)) != ROUTING_NONE) {
+      logMessage(LOG_CATEGORY(ASYNC_EVENTS), "routing status: %u", status);
       ucd->handler = handleRoutingDone;
       ucd->data = &status;
       return 1;
@@ -1341,6 +1348,7 @@ ASYNC_CONDITION_TESTER(checkUnmonitoredConditions) {
   }
 
   if (brl.hasFailed) {
+    logMessage(LOG_CATEGORY(ASYNC_EVENTS), "braille driver failed");
     ucd->handler = handleBrailleDriverFailed;
     return 1;
   }
