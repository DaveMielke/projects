Makes brltty not show confusing messages such as 'screen not in text mode'
to the user when the api client is not connected.  This is needed because
it is hard to localize those messages and they don't mean anything to
the end user.
diff --git a/Drivers/Screen/Linux/screen.c b/Drivers/Screen/Linux/screen.c
index 255e090bf..797f35b05 100644
--- a/Drivers/Screen/Linux/screen.c
+++ b/Drivers/Screen/Linux/screen.c
@@ -53,10 +53,11 @@ typedef enum {
   PARM_CHARSET,
   PARM_HFB,
   PARM_LOG_SFM,
+  PARM_MSGS,
   PARM_UNICODE,
   PARM_VT,
 } ScreenParameters;
-#define SCRPARMS "charset", "hfb", "logsfm", "unicode", "vt"
+#define SCRPARMS "charset", "hfb", "logsfm", "msgs", "unicode", "vt"
 
 #include "scr_driver.h"
 #include "screen.h"
@@ -64,6 +65,7 @@ typedef enum {
 static const char *problemText;
 static unsigned int logScreenFontMap;
 static unsigned int directUnicode;
+static unsigned int showProblemText = 1;
 static int virtualTerminalNumber;
 
 #define UNICODE_ROW_DIRECT 0XF000
@@ -1264,6 +1266,15 @@ processParameters_LinuxScreen (char **parameters) {
     }
   }
 
+  showProblemText = 1;
+  if (*parameters[PARM_MSGS]) {
+    if (!validateYesNo(&showProblemText, parameters[PARM_MSGS])) {
+      logMessage(LOG_WARNING, "%s: %s", "invalid value for msgs",
+                 parameters[PARM_MSGS]);
+      showProblemText = 1;
+    }
+  }
+
   return 1;
 }
 
@@ -1616,7 +1627,7 @@ readCharacters_LinuxScreen (const ScreenBox *box, ScreenCharacter *buffer) {
   if (readScreenSize(&size)) {
     if (validateScreenBox(box, size.columns, size.rows)) {
       if (problemText) {
-        setScreenMessage(box, buffer, problemText);
+        setScreenMessage(box, buffer, showProblemText ? problemText : "");
         return 1;
       }
 
diff --git a/Programs/scr_driver.c b/Programs/scr_driver.c
index b121c16d6..b1f31caae 100644
--- a/Programs/scr_driver.c
+++ b/Programs/scr_driver.c
@@ -38,7 +38,7 @@ typedef enum {
 #define DRIVER_DEVELOPERS ""
 #include "scr_driver.h"
 
-static const char defaultMessage[] = strtext("no screen");
+static const char defaultMessage[] = "";
 static const char *messageParameter = NULL;
 static const char *noDriverReason = NULL;
 static const char *screenMessage = NULL;
