use the host python when running the h2py code, and have that search sysroot

--- a/Makefile.pre.in
+++ b/Makefile.pre.in
@@ -1276,10 +1276,10 @@ libinstall:	build_all $(srcdir)/Lib/$(PLATDIR) $(srcdir)/Modules/xxmodule.c
 $(srcdir)/Lib/$(PLATDIR):
 	mkdir $(srcdir)/Lib/$(PLATDIR)
 	cp $(srcdir)/Lib/plat-generic/regen $(srcdir)/Lib/$(PLATDIR)/regen
-	export PATH; PATH="`pwd`:$$PATH"; \
+	export INCLUDE="$(SYSROOT)$(INCLUDEDIR)"; \
 	export PYTHONPATH; PYTHONPATH="`pwd`/Lib"; \
 	export DYLD_FRAMEWORK_PATH; DYLD_FRAMEWORK_PATH="`pwd`"; \
-	export EXE; EXE="$(BUILDEXE)"; \
+	export HOSTPYTHON="`realpath $(HOSTPYTHON)`"; \
 	if [ -n "$(MULTIARCH)" ]; then export MULTIARCH; MULTIARCH=$(MULTIARCH); fi; \
 	export PYTHON_FOR_BUILD; \
 	if [ "$(BUILD_GNU_TYPE)" = "$(HOST_GNU_TYPE)" ]; then \
--- a/Tools/scripts/h2py.py
+++ b/Tools/scripts/h2py.py
@@ -57,6 +57,7 @@ except KeyError:
             pass
 
 def main():
+    sysroot = os.getenv('SYSROOT', '')
     global filedict
     opts, args = getopt.getopt(sys.argv[1:], 'i:')
     for o, a in opts:
@@ -70,7 +71,7 @@ def main():
             process(sys.stdin.buffer, sys.stdout.buffer)
         else:
             filename = filename.encode()
-            fp = open(filename, 'rb')
+            fp = open(sysroot + filename, 'r')
             outfile = os.path.basename(filename)
             i = outfile.rfind(b'.')
             if i > 0: outfile = outfile[:i]
