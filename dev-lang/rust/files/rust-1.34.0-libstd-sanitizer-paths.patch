libstd has hard-coded paths for the sanitizer (asan, lsan, msan,
tsan) support libraries for the x86_64-unknown-linux-gnu target.

Now that we patch in our own custom -cros and -pc targets instead
of falling back to -unknown, we need to add overrides for those
targets as well to allow the linker to find the correct versions
of the librustc_[almt]san crates.

--- src/libstd/Cargo.toml.orig	2019-03-25 16:50:23.827201263 -0700
+++ src/libstd/Cargo.toml	2019-03-25 16:50:58.151224832 -0700
@@ -37,6 +37,18 @@
 rustc_msan = { path = "../librustc_msan" }
 rustc_tsan = { path = "../librustc_tsan" }
 
+[target.x86_64-pc-linux-gnu.dependencies]
+rustc_asan = { path = "../librustc_asan" }
+rustc_lsan = { path = "../librustc_lsan" }
+rustc_msan = { path = "../librustc_msan" }
+rustc_tsan = { path = "../librustc_tsan" }
+
+[target.x86_64-cros-linux-gnu.dependencies]
+rustc_asan = { path = "../librustc_asan" }
+rustc_lsan = { path = "../librustc_lsan" }
+rustc_msan = { path = "../librustc_msan" }
+rustc_tsan = { path = "../librustc_tsan" }
+
 [target.'cfg(any(all(target_arch = "wasm32", not(target_os = "emscripten")), all(target_vendor = "fortanix", target_env = "sgx")))'.dependencies]
 dlmalloc = { version = "0.1", features = ['rustc-dep-of-std'] }
 
