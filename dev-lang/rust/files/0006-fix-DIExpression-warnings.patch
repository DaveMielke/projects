Yanked from this comment https://github.com/rust-lang/rust/issues/43370#issuecomment-321648322 on
the upstream rust LLVM 5.0 tracking issue. Not strictly necessary but it suppresses some annoying
output from LLVM that looks like the following:

invalid expression
!12029 = !DIExpression(6, 34, 0)
invalid expression
!12292 = !DIExpression(6, 34, 0, 6)
invalid expression
!17015 = !DIExpression(6, 34, 8, 6)
invalid expression
!30180 = !DIExpression(6, 34, 8)

From ad90ca609e2d524bdd5331be7ced4e9da48c0c8e Mon Sep 17 00:00:00 2001
From: Zach Reizner <zachr@google.com>
Date: Tue, 29 Aug 2017 11:28:01 -0700
Subject: [PATCH] fix DIExpression warnings

See https://github.com/rust-lang/rust/issues/43370#issuecomment-321648322 for
the source of this change.
---
 src/librustc_trans/lib.rs     |  1 -
 src/librustc_trans/mir/mod.rs | 10 ----------
 2 files changed, 11 deletions(-)

diff --git a/src/librustc_trans/lib.rs b/src/librustc_trans/lib.rs
index e655f4eae4..b7f0a43024 100644
--- a/src/librustc_trans/lib.rs
+++ b/src/librustc_trans/lib.rs
@@ -20,7 +20,6 @@
 #![doc(html_logo_url = "https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png",
       html_favicon_url = "https://doc.rust-lang.org/favicon.ico",
       html_root_url = "https://doc.rust-lang.org/nightly/")]
-#![deny(warnings)]
 
 #![feature(associated_consts)]
 #![feature(box_patterns)]
diff --git a/src/librustc_trans/mir/mod.rs b/src/librustc_trans/mir/mod.rs
index a7f12babb1..e47f9cffba 100644
--- a/src/librustc_trans/mir/mod.rs
+++ b/src/librustc_trans/mir/mod.rs
@@ -583,16 +583,6 @@ fn arg_local_refs<'a, 'tcx>(bcx: &Builder<'a, 'tcx>,
                     alloca: env_ptr,
                     address_operations: &ops
                 };
-                declare_local(
-                    bcx,
-                    &mircx.debug_context,
-                    decl.debug_name,
-                    ty,
-                    scope,
-                    variable_access,
-                    VariableKind::CapturedVariable,
-                    DUMMY_SP
-                );
             }
         });
         LocalRef::Lvalue(LvalueRef::new_sized(llval, LvalueTy::from_ty(arg_ty),
-- 
2.14.1.342.g6490525c54-goog

