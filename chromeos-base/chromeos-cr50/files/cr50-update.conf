# Copyright 2016 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
#
# This script first determines if it needs to run at all: if the cr50 firmware
# image is not present in the local directory this must be happening on a
# board without a cr50 device, no need to do anything.
#
# If the firmware image is present, the script checks the number of previous
# runs saved in a state file. The file name is bound to the firmware image, if
# the firmware image changes, the name of the state file will also have to
# change.
#
# In most cases one firmware update run will be enough, but sometimes more
# than one step will be required (when updating from an old cr50 version or
# when rotating RW keys). The entire chromebook needs to be restarted between
# cr50 update runs, up to four update runs on a particular firmware image are
# allowed by this script.
#
# The usb_updater utility exit status indicates if more runs are required.
# Exit status of 0 means update has succeeded. Other exit statuses are
# processed by the follow up startup script cr50-result.conf.
#

description     "Chromium OS startup file for cr50 firmware updater"
author          "chromium-os-dev@chromium.org"

start on starting system-services

script

  logit() {
    logger -t ${UPSTART_JOB} "$*"
  }

  CR50_IMAGE="/opt/google/cr50/firmware/cr50.bin"
  UPDATER="/usr/sbin/usb_updater"
  MD5="/usr/bin/md5sum"
  STATE_DIR="/var/cache"
  CROSSYSTEM="/usr/bin/crossystem"

  for f in "${CR50_IMAGE}" "${MD5}" "${UPDATER}" "${CROSSYSTEM}"; do
    if [ ! -f "${f}" ]; then
      logit "${f} not found, quitting."
      exit 4
    fi
  done

  if "${CROSSYSTEM}" "mainfw_act?recovery"; then
    logit "Not running in recovery mode"
    exit 0
  fi

  BOARD="$(grep CHROMEOS_RELEASE_BOARD /etc/lsb-release)"
  BOARD="${BOARD#*=}"

  if [ -z "${BOARD}" ]; then
    logit "Could not determine board type"
    exit 4
  fi

  # File to keep state of the update process.
  STATEF="${STATE_DIR}/cr50.$(md5sum "${CR50_IMAGE}" | cut -c-10).state"

  if [ ! -f "${STATEF}" ]; then
    # Must be a new image, get rid of the old state files.
    rm -f "${STATE_DIR}"/cr50.*.state
    echo "0" > "${STATEF}"
  else
    state="$(cat "${STATEF}")"
    case "${state}" in
    (3)
      logit " not running"
      exit 0
      ;;
    ([012])
      : $(( state += 1 ))
      echo "${state}" > "${STATEF}"
      ;;
    (*)
      logit "unexpected state ${state}"
      echo "0" > "${STATEF}"
      ;;
    esac
  fi

  sync
  usb_update_options="-u"

  # Certain boards require transfer over /dev/tpm0 as opposed to usb.
  case "${BOARD}" in
  (kevin*|gru*)
    usb_update_options="${usb_update_options} -s"
    ;;
  esac

  logit "Will run ${UPDATER} ${usb_update_options} ${CR50_IMAGE}"
  "${UPDATER}" ${usb_update_options} "${CR50_IMAGE}"

  # Successful completion means cr50 is up to date, no more update attempts
  # are required for this firmware image.
  logit "cr50 is running updated firmware"
  echo "3" > "${STATEF}"
end script
