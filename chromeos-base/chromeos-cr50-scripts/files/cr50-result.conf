# Copyright 2016 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
#
# This script processes exit values of the usb_updater utility ran by
# cr50-update.conf. See it for details of exit code values.

description     "Startup file to process cr50 firmware updater exit status"
author          "chromium-os-dev@chromium.org"

start on stopped cr50-update

script
  UPDATER="/usr/sbin/usb_updater"

  case ${EXIT_STATUS} in
  (0)
    ;;
  (10[12])
    logger -t ${UPSTART_JOB} "reboot required ${EXIT_STATUS}"
    reboot
    ;;
  (*)
    logger -t ${UPSTART_JOB} "unexpected cr50-update exit code ${EXIT_STATUS}"
    ;;
  esac
  logger -t ${UPSTART_JOB} "Will check Board ID settings"

  exit_status=0
  output=$("${UPDATER}" -s -i 2>&1) || exit_status="$?"

  if [ "${exit_status}" = "0" ]; then
    if echo "${output}" | grep -q -F "ffffffff:ffffffff:ffffffff"; then
      # To provision boardid, we use RLZ brand code which is a four letter code
      # (see full list on go/crosrlz) from VPD or hardware straps, and can be
      # retrieved by command 'mosys platform brand'.
      rlz="$(mosys platform brand)" || exit_status="$?"
      if [ -z "${rlz}" ]; then
        logger -t ${UPSTART_JOB} "No RLZ brand code assigned yet" \
          "(mosys exit status ${exit_status})."
        exit 1
      elif [ "${#rlz}" != 4 ]; then
        logger -t ${UPSTART_JOB} "Invalid RLZ brand code (${rlz})."
        exit 1
      fi
      new_bid="${rlz}:0xff00"
      output=$("${UPDATER}" -s -i "${new_bid}" 2>&1) || exit_status="$?"
      if [ "${exit_status}" = "0" ]; then
        logger -t ${UPSTART_JOB} "Successfully set Board ID to ${new_bid}"
      else
        logger -t ${UPSTART_JOB} "FAILED to set Board ID to ${new_bid}"
      fi
    fi
  else
    logger -t ${UPSTART_JOB} "FAILED to read Board ID:"
  fi
  logger -t ${UPSTART_JOB} "${output}"
end script
