# Copyright (c) 2010 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# rpc_pipefs - NFSv4 rpc_pipefs mounter

# mounts/unmounts the rpc_pipefs filesystem on /var/lib/nfs/rpc_pipefs
# this is needed by gssd and idmapd and the mount will not happen if
# these are not running / used

# This is modified from Ubuntu's rpc_pipefs.conf

description "Mount the rpc_pipefs filesystem for NFSv4"
author    "chromium-os-dev@chromium.org"

#console output

start on (starting gssd
          or starting idmapd)
stop on (stopped gssd and stopped idmapd)

env PIPEFS_MOUNTPOINT=/var/lib/nfs/rpc_pipefs
env DEFAULTFILE=/etc/conf.d/nfs

pre-start script
  if [ -f "$DEFAULTFILE" ]; then
    . "$DEFAULTFILE"
  fi

  #
  # Parse the fstab file, and determine whether we need idmapd and gssd.
  # (The /etc/defaults settings, if any, will override our
  # autodetection.)  This code is partially adapted from the mountnfs.sh
  # script in the sysvinit package.

  if [ -f /etc/fstab ]; then
    exec 9<&0 </etc/fstab

    while read DEV MTPT FSTYPE OPTS REST; do
      if [ "$FSTYPE" = "nfs4" ]; then
        NEED_IDMAPD=yes
      fi
      case "$OPTS" in
        sec=krb5|*,sec=krb5|sec=krb5,*|*,sec=krb5,*|sec=krb5i|*,sec=krb5i|sec=krb5i,*|*,sec=krb5i,*|sec=krb5p|*,sec=krb5p|sec=krb5p,*|*,sec=krb5p,*)
          NEED_GSSD=yes
                    ;;
      esac
    done

    exec 0<&9 9<&-
  fi

  #
  # We also need idmapd if we run an NFSv4 server. It's fairly difficult
  # to autodetect whether there are NFSv4 exports or not, and idmapd is not a
  # particularily heavy daemon, so we auto-enable it if we find an /etc/exports
  # file. This does not mean that there are NFSv4 or other mounts active (or
  # even that nfs-kernel-server is installed), but it matches what the "start"
  # condition in nfs-kernel-server's init script does, which has a value in
  # itself.
  #
  if [ -f /etc/exports ] && grep -q '^[[:space:]]*[^#]*/' /etc/exports; then
    NEED_IDMAPD=yes
  fi

  # See if there is an override in the config file
  # For now, avoid =~ to be friendly to dash
  echo "$NFS_NEEDED_SERVICES" | grep -qs "rpc.idmapd" && NEED_IDMAPD=yes
  echo "$NFS_NEEDED_SERVICES" | grep -qs "rpc.gssd" && NEED_GSSD=yes

  if [ "x$NEED_IDMAPD" != xyes ] && [ "x$NEED_GSSD" != xyes ]; then
    stop
    exit 0
  fi

  modprobe -q sunrpc || true

  # Make sure we have the rpc_pipefs filesystem
  grep -qs rpc_pipefs /proc/filesystems || return 1

  # If things are already mounted, let's just return
  grep -qs "rpc_pipefs $PIPEFS_MOUNTPOINT" /proc/mounts && return 0

  mkdir -p $PIPEFS_MOUNTPOINT
  mount -t rpc_pipefs rpc_pipefs "$PIPEFS_MOUNTPOINT"
end script

post-stop script
  # Unmount, but only if mounted
  grep -qs "rpc_pipefs $PIPEFS_MOUNTPOINT" /proc/mounts && umount "$PIPEFS_MOUNTPOINT"
end script
