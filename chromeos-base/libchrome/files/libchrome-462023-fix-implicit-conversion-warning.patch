From 5ab43b74c45098b0a63f86e15039885434fbcb8e Mon Sep 17 00:00:00 2001
From: David Van Cleve <davidvc@chromium.org>
Date: Tue, 01 Oct 2019 19:18:23 +0000
Subject: [PATCH] TimeDelta::FromDouble now uses saturated_cast

This change resolves the issue described in crbug.com/612601 (internal)
by changing the existing ternary implementation of TimeDelta::FromDouble
into a call to saturated_cast.

Back in 2016, when TimeDelta::FromDouble's current control flow
was written (https://crrev.com/1976703005), there was some concern
about using saturated_cast here because TimeDelta's permitted values
ranged from Max() to -Max() at the time. jyasskin implemented
a safe version [1] that met the [-Max(), Max()] requirement, but it
looks like the CL got lost somewhere before landing.

As of February 2018 (crrev.com/c/539058), the internal
value of TimeDelta can now range over all int64_t's, so the desired
semantics of TimeDelta::FromDouble are now those of
saturated_cast<int64_t>.


This patch also fixes an issue with implicit int-double conversion in
json_writer.cc


diff --git a/base/time/time.h b/base/time/time.h
index 4689935..aed3de7 100644
--- a/base/time/time.h
+++ b/base/time/time.h
@@ -673,13 +673,7 @@
 
 // static
 constexpr TimeDelta TimeDelta::FromDouble(double value) {
-  // TODO(crbug.com/612601): Use saturated_cast<int64_t>(value) once we sort out
-  // the Min() behavior.
-  return value > std::numeric_limits<int64_t>::max()
-             ? Max()
-             : value < -std::numeric_limits<int64_t>::max()
-                   ? -Max()
-                   : TimeDelta(static_cast<int64_t>(value));
+  return TimeDelta(saturated_cast<int64_t>(value));
 }
 
 // static
diff --git a/base/json/json_writer.cc b/base/json/json_writer.cc
index 07b9d50..65fec16 100644
--- a/base/json/json_writer.cc
+++ b/base/json/json_writer.cc
@@ -83,8 +83,8 @@ bool JSONWriter::BuildJSONString(const Value& node, size_t depth) {
       bool result = node.GetAsDouble(&value);
       DCHECK(result);
       if (omit_double_type_preservation_ &&
-          value <= std::numeric_limits<int64_t>::max() &&
-          value >= std::numeric_limits<int64_t>::min() &&
+          value <= static_cast<double>(std::numeric_limits<int64_t>::max()) &&
+          value >= static_cast<double>(std::numeric_limits<int64_t>::min()) &&
           std::floor(value) == value) {
         json_string_->append(Int64ToString(static_cast<int64_t>(value)));
         return result;
