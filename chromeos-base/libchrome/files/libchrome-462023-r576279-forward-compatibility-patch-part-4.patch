From f2bf8effd1d36de3a08af138a1d559726b63f70d Mon Sep 17 00:00:00 2001
From: Qijiang Fan <fqj@chromium.org>
Date: Wed, 30 Oct 2019 14:54:23 +0900
Subject: [PATCH 4/5] libchrome: r576279 forward compatibility patch part 4
 (temporary)

Change-Id: I1d6b88d4f214107430ac16dace7274f1c6ccd0d0
---
 base/process/launch.h        | 10 +++++-----
 base/process/launch_posix.cc | 19 +++++++------------
 2 files changed, 12 insertions(+), 17 deletions(-)

diff --git a/base/process/launch.h b/base/process/launch.h
index 99a7280..3084838 100644
--- a/base/process/launch.h
+++ b/base/process/launch.h
@@ -27,6 +27,8 @@
 #include <windows.h>
 #endif
 
+#define FDS_TO_REMAP(fd_mapping) (std::move((fd_mapping)))
+
 namespace base {
 
 class CommandLine;
@@ -122,11 +124,9 @@ struct BASE_EXPORT LaunchOptions {
   // |environ|.
   bool clear_environ = false;
 
-  // If non-null, remap file descriptors according to the mapping of
-  // src fd->dest fd to propagate FDs into the child process.
-  // This pointer is owned by the caller and must live through the
-  // call to LaunchProcess().
-  const FileHandleMappingVector* fds_to_remap = nullptr;
+  // Remap file descriptors according to the mapping of src_fd->dest_fd to
+  // propagate FDs into the child process.
+  FileHandleMappingVector fds_to_remap;
 
   // Each element is an RLIMIT_* constant that should be raised to its
   // rlim_max.  This pointer is owned by the caller and must live through
diff --git a/base/process/launch_posix.cc b/base/process/launch_posix.cc
index 2184051..c43eb70 100644
--- a/base/process/launch_posix.cc
+++ b/base/process/launch_posix.cc
@@ -307,10 +307,7 @@ Process LaunchProcess(const std::vector<std::string>& argv,
   }
 #endif
 
-  size_t fd_shuffle_size = 0;
-  if (options.fds_to_remap) {
-    fd_shuffle_size = options.fds_to_remap->size();
-  }
+  size_t fd_shuffle_size = options.fds_to_remap.size();
 
   InjectiveMultimap fd_shuffle1;
   InjectiveMultimap fd_shuffle2;
@@ -455,14 +452,12 @@ Process LaunchProcess(const std::vector<std::string>& argv,
     }
 #endif  // defined(OS_CHROMEOS)
 
-    if (options.fds_to_remap) {
-      // Cannot use STL iterators here, since debug iterators use locks.
-      for (size_t i = 0; i < options.fds_to_remap->size(); ++i) {
-        const FileHandleMappingVector::value_type& value =
-            (*options.fds_to_remap)[i];
-        fd_shuffle1.push_back(InjectionArc(value.first, value.second, false));
-        fd_shuffle2.push_back(InjectionArc(value.first, value.second, false));
-      }
+    // Cannot use STL iterators here, since debug iterators use locks.
+    for (size_t i = 0; i < options.fds_to_remap.size(); ++i) {
+      const FileHandleMappingVector::value_type& value =
+          options.fds_to_remap[i];
+      fd_shuffle1.push_back(InjectionArc(value.first, value.second, false));
+      fd_shuffle2.push_back(InjectionArc(value.first, value.second, false));
     }
 
     if (!options.environ.empty() || options.clear_environ)
-- 
2.24.0.432.g9d3f5f5b63-goog

