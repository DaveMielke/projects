diff --git a/base/logging.cc b/base/logging.cc
index 7622fbe..a6d9cfc 100644
--- a/files/base/logging.cc
+++ b/files/base/logging.cc
@@ -326,6 +326,12 @@ void DisplayDebugMessageInDialog(const std::string& str) {
   if (str.empty())
     return;
 
+  // CommandLine::ForCurrentProcess() can DCHECK, which will call this function
+  // again so we need to protect against looping forever.
+  static bool already_processing_message = false;
+  if (already_processing_message)
+    return;
+  already_processing_message = true;
   if (CommandLine::ForCurrentProcess()->HasSwitch(switches::kNoErrorDialogs))
     return;
 
@@ -362,7 +368,7 @@ void DisplayDebugMessageInDialog(const std::string& str) {
     MessageBoxW(NULL, &cmdline[0], L"Fatal error",
                 MB_OK | MB_ICONHAND | MB_TOPMOST);
   }
-#elif defined(USE_X11)
+#elif defined(USE_X11) && !defined(OS_CHROMEOS)
   // Shell out to xmessage, which behaves like debug_message.exe, but is
   // way more retro.  We could use zenity/kdialog but then we're starting
   // to get into needing to check the desktop env and this dialog should
