# Copyright 2019 The Chromium OS Authors. All rights reserved.
# Distributed under the terms of the GNU General Public License v2

EAPI=6

# Honor the imports from the proto files. Import must start with "frameworks/".
CROS_GO_PACKAGES=(
	"frameworks/..."
)

inherit cros-go

DESCRIPTION="AOSP frameworks/base protobuf files"
HOMEPAGE="https://android.googlesource.com/platform/frameworks/base/+/refs/heads/master/core/proto/"
GIT_COMMIT="ce98a32755d817a0163bdff2fea5a1f6245f5c80"
# The patch file was automatically generated from this AOSP pull request: http://aosp/1100260
SRC_URI="https://android.googlesource.com/platform/frameworks/base/+archive/${GIT_COMMIT}/core/proto.tar.gz -> aosp-frameworks-base-core-proto-${PV}.tar.gz
		https://android.googlesource.com/platform/frameworks/base/+archive/${GIT_COMMIT}/libs/incident/proto.tar.gz -> aosp-frameworks-base-libs-incident-proto-${PV}.tar.gz
		https://android-review.googlesource.com/changes/platform%2Fframeworks%2Fbase~1100260/revisions/3/patch?zip -> aosp-frameworks-base-patch-${PV}.zip
		"
PATCHES=(
	# The patch inside the autogenerated .zip.
	"${WORKDIR}/16c0c0a.diff"
)

LICENSE="Apache-2.0"
SLOT="0"
KEYWORDS="*"

RDEPEND=""

DEPEND="${RDEPEND}
	dev-go/protobuf
	dev-libs/protobuf:=
"

S=${WORKDIR}

src_unpack() {
	# Unpack the tar.gz files manually since they need to be unpacked in special directories.

	mkdir -p frameworks/base/core/proto || die
	mkdir -p frameworks/base/libs/incident/proto || die

	pushd . || die
	cd frameworks/base/core/proto || die
	unpack "aosp-frameworks-base-core-proto-${PV}.tar.gz"
	popd || die

	pushd . || die
	cd frameworks/base/libs/incident/proto || die
	unpack "aosp-frameworks-base-libs-incident-proto-${PV}.tar.gz"
	popd || die

	unpack "aosp-frameworks-base-patch-${PV}.zip"
}

src_prepare() {
	# The patch belongs to the frameworks/base git repo.
	# We have to apply it inside that directory in order to make it work.
	pushd . || die
	cd frameworks/base || die
	default
	popd || die
}

src_compile() {
	# SRC_URI contains all .proto files from Android frameworks/base (~100 .proto files).
	# For Tast, we only need a subset: Activity Manager,  Window Manager,
	# and its dependencies.
	# If there is a need to add more, add a new "protoc" or extend an
	# existing one.

	# core/proto path
	local cp="${WORKDIR}/frameworks/base/core/proto/android"
	# libs/incident/proto path
	local lip="${WORKDIR}/frameworks/base/libs/incident/proto/android"
	local out="${WORKDIR}/gen/go/src"

	mkdir -p "${out}" || die
	# One "protoc" invocation per directory, otherwise it will create
	# package conflicts.
	protoc \
		--go_out="${out}" \
		--proto_path="${WORKDIR}" \
		"${lip}/privacy.proto" \
		|| die

	protoc \
		--go_out="${out}" \
		--proto_path="${WORKDIR}" \
		"${cp}/app/enums.proto" \
		"${cp}/app/activitymanager.proto" \
		"${cp}/app/notification.proto" \
		"${cp}/app/profilerinfo.proto" \
		"${cp}/app/statusbarmanager.proto" \
		"${cp}/app/window_configuration.proto" \
		|| die

	protoc \
		--go_out="${out}" \
		--proto_path="${WORKDIR}" \
		"${cp}/content/activityinfo.proto" \
		"${cp}/content/component_name.proto" \
		"${cp}/content/configuration.proto" \
		"${cp}/content/intent.proto" \
		"${cp}/content/locale.proto" \
		"${cp}/content/package_item_info.proto" \
		|| die

	protoc \
		--go_out="${out}" \
		--proto_path="${WORKDIR}" \
		"${cp}/graphics/pixelformat.proto" \
		"${cp}/graphics/point.proto" \
		"${cp}/graphics/rect.proto" \
		|| die

	protoc \
		--go_out="${out}" \
		--proto_path="${WORKDIR}" \
		"${cp}/internal/processstats.proto" \
		|| die

	protoc \
		--go_out="${out}" \
		--proto_path="${WORKDIR}" \
		"${cp}/os/bundle.proto" \
		"${cp}/os/looper.proto" \
		"${cp}/os/message.proto" \
		"${cp}/os/messagequeue.proto" \
		"${cp}/os/patternmatcher.proto" \
		"${cp}/os/powermanager.proto" \
		"${cp}/os/worksource.proto" \
		|| die

	protoc \
		--go_out="${out}" \
		--proto_path="${WORKDIR}" \
		"${cp}/server/activitymanagerservice.proto" \
		"${cp}/server/animationadapter.proto" \
		"${cp}/server/appwindowthumbnail.proto" \
		"${cp}/server/intentresolver.proto" \
		"${cp}/server/surfaceanimator.proto" \
		"${cp}/server/windowmanagerservice.proto" \
		|| die

	protoc \
		--go_out="${out}" \
		--proto_path="${WORKDIR}" \
		"${cp}/util/common.proto" \
		|| die

	protoc \
		--go_out="${out}" \
		--proto_path="${WORKDIR}" \
		"${cp}/view/display.proto" \
		"${cp}/view/displaycutout.proto" \
		"${cp}/view/displayinfo.proto" \
		"${cp}/view/enums.proto" \
		"${cp}/view/remote_animation_target.proto" \
		"${cp}/view/surface.proto" \
		"${cp}/view/surfacecontrol.proto" \
		"${cp}/view/windowlayoutparams.proto" \
		|| die

	CROS_GO_WORKSPACE="${WORKDIR}/gen/go/"
}
