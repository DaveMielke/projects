#!/bin/bash
. /brltty/current/bin/brltty-prologue.bash

downloadVideo() {
   local arguments=("${@}")

   [ -n "${userName}" ] && {
      [ -n "${userPassword}" ] || {
         local password
         read -s -r -p "${programName}: password? " -- password
         echo >&2 ""

         [ -n "${password}" ] || semanticError "password not entered"
         userPassword="${password}"
      }

      arguments=(--username "${userName}" --password "${userPassword}" "${@}")
   }

   executeHostCommand yt-dlp "${arguments[@]}"
}

playStream() {
   local url="${1}"

   "${noPlay}" || executeHostCommand vlc --quiet --play-and-exit --no-video --intf "${interactiveInterface}" -- "${url}"
}

defaultAudioFormat="mp3"
defaultInteractiveInterface="rc"

addProgramOption n flag noDownload "don't download the stream"
addProgramOption N flag noPlay "don't play the stream"
addProgramOption f string.format audioFormat "the audio format to render" "${defaultAudioFormat}"
addProgramOption i string.name interactiveInterface "the name of the VLC interactive interfae to use" "${defaultInteractiveInterface}"
addProgramOption u string.user userName "the name of the user to log in with" "to not log in"
addProgramOption p string.text userPassword "the password for the user when logging in" "to prompt for it"
addProgramParameter identifier streamIdentifier "the 11-character stream identifier"
parseProgramArguments "${@}"

[ -n "${audioFormat}" ] || audioFormat="${defaultAudioFormat}"
verifyChoice "audio format" audioFormat aac flac mp3 m4a opus vorbis wav

[ -n "${interactiveInterface}" ] || interactiveInterface="${defaultInteractiveInterface}"
verifyChoice "interactive interface" interactiveInterface rc lirc ncurses qt skins2

set -e

{
   read title
   read file
   read duration
} < <(downloadVideo --get-title --get-filename --get-duration -- "${streamIdentifier}")

echo "Title: ${title}"

if [ "${duration}" = "0" ]
then
   {
      read url
   } < <(downloadVideo --get-url -- "${streamIdentifier}")

   "${noDownload}" || playStream "${url}"
else
   echo "Duration: ${duration}"

   "${noDownload}" || {
      file="${file%.*}.${audioFormat}"
      echo "File: ${file}"

      path="$(pwd)/${file}"
      downloadVideo --quiet --extract-audio --audio-format "${audioFormat}" -- "${streamIdentifier}"

      link="yt.${audioFormat}"
      ln --force -- "${path}" "${link}"

      playStream "file://${path}"
      rm -- "${path}"
   }
fi

exit 0
