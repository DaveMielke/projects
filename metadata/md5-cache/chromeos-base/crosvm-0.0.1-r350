DEFINED_PHASES=compile configure info install preinst prepare setup test unpack
DEPEND=sys-apps/dtc sys-libs/libcap:= !chromeos-base/crosvm-bin chromeos-base/minijail crosvm-gpu? ( dev-libs/wayland media-libs/virglrenderer ) crosvm-wl-dmabuf? ( media-libs/minigbm ) crosvm-usb? ( virtual/libusb:1= ) ~dev-rust/byteorder-1.1.0:= ~dev-rust/cc-1.0.25:= ~dev-rust/getopts-0.2.18:= ~dev-rust/libc-0.2.44:= ~dev-rust/num_cpus-1.9.0:= ~dev-rust/pkg-config-0.3.11:= ~dev-rust/protoc-rust-1.4.3:= ~dev-rust/protobuf-1.4.3:= ~dev-rust/proc-macro2-0.4.21:= ~dev-rust/quote-0.6.10:= ~dev-rust/syn-0.15.21:= crosvm-gpu-forward? ( chromeos-base/rendernodehost:= ) crosvm-tpm? ( chromeos-base/tpm2:= ) media-sound/audio_streams:= media-sound/libcras:= >=virtual/rust-1.28.0:= >=dev-util/cargo-0.29.0 dev-vcs/git sys-apps/baselayout
DESCRIPTION=Utility for running Linux VMs on Chrome OS
EAPI=6
IUSE=test cros-debug crosvm-gpu -crosvm-plugin +crosvm-wl-dmabuf crosvm-tpm +crosvm-usb crosvm-gpu-forward cros-debug asan coverage fuzzer msan tsan ubsan asan fuzzer lsan +lto msan test tsan cros_host cros_workon_tree_522e90f448a9d1e7f7889774c8bfea26b0b7ccd8
KEYWORDS=*
LICENSE=BSD-Google
RDEPEND=sys-apps/dtc sys-libs/libcap:= !chromeos-base/crosvm-bin chromeos-base/minijail crosvm-gpu? ( dev-libs/wayland media-libs/virglrenderer ) crosvm-wl-dmabuf? ( media-libs/minigbm ) crosvm-usb? ( virtual/libusb:1= ) sys-apps/baselayout
REQUIRED_USE=?? ( asan lsan msan tsan )
SLOT=0
_eclasses_=cros-constants	bf71cd1168b6441b64a8cdbc06c36eda	cros-debug	d2750757005d6a444f8eb12bb9eb9944	cros-rust	16f1686e69be6e227c902e25dc57d252	cros-sanitizers	dc40d713077337d5ea46e415f9b955c6	cros-workon	95ad12f00a41358c69ea7582e50958e1	eutils	06133990e861be0fe60c2b428fd025d9	flag-o-matic	5d5921a298e95441da2f85be419894c0	git-2	8c47ad5a0bf57db218b06ee8cb9829c2	multilib	b2f01ad412baf81650c23fcf0975fa33	toolchain-funcs	ff3698c695a0f23eeee44c139183118d	user	059bd54dd6b0acf0eb8961c4ec0c2b64
_md5_=fac01a791150f6dc9929e433a9a84b33
