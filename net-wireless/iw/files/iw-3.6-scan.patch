diff -u iw-3.6.orig//nl80211.h iw-3.6/nl80211.h
--- iw-3.6.orig//nl80211.h	2012-09-24 11:20:29.524118445 -0700
+++ iw-3.6/nl80211.h	2012-09-24 11:20:38.254184112 -0700
@@ -3025,4 +3025,18 @@
 	NL80211_PROBE_RESP_OFFLOAD_SUPPORT_80211U =	1<<3,
 };
 
+/**
+ * enum nl80211_scan_flags -  scan request control flags
+ *
+ * Scan request control flags are used to control the handling
+ * of NL80211_CMD_TRIGGER_SCAN, requests.
+ *
+ * @NL80211_SCAN_FLAG_TX_ABORT: abort scan if tx collides
+ * @NL80211_SCAN_FLAG_FLUSH: flush bss cache before scan
+ */
+enum nl80211_scan_flags {
+	NL80211_SCAN_FLAG_TX_ABORT	= 1<<0,
+	NL80211_SCAN_FLAG_FLUSH		= 1<<1,
+};
+
 #endif /* __LINUX_NL80211_H */
diff -u iw-3.6.orig//scan.c iw-3.6/scan.c
--- iw-3.6.orig//scan.c	2012-09-24 11:20:29.524118445 -0700
+++ iw-3.6/scan.c	2012-09-24 11:20:34.704157409 -0700
@@ -73,6 +73,7 @@
 	bool passive = false, have_ssids = false, have_freqs = false;
 	size_t tmp;
 	unsigned char *ies;
+	int flags = 0;
 
 	ssids = nlmsg_alloc();
 	if (!ssids)
@@ -102,6 +103,14 @@
 				parse = DONE;
 				passive = true;
 				break;
+			} else if (strcmp(argv[i], "txabort") == 0) {
+				parse = DONE;
+				flags |= NL80211_SCAN_FLAG_TX_ABORT;
+				break;
+			} else if (strcmp(argv[i], "flush") == 0) {
+				parse = DONE;
+				flags |= NL80211_SCAN_FLAG_FLUSH;
+				break;
 			}
 		case DONE:
 			return 1;
@@ -136,6 +145,8 @@
 
 	if (have_freqs)
 		nla_put_nested(msg, NL80211_ATTR_SCAN_FREQUENCIES, freqs);
+	if (flags)
+		NLA_PUT_U32(msg, NL80211_ATTR_SCAN_FLAGS, flags);
 
 	err = 0;
  nla_put_failure:
@@ -1287,14 +1298,11 @@
 	};
 	int trig_argc, dump_argc, err;
 
-	if (argc >= 3 && !strcmp(argv[2], "-u")) {
-		dump_argc = 4;
-		dump_argv[3] = "-u";
-	} else if (argc >= 3 && !strcmp(argv[2], "-b")) {
-		dump_argc = 4;
-		dump_argv[3] = "-b";
-	} else
-		dump_argc = 3;
+	dump_argc = 3;
+	if (argc >= 3 && !strcmp(argv[2], "-u"))
+		dump_argv[dump_argc++] = "-u";
+	else if (argc >= 3 && !strcmp(argv[2], "-b"))
+		dump_argv[dump_argc++] = "-b";
 
 	trig_argc = 3 + (argc - 2) + (3 - dump_argc);
 	trig_argv = calloc(trig_argc, sizeof(*trig_argv));
@@ -1344,7 +1352,7 @@
 	dump_argv[0] = argv[0];
 	return handle_cmd(state, id, dump_argc, dump_argv);
 }
-TOPLEVEL(scan, "[-u] [freq <freq>*] [ies <hex as 00:11:..>] [ssid <ssid>*|passive]", 0, 0,
+TOPLEVEL(scan, "[-u] [freq <freq>*] [ies <hex as 00:11:..>] [ssid <ssid>*|passive|txabort|flush]", 0, 0,
 	 CIB_NETDEV, handle_scan_combined,
 	 "Scan on the given frequencies and probe for the given SSIDs\n"
 	 "(or wildcard if not given) unless passive scanning is requested.\n"
@@ -1354,7 +1362,8 @@
 	NL80211_CMD_GET_SCAN, NLM_F_DUMP, CIB_NETDEV, handle_scan_dump,
 	"Dump the current scan results. If -u is specified, print unknown\n"
 	"data in scan results.");
-COMMAND(scan, trigger, "[freq <freq>*] [ies <hex as 00:11:..>] [ssid <ssid>*|passive]",
+COMMAND(scan, trigger, "[freq <freq>*] [ies <hex as 00:11:..>] [ssid <ssid>*|passive|txabort|flush]",
 	NL80211_CMD_TRIGGER_SCAN, 0, CIB_NETDEV, handle_scan,
 	 "Trigger a scan on the given frequencies with probing for the given\n"
+
 	 "SSIDs (or wildcard if not given) unless passive scanning is requested.");
