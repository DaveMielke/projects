From 393f2cb29464888941e9a3ca73430dba51e0fae0 Mon Sep 17 00:00:00 2001
From: Alex Deymo <deymo@chromium.org>
Date: Thu, 2 May 2013 13:50:57 -0700
Subject: [PATCH] audio: Don't create an avctp session on avrcp disconnect

If a paired and connected audio device is disconnected, the
avrcp_disconnect() could create a new avctp session that will keep
a reference to the corresponding btd_device, preventing it to be
removed as explained below. This fix prevents avrcp_disconnect()
to create a new and disconnected avctp session when it doesn't
exists.

Calling org.bluez.Device1.Disconnect on an audio device like the
"Monster ClarityHD" will cause first a a2dp_sink_disconnect() call,
and then a sink_disconnect() call.
This will change the state of the existing avdtp session to
AVCTP_STATE_DISCONNECTED triggering a series of callback calls.
Among those, the avdtp_set_state() function will call the registered
avdtp_callbacks, including avdtp_state_callback() which in turns
updates the disconnected state using sink_set_state(). This function
will call the registered sink_callbacks, including device_sink_cb().

By this point, the device_sink_cb() will attempt a avrcp_disconnect()
over a session that was already disconnected before by the device's
diconnect_cb(). This new avrcp_disconnect() causes the avctp_get() to
create a new avctp session that holds a reference to the disconnecting
btd_device.

Steps to reproduce using bluetoothctl:
1. Pair and Connect a Monter ClarityHD audio device.
2. Play some music on it.
3. Disconnect the device.
4. Remove the device.
The "remove" command succeeds, but bluetoothd does not sends a removal
signal ([DEL] message) for that device.
---
 profiles/audio/avctp.c   | 13 ++++++++-----
 profiles/audio/avctp.h   |  2 +-
 profiles/audio/avrcp.c   |  2 +-
 profiles/audio/control.c |  2 +-
 4 files changed, 11 insertions(+), 8 deletions(-)

diff --git a/profiles/audio/avctp.c b/profiles/audio/avctp.c
index 21aeb6f..c521e22 100644
--- a/profiles/audio/avctp.c
+++ b/profiles/audio/avctp.c
@@ -1205,7 +1205,7 @@ static struct avctp *find_session(GSList *list, struct btd_device *device)
 	return NULL;
 }
 
-static struct avctp *avctp_get_internal(struct btd_device *device)
+static struct avctp *avctp_get_internal(struct btd_device *device, bool create)
 {
 	struct avctp_server *server;
 	struct avctp *session;
@@ -1218,6 +1218,9 @@ static struct avctp *avctp_get_internal(struct btd_device *device)
 	if (session)
 		return session;
 
+	if (!create)
+		return NULL;
+
 	session = g_new0(struct avctp, 1);
 
 	session->server = server;
@@ -1312,7 +1315,7 @@ static void avctp_confirm_cb(GIOChannel *chan, gpointer data)
 	if (!device)
 		return;
 
-	session = avctp_get_internal(device);
+	session = avctp_get_internal(device, TRUE);
 	if (session == NULL)
 		return;
 
@@ -1819,7 +1822,7 @@ struct avctp *avctp_connect(struct audio_device *device)
 	GError *err = NULL;
 	GIOChannel *io;
 
-	session = avctp_get_internal(device->btd_dev);
+	session = avctp_get_internal(device->btd_dev, TRUE);
 	if (!session)
 		return NULL;
 
@@ -1892,7 +1895,7 @@ void avctp_disconnect(struct avctp *session)
 	avctp_set_state(session, AVCTP_STATE_DISCONNECTED);
 }
 
-struct avctp *avctp_get(struct audio_device *device)
+struct avctp *avctp_get(struct audio_device *device, bool create)
 {
-	return avctp_get_internal(device->btd_dev);
+	return avctp_get_internal(device->btd_dev, create);
 }
diff --git a/profiles/audio/avctp.h b/profiles/audio/avctp.h
index 648e982..14b0a21 100644
--- a/profiles/audio/avctp.h
+++ b/profiles/audio/avctp.h
@@ -116,7 +116,7 @@ int avctp_register(struct btd_adapter *adapter, gboolean master);
 void avctp_unregister(struct btd_adapter *adapter);
 
 struct avctp *avctp_connect(struct audio_device *device);
-struct avctp *avctp_get(struct audio_device *device);
+struct avctp *avctp_get(struct audio_device *device, bool create);
 int avctp_connect_browsing(struct avctp *session);
 void avctp_disconnect(struct avctp *session);
 
diff --git a/profiles/audio/avrcp.c b/profiles/audio/avrcp.c
index 512b018..af5d4ae 100644
--- a/profiles/audio/avrcp.c
+++ b/profiles/audio/avrcp.c
@@ -2867,7 +2867,7 @@ void avrcp_disconnect(struct audio_device *dev)
 {
 	struct avctp *session;
 
-	session = avctp_get(dev);
+	session = avctp_get(dev, FALSE);
 	if (!session)
 		return;
 
diff --git a/profiles/audio/control.c b/profiles/audio/control.c
index 6086bde..fa7b606 100644
--- a/profiles/audio/control.c
+++ b/profiles/audio/control.c
@@ -84,7 +84,7 @@ static void state_changed(struct audio_device *dev, avctp_state_t old_state,
 		if (control->session)
 			break;
 
-		control->session = avctp_get(dev);
+		control->session = avctp_get(dev, TRUE);
 
 		break;
 	case AVCTP_STATE_CONNECTED:
-- 
1.8.2.1

