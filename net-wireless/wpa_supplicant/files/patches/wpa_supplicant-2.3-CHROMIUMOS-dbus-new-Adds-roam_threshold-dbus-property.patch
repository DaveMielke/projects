From 2f6d495abe46ef7fc39681dfec21007ce517f850 Mon Sep 17 00:00:00 2001
From: Wade Guthrie <wdg@chromium.org>
Date: Mon, 7 Oct 2013 17:34:20 -0700
Subject: [PATCH] CHROMIUM: dbus new: Adds roam_threshold dbus property.

Adds the roam_threshold dbus property to set the corresponding value in
wpas->conf.  This value determines the signal-to-noise level under which
an AP's signal causes supplicant to attempt to roam (in response to an
RSSI below threshold message).

BUG=chromium:306695
TEST=Tested with new shill functions in
	https://gerrit.chromium.org/gerrit/173248

Change-Id: I99f64404d54efd94b64bd8a96c092cf878e04ef0
Reviewed-on: https://chromium-review.googlesource.com/173100
Reviewed-by: Wade Guthrie <wdg@chromium.org>
Commit-Queue: Wade Guthrie <wdg@chromium.org>
Tested-by: Wade Guthrie <wdg@chromium.org>
---
 wpa_supplicant/dbus/dbus_new.c          |  4 +++
 wpa_supplicant/dbus/dbus_new_handlers.c | 46 +++++++++++++++++++++++++++++++++
 wpa_supplicant/dbus/dbus_new_handlers.h |  8 ++++++
 wpa_supplicant/wpa_supplicant.c         | 17 ++++++++++++
 wpa_supplicant/wpa_supplicant_i.h       |  2 ++
 5 files changed, 77 insertions(+)

diff --git a/wpa_supplicant/dbus/dbus_new.c b/wpa_supplicant/dbus/dbus_new.c
index 4cb321c..9dc2295 100644
--- a/wpa_supplicant/dbus/dbus_new.c
+++ b/wpa_supplicant/dbus/dbus_new.c
@@ -2963,6 +2963,10 @@ static const struct wpa_dbus_property_desc wpas_dbus_interface_properties[] = {
 	  wpas_dbus_getter_pkcs11_module_path,
 	  NULL
 	},
+	{ "RoamThreshold", WPAS_DBUS_NEW_IFACE_INTERFACE, "q",
+	  wpas_dbus_getter_roam_threshold,
+	  wpas_dbus_setter_roam_threshold
+	},
 	{ "DisableHighBitrates", WPAS_DBUS_NEW_IFACE_INTERFACE, "b",
 	  wpas_dbus_getter_disable_high_bitrates,
 	  wpas_dbus_setter_disable_high_bitrates
diff --git a/wpa_supplicant/dbus/dbus_new_handlers.c b/wpa_supplicant/dbus/dbus_new_handlers.c
index cec5452..01beddc 100644
--- a/wpa_supplicant/dbus/dbus_new_handlers.c
+++ b/wpa_supplicant/dbus/dbus_new_handlers.c
@@ -3144,6 +3144,52 @@ dbus_bool_t wpas_dbus_setter_scan_interval(DBusMessageIter *iter,
 
 
 /**
+ * wpas_dbus_getter_roam_threshold - Get roam threshold
+ * @iter: Pointer to incoming dbus message iter
+ * @error: Location to store error on failure
+ * @user_data: Function specific data
+ * Returns: TRUE on success, FALSE on failure
+ *
+ * Getter function for "RoamThreshold" property.
+ */
+dbus_bool_t wpas_dbus_getter_roam_threshold(DBusMessageIter *iter,
+					    DBusError *error,
+					    void *user_data)
+{
+	struct wpa_supplicant *wpa_s = user_data;
+	dbus_uint16_t roam_threshold = wpa_s->conf->roam_threshold;
+
+	return wpas_dbus_simple_property_getter(iter, DBUS_TYPE_UINT16,
+						&roam_threshold, error);
+}
+
+
+/**
+ * wpas_dbus_setter_roam_threshold - Control roam threshold
+ * @iter: Pointer to incoming dbus message iter
+ * @error: Location to store error on failure
+ * @user_data: Function specific data
+ * Returns: TRUE on success, FALSE on failure
+ *
+ * Setter function for "RoamThreshold" property.
+ */
+dbus_bool_t wpas_dbus_setter_roam_threshold(DBusMessageIter *iter,
+					    DBusError *error,
+					    void *user_data)
+{
+	struct wpa_supplicant *wpa_s = user_data;
+	dbus_uint16_t roam_threshold;
+
+	if (!wpas_dbus_simple_property_setter(iter, error, DBUS_TYPE_UINT16,
+					      &roam_threshold))
+		return FALSE;
+
+	wpa_supplicant_set_roam_threshold(wpa_s, roam_threshold);
+	return TRUE;
+}
+
+
+/**
  * wpas_dbus_getter_disable_high_bitrates - Disable high bitrates for
  * each association on this interface.
  * @iter: Pointer to incoming dbus message iter
diff --git a/wpa_supplicant/dbus/dbus_new_handlers.h b/wpa_supplicant/dbus/dbus_new_handlers.h
index f8a9b0b..7cf996f 100644
--- a/wpa_supplicant/dbus/dbus_new_handlers.h
+++ b/wpa_supplicant/dbus/dbus_new_handlers.h
@@ -201,6 +201,14 @@ dbus_bool_t wpas_dbus_setter_scan_interval(DBusMessageIter *iter,
 					   DBusError *error,
 					   void *user_data);
 
+dbus_bool_t wpas_dbus_getter_roam_threshold(DBusMessageIter *iter,
+					    DBusError *error,
+					    void *user_data);
+
+dbus_bool_t wpas_dbus_setter_roam_threshold(DBusMessageIter *iter,
+					    DBusError *error,
+					    void *user_data);
+
 dbus_bool_t wpas_dbus_getter_disable_high_bitrates(DBusMessageIter *iter,
 						   DBusError *error,
 						   void *user_data);
diff --git a/wpa_supplicant/wpa_supplicant.c b/wpa_supplicant/wpa_supplicant.c
index 81eb802..a3ae282 100644
--- a/wpa_supplicant/wpa_supplicant.c
+++ b/wpa_supplicant/wpa_supplicant.c
@@ -2442,6 +2442,23 @@ int wpa_supplicant_set_scan_interval(struct wpa_supplicant *wpa_s,
 
 
 /**
+ * wpa_supplicant_set_roam_threshold - Set roam threshold
+ * @wpa_s: wpa_supplicant structure for a network interface
+ * @roam_threshold: roam threshold in dB
+ * Returns: 0 if succeed or -1 if roam_threshold has an invalid value
+ *
+ */
+int wpa_supplicant_set_roam_threshold(struct wpa_supplicant *wpa_s,
+				      unsigned int roam_threshold)
+{
+	wpa_msg(wpa_s, MSG_DEBUG, "Setting roam threshold: %d dB",
+		roam_threshold);
+	wpa_s->conf->roam_threshold = roam_threshold;
+
+	return 0;
+}
+
+/**
  * wpa_supplicant_set_debug_params - Set global debug params
  * @global: wpa_global structure
  * @debug_level: debug level
diff --git a/wpa_supplicant/wpa_supplicant_i.h b/wpa_supplicant/wpa_supplicant_i.h
index 4295978..f24e9eb 100644
--- a/wpa_supplicant/wpa_supplicant_i.h
+++ b/wpa_supplicant/wpa_supplicant_i.h
@@ -936,6 +936,8 @@ int wpa_supplicant_set_bss_expiration_count(struct wpa_supplicant *wpa_s,
 					    unsigned int expire_count);
 int wpa_supplicant_set_scan_interval(struct wpa_supplicant *wpa_s,
 				     int scan_interval);
+int wpa_supplicant_set_roam_threshold(struct wpa_supplicant *wpa_s,
+				      unsigned int roam_threshold);
 int wpa_supplicant_set_debug_params(struct wpa_global *global,
 				    int debug_level, int debug_timestamp,
 				    int debug_show_keys);
-- 
2.2.0.rc0.207.ga3a616c

