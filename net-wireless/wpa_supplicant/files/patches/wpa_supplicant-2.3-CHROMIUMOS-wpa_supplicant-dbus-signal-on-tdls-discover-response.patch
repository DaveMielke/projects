diff -pur wpa_supplicant/dbus/dbus_new.c wpa_supplicant_modified/dbus/dbus_new.c
--- wpa_supplicant/dbus/dbus_new.c	2015-04-03 13:31:41.029165215 -0700
+++ wpa_supplicant_modified/dbus/dbus_new.c	2015-04-03 13:32:27.062205340 -0700
@@ -935,6 +935,52 @@ void wpas_dbus_signal_sta_deauthorized(s
 }
 
 
+#ifdef CONFIG_TDLS
+
+/**
+ * wpas_dbus_signal_tdls_discover_response - Signals the
+ * reception of a TDLS discover response packet
+ * @wpa_s: %wpa_supplicant network interface data
+ * @sta: Peer mac mac address
+ *
+ * Notify listeners about the reception of a TDLS discover
+ * message
+ */
+void wpas_dbus_signal_tdls_discover_response(struct wpa_supplicant *wpa_s,
+					     const u8 *peer_addr)
+{
+	struct wpas_dbus_priv *iface;
+	DBusMessage *msg;
+	char peer_mac[WPAS_DBUS_OBJECT_PATH_MAX];
+	char *dev_mac;
+
+	os_snprintf(peer_mac, sizeof(peer_mac), MACSTR, MAC2STR(peer_addr));
+	dev_mac = peer_mac;
+
+	iface = wpa_s->global->dbus;
+
+	/* Do nothing if the control interface is not turned on */
+	if (iface == NULL)
+		return;
+
+	msg = dbus_message_new_signal(wpa_s->dbus_new_path,
+				      WPAS_DBUS_NEW_IFACE_INTERFACE,
+				      "TDLSDiscoverResponse");
+	if (msg == NULL)
+		return;
+
+	if (dbus_message_append_args(msg, DBUS_TYPE_STRING, &dev_mac,
+				     DBUS_TYPE_INVALID))
+		dbus_connection_send(iface->con, msg, NULL);
+	else
+		wpa_printf(MSG_ERROR, "dbus: Failed to construct signal");
+	dbus_message_unref(msg);
+
+	wpa_printf(MSG_DEBUG, "dbus: TDLS discover response address '%s'",
+		   dev_mac);
+}
+#endif /* CONFIG_TDLS */
+
 #ifdef CONFIG_P2P
 
 /**
@@ -3277,6 +3323,14 @@ static const struct wpa_dbus_signal_desc
 		  END_ARGS
 	  }
 	},
+#ifdef CONFIG_TDLS
+	{ "TDLSDiscoverResponse", WPAS_DBUS_NEW_IFACE_INTERFACE,
+	  {
+		  { "peer_address", "s", ARG_OUT },
+		  END_ARGS
+	  }
+	},
+#endif /* CONFIG_TDLS */
 	{ NULL, NULL, { END_ARGS } }
 };
 
diff -pur wpa_supplicant/dbus/dbus_new.h wpa_supplicant_modified/dbus/dbus_new.h
--- wpa_supplicant/dbus/dbus_new.h	2014-10-09 07:41:31.000000000 -0700
+++ wpa_supplicant_modified/dbus/dbus_new.h	2015-04-03 13:32:27.058205249 -0700
@@ -226,6 +226,8 @@ void wpas_dbus_signal_sta_authorized(str
 				     const u8 *sta);
 void wpas_dbus_signal_sta_deauthorized(struct wpa_supplicant *wpa_s,
 				       const u8 *sta);
+void wpas_dbus_signal_tdls_discover_response(struct wpa_supplicant *wpa_s,
+					     const u8 *peer_addr);
 
 #else /* CONFIG_CTRL_IFACE_DBUS_NEW */
 
@@ -515,6 +517,11 @@ void wpas_dbus_signal_sta_deauthorized(s
 {
 }
 
+static inline
+void wpas_dbus_signal_tdls_discover_response(struct wpa_supplicant *wpa_s,
+					     const u8 *peer_addr)
+{
+}
 #endif /* CONFIG_CTRL_IFACE_DBUS_NEW */
 
 #endif /* CTRL_IFACE_DBUS_H_NEW */
diff -pur wpa_supplicant/events.c wpa_supplicant_modified/events.c
--- wpa_supplicant/events.c	2015-04-03 13:31:40.641156448 -0700
+++ wpa_supplicant_modified/events.c	2015-04-03 13:32:27.046204978 -0700
@@ -2920,6 +2920,7 @@ static void wpas_event_rx_mgmt_action(st
 		wpa_dbg(wpa_s, MSG_DEBUG,
 			"TDLS: Received Discovery Response from " MACSTR,
 			MAC2STR(mgmt->sa));
+		wpas_notify_tdls_discover_response(wpa_s, mgmt->sa);
 		return;
 	}
 #endif /* CONFIG_TDLS */
diff -pur wpa_supplicant/notify.c wpa_supplicant_modified/notify.c
--- wpa_supplicant/notify.c	2014-10-09 07:41:31.000000000 -0700
+++ wpa_supplicant_modified/notify.c	2015-04-03 13:32:27.050205068 -0700
@@ -648,3 +648,11 @@ void wpas_notify_network_bssid_set_chang
 	wpa_drv_roaming(wpa_s, !ssid->bssid_set,
 			ssid->bssid_set ? ssid->bssid : NULL);
 }
+
+void wpas_notify_tdls_discover_response(struct wpa_supplicant *wpa_s,
+					const u8 *peer_addr)
+{
+#ifdef CONFIG_TDLS
+	wpas_dbus_signal_tdls_discover_response(wpa_s, peer_addr);
+#endif /* CONFIG_TDLS */
+}
diff -pur wpa_supplicant/notify.h wpa_supplicant_modified/notify.h
--- wpa_supplicant/notify.h	2014-10-09 07:41:31.000000000 -0700
+++ wpa_supplicant_modified/notify.h	2015-04-03 13:32:27.038204797 -0700
@@ -130,5 +130,7 @@ void wpas_notify_eap_status(struct wpa_s
 			    const char *parameter);
 void wpas_notify_network_bssid_set_changed(struct wpa_supplicant *wpa_s,
 					   struct wpa_ssid *ssid);
+void wpas_notify_tdls_discover_response(struct wpa_supplicant *wpa_s,
+					const u8 *peer_addr);
 
 #endif /* NOTIFY_H */
