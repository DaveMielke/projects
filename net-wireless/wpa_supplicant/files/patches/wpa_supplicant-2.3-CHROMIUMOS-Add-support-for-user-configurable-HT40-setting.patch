From 475ef610b10dc2142062422832530b1ba5c89bb7 Mon Sep 17 00:00:00 2001
From: Peter Qiu <zqiu@chromium.org>
Date: Tue, 30 Sep 2014 15:01:51 -0700
Subject: [PATCH] Add support for user configurable HT40 setting

Add a DBUS command to enable/disable HT40 for a network. Also do not
perform OBSS scan if HT40 is disabled on the given network.

BUG=chromium:419046
TEST=emerge-peppy wpa_supplicant
CQ-DEPEND=CL:221216

Change-Id: Ic6f2ec6a5e8e147cbc8ff4fec4c6b77feb58b0d0
Reviewed-on: https://chromium-review.googlesource.com/220651
Reviewed-by: Paul Stewart <pstew@chromium.org>
Tested-by: Peter Qiu <zqiu@chromium.org>
Commit-Queue: Peter Qiu <zqiu@chromium.org>
---
 wpa_supplicant/dbus/dbus_new.c          |  8 +++++
 wpa_supplicant/dbus/dbus_new_handlers.c | 62 +++++++++++++++++++++++++++++++++
 wpa_supplicant/dbus/dbus_new_handlers.h |  3 ++
 wpa_supplicant/sme.c                    |  6 ++++
 4 files changed, 79 insertions(+)

diff --git a/wpa_supplicant/dbus/dbus_new.c b/wpa_supplicant/dbus/dbus_new.c
index 9dc2295..22ea8db 100644
--- a/wpa_supplicant/dbus/dbus_new.c
+++ b/wpa_supplicant/dbus/dbus_new.c
@@ -2633,6 +2633,14 @@ static const struct wpa_dbus_method_desc wpas_dbus_interface_methods[] = {
 		  END_ARGS
 	  }
 	},
+	{ "SetHT40Enable", WPAS_DBUS_NEW_IFACE_INTERFACE,
+	  (WPADBusMethodHandler) &wpas_dbus_handler_set_ht40_enable,
+	  {
+		  { "path", "o", ARG_IN },
+		  { "enable", "b", ARG_IN },
+		  END_ARGS
+	  }
+	},
 
 #ifdef CONFIG_WPS
 	{ "Start", WPAS_DBUS_NEW_IFACE_WPS,
diff --git a/wpa_supplicant/dbus/dbus_new_handlers.c b/wpa_supplicant/dbus/dbus_new_handlers.c
index 01beddc..906e2c6 100644
--- a/wpa_supplicant/dbus/dbus_new_handlers.c
+++ b/wpa_supplicant/dbus/dbus_new_handlers.c
@@ -2055,6 +2055,68 @@ DBusMessage * wpas_dbus_handler_enable_high_bitrates(DBusMessage *message,
 	return reply;
 }
 
+/**
+ * wpas_dbus_handler_set_ht40_enable - Enable/disable HT40 for a network.
+ * @message: Pointer to incoming dbus message
+ * @wpa_s: wpa_supplicant structure for a network interface
+ * Returns: NULL on success or dbus error on failure
+ *
+ * Handler function for "SetHT40Enable" method call of network interface.
+ */
+DBusMessage * wpas_dbus_handler_set_ht40_enable(DBusMessage *message,
+						 struct wpa_supplicant *wpa_s)
+{
+#ifdef CONFIG_HT_OVERRIDES
+	DBusMessage *reply = NULL;
+	const char *op;
+	dbus_bool_t enable;
+	char *iface = NULL, *net_id = NULL;
+	int id;
+	struct wpa_ssid *ssid;
+
+	if (!dbus_message_get_args(message, NULL,
+				   DBUS_TYPE_OBJECT_PATH, &op,
+				   DBUS_TYPE_BOOLEAN, &enable,
+				   DBUS_TYPE_INVALID))
+		return wpas_dbus_error_invalid_args(message, NULL);
+
+	/* Extract the network ID and ensure the network */
+	/* is actually a child of this interface */
+	iface = wpas_dbus_new_decompose_object_path(op, 0, &net_id, NULL);
+	if (iface == NULL || net_id == NULL ||
+	    os_strcmp(iface, wpa_s->dbus_new_path) != 0) {
+		reply = wpas_dbus_error_invalid_args(message, op);
+		goto out;
+	}
+
+	errno = 0;
+	id = strtoul(net_id, NULL, 10);
+	if (errno != 0) {
+		reply = wpas_dbus_error_invalid_args(message, op);
+		goto out;
+	}
+
+	ssid = wpa_config_get_network(wpa_s->conf, id);
+	if (ssid == NULL) {
+		reply = wpas_dbus_error_network_unknown(message);
+		goto out;
+	}
+
+	if (enable)
+		ssid->disable_ht40 = 0;
+	else
+		ssid->disable_ht40 = 1;
+
+out:
+	os_free(iface);
+	os_free(net_id);
+	return reply;
+#else /* CONFIG_HT_OVERRIDES */
+	return wpas_dbus_error_unknown_error(message,
+					     "HT Overrides not supported");
+#endif /* CONFIG_HT_OVERRIDES */
+}
+
 /*
  * wpas_dbus_handler_flush_bss - Flush the BSS cache
  * @message: Pointer to incoming dbus message
diff --git a/wpa_supplicant/dbus/dbus_new_handlers.h b/wpa_supplicant/dbus/dbus_new_handlers.h
index 7cf996f..51e2049 100644
--- a/wpa_supplicant/dbus/dbus_new_handlers.h
+++ b/wpa_supplicant/dbus/dbus_new_handlers.h
@@ -133,6 +133,9 @@ DBusMessage * wpas_dbus_handler_set_pkcs11_engine_and_module_path(
 DBusMessage * wpas_dbus_handler_enable_high_bitrates(
 	DBusMessage *message, struct wpa_supplicant *wpa_s);
 
+DBusMessage * wpas_dbus_handler_set_ht40_enable(DBusMessage *message,
+						struct wpa_supplicant *wpa_s);
+
 DBusMessage * wpas_dbus_handler_flush_bss(DBusMessage *message,
 					  struct wpa_supplicant *wpa_s);
 
diff --git a/wpa_supplicant/sme.c b/wpa_supplicant/sme.c
index 36b4f87..239322e 100644
--- a/wpa_supplicant/sme.c
+++ b/wpa_supplicant/sme.c
@@ -1209,6 +1209,12 @@ void sme_sched_obss_scan(struct wpa_supplicant *wpa_s, int enable)
 	    ssid == NULL || ssid->mode != IEEE80211_MODE_INFRA)
 		return;
 
+#ifdef CONFIG_HT_OVERRIDES
+	/* Check if HT40 is disabled on this network by the user. */
+	if (ssid->disable_ht40)
+		return;
+#endif /* CONFIG_HT_OVERRIDES */
+
 	if (!wpa_s->hw.modes)
 		return;
 
-- 
2.2.0.rc0.207.ga3a616c

