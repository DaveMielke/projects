From f1a3d0c463892376f9ed59490162d9afa2d8becd Mon Sep 17 00:00:00 2001
From: Paul Stewart <pstew@chromium.org>
Date: Thu, 13 Sep 2012 15:41:59 -0700
Subject: [PATCH] CHROMIUMOS: bgscan_simple: set maximum fast-scans

The maximum number of fast scans is currently computed by
counting the number of fast scans that can occur within
a long scan period.  ChromeOS can sometimes specify a very
lengthy long scan period.  To prevent this from causing us
to do a great number of background scans, provide an absolute
maximum for short scans.

BUG=chrome-os-partner:14041
TEST=Run on real machine starting off in a low-signal state,
observe backoff to long scan interval after 5 scans.

Change-Id: Ib9d408b0fe343fa1014f87cfc5a5c8a266d3515a
Reviewed-on: https://gerrit.chromium.org/gerrit/33236
Commit-Ready: Paul Stewart <pstew@chromium.org>
Reviewed-by: Paul Stewart <pstew@chromium.org>
Tested-by: Paul Stewart <pstew@chromium.org>
---
 wpa_supplicant/bgscan_simple.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/wpa_supplicant/bgscan_simple.c b/wpa_supplicant/bgscan_simple.c
index 10c1b65..131b584 100644
--- a/wpa_supplicant/bgscan_simple.c
+++ b/wpa_supplicant/bgscan_simple.c
@@ -18,6 +18,8 @@
 #include "bgscan.h"
 #include "bgscan_i.h"
 
+#define SHORT_SCAN_LIMIT 5
+
 struct bgscan_simple_data {
 	struct wpa_supplicant *wpa_s;
 	const struct wpa_ssid *ssid;
@@ -111,8 +113,9 @@ static void bgscan_simple_timeout(void *eloop_ctx, void *timeout_ctx)
 		if (data->scan_interval == data->short_interval) {
 			data->short_scan_count++;
 			/*
-			 * Spend at most the duration of a long scan interval
-			 * scanning at the short scan interval. After that,
+			 * Spend at most the lesser of the duration of a
+			 * long scan interval scanning or SHORT_SCAN_LIMIT
+			 * scans at the short scan interval.  After that,
 			 * revert to the long scan interval.
 			 */
 			if (data->short_scan_count > data->max_short_scans) {
@@ -252,6 +255,8 @@ static void * bgscan_simple_init(struct wpa_supplicant *wpa_s,
 
 	data->scan_interval = data->short_interval;
 	data->max_short_scans = data->long_interval / data->short_interval + 1;
+	if (data->max_short_scans > SHORT_SCAN_LIMIT)
+		data->max_short_scans = SHORT_SCAN_LIMIT;
 	if (data->signal_threshold) {
 		struct wpa_signal_info siginfo;
 
-- 
2.2.0.rc0.207.ga3a616c

