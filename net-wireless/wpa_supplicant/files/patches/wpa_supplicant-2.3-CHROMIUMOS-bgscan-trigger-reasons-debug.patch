From c2dfce98609860ed7cfc21f15b2c5ca10de62976 Mon Sep 17 00:00:00 2001
From: Roshan Pius <rpius@google.com>
Date: Mon, 4 May 2015 15:20:06 -0700
Subject: [PATCH] bgscan: Add bgscan reasons to log why the scan was triggered.

Adding a reasons string in the timeout context so that we can log why
the background scan was initiated.

diff --git a/wpa_supplicant/bgscan_simple.c b/wpa_supplicant/bgscan_simple.c
index a467cc5..5ecb4ff 100644
--- a/wpa_supplicant/bgscan_simple.c
+++ b/wpa_supplicant/bgscan_simple.c
@@ -17,6 +17,7 @@
 #include "scan.h"
 #include "bgscan.h"
 
+
 struct bgscan_simple_data {
 	struct wpa_supplicant *wpa_s;
 	const struct wpa_ssid *ssid;
@@ -102,13 +103,16 @@
 	 */
 	params.low_priority = !wpa_supplicant_need_scan_results(wpa_s);
 
-	wpa_printf(MSG_DEBUG, "bgscan simple: Request a background scan");
+ 	wpa_printf(MSG_DEBUG, "bgscan simple: Request a background scan "
+ 		   "with reason %s",
+ 		   timeout_ctx ? (char *)timeout_ctx : "None");
 	if (params.freqs != NULL)
 		log_freqs("Scanning", params.freqs);
 	if (wpa_supplicant_trigger_scan(wpa_s, &params)) {
 		wpa_printf(MSG_DEBUG, "bgscan simple: Failed to trigger scan");
 		eloop_register_timeout(data->scan_interval, 0,
-				       bgscan_simple_timeout, data, NULL);
+ 				       bgscan_simple_timeout, data,
+ 				       "failed-scan");
 	} else {
 		if (data->scan_interval == data->short_interval) {
 			data->short_scan_count++;
@@ -318,6 +322,7 @@
 				     struct wpa_scan_results *scan_res)
 {
 	struct bgscan_simple_data *data = priv;
+ 	char *bgscan_reason = NULL;
 
 	wpa_printf(MSG_DEBUG, "bgscan simple: scan result notification");
 
@@ -349,8 +354,12 @@
 	if (data->signal_threshold)
 		bgscan_poll_signal_monitor(&data->signal_monitor, NULL);
 	eloop_cancel_timeout(bgscan_simple_timeout, data, NULL);
+ 	if (data->scan_interval == data->short_interval)
+ 		bgscan_reason = "short-interval-scan";
+ 	else
+ 		bgscan_reason = "long-interval-scan";
 	eloop_register_timeout(data->scan_interval, 0, bgscan_simple_timeout,
-			       data, NULL);
+ 			       data, bgscan_reason);
 
 	/*
 	 * A more advanced bgscan could process scan results internally, select
@@ -245,7 +254,7 @@ static void bgscan_simple_notify_signal_change(void *priv, int above,
 					     NULL);
 			eloop_register_timeout(data->scan_interval, 0,
 					       bgscan_simple_timeout, data,
-					       NULL);
+					       "signal-below-short-interval-scan");
 		}
 	} else if (data->scan_interval == data->short_interval && above) {
 		wpa_printf(MSG_DEBUG, "bgscan simple: Start using long bgscan "
@@ -253,7 +262,8 @@ static void bgscan_simple_notify_signal_change(void *priv, int above,
 		data->scan_interval = data->long_interval;
 		eloop_cancel_timeout(bgscan_simple_timeout, data, NULL);
 		eloop_register_timeout(data->scan_interval, 0,
-				       bgscan_simple_timeout, data, NULL);
+				       bgscan_simple_timeout, data,
+				       "signal-above-long-interval-scan");
 	} else if (!above) {
 		/*
 		 * Signal dropped further 4 dB. Request a new scan if we have
@@ -268,7 +278,7 @@ static void bgscan_simple_notify_signal_change(void *priv, int above,
 		wpa_printf(MSG_DEBUG, "bgscan simple: Trigger immediate scan");
 		eloop_cancel_timeout(bgscan_simple_timeout, data, NULL);
 		eloop_register_timeout(0, 0, bgscan_simple_timeout, data,
-				       NULL);
+				       "signal-below-immediate-scan");
 	}
 }
 
